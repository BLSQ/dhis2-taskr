{"version":3,"sources":["DocPage.js"],"names":["docPath","slugify","s","encodeURIComponent","String","trim","toLowerCase","replace","DocPage","match","markdown","setMarkdown","useState","useEffect","fetch","then","response","text","fixedText","split","join","window","location","toString","MarkdownIt","use","MarkdownItAnchor","MarkDownItHighlight","inline","render","console","log","params","section","setTimeout","ele","document","getElementById","scrollTo","offsetLeft","offsetTop","display","width","justifyContent","flexWrap","alignItems","alignContent","className","dangerouslySetInnerHTML","__html"],"mappings":"gJAAA,4FAOA,MAAMA,EACJ,iEAGIC,EAAUC,GACdC,mBACEC,OAAOF,GACJG,OACAC,cACAC,QAAQ,KAAM,IACdA,QAAQ,KAAM,KACdA,QAAQ,KAAM,IACdA,QAAQ,MAAO,IACfA,QAAQ,MAAO,IACfA,QAAQ,OAAQ,MAwDRC,UArDf,UAAiB,MAAEC,IACjB,IAAKC,EAAUC,GAAeC,mBAAS,MAiCvC,OAhCAC,qBAAU,KACRC,MAlBed,gFAmBZe,MAAKC,GACGA,EAASC,SAEjBF,MAAKE,IAEJ,IAAIC,EAAYD,EACbE,MAAM,OACNC,KACC,KAAOC,OAAOC,SAASC,WAAWhB,QAAQ,eAAgB,WAE9DW,EAAYA,EAAUX,QANJ,QAMuBP,GAEzCW,GACE,IAAIa,KACDC,IAAIC,IAAkB,CAAEzB,YACxBwB,IAAIE,IAAqB,CAAEC,QAAQ,IACnCC,OAAOX,IAEZY,QAAQC,IAAItB,GACRA,EAAMuB,OAAOC,SACfC,YAAW,WACT,IAAIC,EAAMC,SAASC,eAAe5B,EAAMuB,OAAOC,SAC3CE,GACFd,OAAOiB,SAASH,EAAII,WAAYJ,EAAIK,aAErC,UAGR,CAAC/B,EAAOE,IAGT,mCACE,cAAC,IAAD,CACE8B,QAAQ,OACRC,MAAM,OACNC,eAAe,aACfC,SAAS,OACTC,WAAW,aACXC,aAAa,eANf,SAQE,yBACEC,UAAU,gBACVC,wBAAyB,CAAEC,OAAQvC","file":"static/js/7.7bed1c96.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport MarkdownIt from \"markdown-it\";\nimport MarkdownItAnchor from \"markdown-it-anchor\";\nimport MarkDownItHighlight from \"markdown-it-highlightjs\";\nimport \"./DocPage.css\";\n\nconst docPath =\n  \"https://raw.githubusercontent.com/BLSQ/dhis2-taskr/master/doc/\";\nconst readmePath = docPath + \"user-manual.md\";\n\nconst slugify = s =>\n  encodeURIComponent(\n    String(s)\n      .trim()\n      .toLowerCase()\n      .replace(/\"/g, \"\")\n      .replace(/:/g, \" \")\n      .replace(/,/g, \"\")\n      .replace(/\\?/g, \"\")\n      .replace(/\\./g, \"\")\n      .replace(/\\s+/g, \"-\")\n  );\n\nfunction DocPage({ match }) {\n  let [markdown, setMarkdown] = useState(null);\n  useEffect(() => {\n    fetch(readmePath)\n      .then(response => {\n        return response.text();\n      })\n      .then(text => {\n        const toReplace = /\\.\\//g;\n        let fixedText = text\n          .split(\"](#\")\n          .join(\n            \"](\" + window.location.toString().replace(/\\/#\\/doc(.*)/, \"/#doc/\")\n          );\n        fixedText = fixedText.replace(toReplace, docPath);\n\n        setMarkdown(\n          new MarkdownIt()\n            .use(MarkdownItAnchor, { slugify })\n            .use(MarkDownItHighlight, { inline: true })\n            .render(fixedText)\n        );\n        console.log(match);\n        if (match.params.section) {\n          setTimeout(function() {\n            var ele = document.getElementById(match.params.section);\n            if (ele) {\n              window.scrollTo(ele.offsetLeft, ele.offsetTop);\n            }\n          }, 500);\n        }\n      });\n  }, [match, setMarkdown]);\n\n  return (\n    <>\n      <Box\n        display=\"flex\"\n        width=\"100%\"\n        justifyContent=\"flex-start\"\n        flexWrap=\"wrap\"\n        alignItems=\"flex-start\"\n        alignContent=\"space-around\"\n      >\n        <article\n          className=\"markdown-body\"\n          dangerouslySetInnerHTML={{ __html: markdown }}\n        ></article>\n      </Box>\n    </>\n  );\n}\n\nexport default DocPage;\n"],"sourceRoot":""}