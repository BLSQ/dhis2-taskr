{"version":3,"sources":["leaflet/CoordinatesControl.js","OrgunitMap.js","IdyllReport.js"],"names":["L","Control","MousePosition","extend","_pos","options","position","separator","emptyString","lngFirst","numDigits","lngFormatter","undefined","latFormatter","formatter","prefix","wrapLng","onAdd","map","this","_container","DomUtil","create","DomEvent","disableClickPropagation","on","_onMouseMove","innerHTML","onRemove","off","getLatLng","e","latlng","wrap","lng","lat","value","prefixAndValue","lngValue","latValue","Util","formatNum","Map","mergeOptions","positionControl","addInitHook","addControl","control","mousePosition","CoordinatesControl","MapControl","constructor","props","super","createLeafletElement","addTo","leaflet","withLeaflet","getCircularReplacer","seen","WeakSet","key","has","add","shapesFeatureType","maps","name","attribution","url","isString","r","getRandomColor","color","i","Math","floor","random","OrgunitMap","lines","showableMap","width","height","showLayers","status","setStatus","useState","clicked","setClicked","selectedLayer","setSelectedLayer","rawPoints","setRawPoints","React","pointMarkers","setPointMarkers","rawGeojsons","setRawGeojsons","mapRef","useRef","handleClick","current","bound","leafletElement","length","points","result","Infinity","point","coord","bboxForPoints","southWest","northEast","bounds","fitBounds","document","getElementsByClassName","style","zIndex","bboxPolygon","functionPoly","turf","useEffect","setTimeout","event","throttle","originalEvent","currentTarget","target","nextTarget","nodeName","toLowerCase","classList","indexOf","ev","MouseEvent","type","dispatchEvent","_stopped","stop","newRawPoints","filter","l","coordinates","coordinate","geometry","latitude","longitude","startsWith","newGeojsons","includes","line","JSON","parse","ignored","properties","g","markers","index","latlong","reverse","slice","id","iconColor","tooltip","renderToString","Object","keys","k","AsPrimitive","customIcon","geojsons","opacity","fillColor","weight","fillOpacity","dashArray","GeoJSON","data","title","stringify","onClick","feature","removed","node","pointerEvents","elementFromPoint","clientX","clientY","onFeature","className","display","FormControl","InputLabel","Select","onChange","val","m","MenuItem","Button","preferCanvas","doubleClickZoom","center","zoom","ref","padding","TileLayer","interactive","LandscapeOrientation","Fragment","PortraitOrientation","MyLoop","Component","render","children","mapChildren","child","newProps","assign","reduce","elm","cloneElement","availableComponents","components","IdyllVegaLite","AsJSON","idyll","hasError","updateProps","otherProps","FlexBox","flexWrap","justifyContent","alignItems","item","DataTable","label","perPage","selectableRows","excludedColumns","selectedRows","setSelectedRows","results","keySet","Set","forEach","Array","from","filename","replace","childrenWithProps","Children","isValidElement","theme","createMuiTheme","overrides","MUIDataTable","paper","marginRight","columns","column","split","customBodyRender","filterType","print","responsive","downloadOptions","rowsPerPageOptions","rowsPerPage","selectToolbarPlacement","onRowSelectionChange","currentRowsSelected","allRowsSelected","rowsSelected","customToolbar","DataTableAction","PageOrientation","orientation","PageBreak","Dhis2Item","iitem","propName","itemName","html","setHtml","imgUrl","setImgUrl","prefixUrl","resourceName","fetchData","async","fetch","then","text","dangerouslySetInnerHTML","__html","src","alt","Dhis2Content","contentType","content","IdyllReport","markup","dataSets","initialState","asVars","registeredCount"],"mappings":"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","file":"static/js/8.57fd1806.chunk.js","sourcesContent":["import L from \"leaflet\";\nimport { withLeaflet, MapControl } from \"react-leaflet\";\n\nL.Control.MousePosition = L.Control.extend({\n  _pos: null,\n\n  options: {\n    position: \"bottomleft\",\n    separator: \" : \",\n    emptyString: \"Unavailable\",\n    lngFirst: false,\n    numDigits: 5,\n    lngFormatter: undefined,\n    latFormatter: undefined,\n    formatter: undefined,\n    prefix: \"\",\n    wrapLng: true\n  },\n\n  onAdd: function(map) {\n    this._container = L.DomUtil.create(\"div\", \"leaflet-control-mouseposition\");\n    L.DomEvent.disableClickPropagation(this._container);\n    map.on(\"mousemove\", this._onMouseMove, this);\n    this._container.innerHTML = this.options.emptyString;\n    return this._container;\n  },\n\n  onRemove: function(map) {\n    map.off(\"mousemove\", this._onMouseMove);\n  },\n\n  getLatLng: function() {\n    return this._pos;\n  },\n\n  _onMouseMove: function(e) {\n    this._pos = e.latlng.wrap();\n    var lngValue = this.options.wrapLng ? e.latlng.wrap().lng : e.latlng.lng;\n    var latValue = e.latlng.lat;\n    var lng;\n    var lat;\n    var value;\n    var prefixAndValue;\n\n    if (this.options.formatter) {\n      prefixAndValue = this.options.formatter(lngValue, latValue);\n    } else {\n      lng = this.options.lngFormatter\n        ? this.options.lngFormatter(lngValue)\n        : L.Util.formatNum(lngValue, this.options.numDigits);\n      lat = this.options.latFormatter\n        ? this.options.latFormatter(latValue)\n        : L.Util.formatNum(latValue, this.options.numDigits);\n      value = this.options.lngFirst\n        ? lng + this.options.separator + lat\n        : lat + this.options.separator + lng;\n      prefixAndValue = this.options.prefix + \" \" + value;\n    }\n\n    this._container.innerHTML = prefixAndValue;\n  }\n});\n\nL.Map.mergeOptions({\n  positionControl: false\n});\n\nL.Map.addInitHook(function() {\n  if (this.options.positionControl) {\n    this.positionControl = new L.Control.MousePosition();\n    this.addControl(this.positionControl);\n  }\n});\n\nL.control.mousePosition = function(options) {\n  return new L.Control.MousePosition(options);\n};\n\nclass CoordinatesControl extends MapControl {\n  control;\n\n  constructor(props) {\n    super(props);\n  }\n\n  createLeafletElement(props) {\n    this.control = L.control.mousePosition().addTo(props.leaflet.map);\n    return this.control;\n  }\n}\n\nexport default withLeaflet(CoordinatesControl);\n","import * as turf from \"@turf/turf\";\nimport PixiOverlay from \"react-leaflet-pixi-overlay\";\nimport { renderToString } from \"react-dom/server\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { AsPrimitive } from \"./AsPrimitive\";\nimport { Map, TileLayer, GeoJSON } from \"react-leaflet\";\nimport * as L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport CoordinatesControl from \"./leaflet/CoordinatesControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Button from \"@material-ui/core/Button\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\n\nconst getCircularReplacer = () => {\n  const seen = new WeakSet();\n  return (key, value) => {\n    if (typeof value === \"object\" && value !== null) {\n      if (seen.has(value)) {\n        return;\n      }\n      seen.add(value);\n    }\n    return value;\n  };\n};\n\nconst shapesFeatureType = [\"LineString\", \"Polygon\", \"MultiPolygon\"];\n\nconst maps = [\n  {\n    name: \"Thunderforest - Landscapes\",\n    attribution: \"Thunderforest and OpenStreetMap contributors.\",\n    url:\n      \"https://{s}.tile.thunderforest.com/landscape/{z}/{x}/{y}{r}.png?apikey=7c352c8ff1244dd8b732e349e0b0fe8d\",\n  },\n  {\n    name: \"Thunderforest - Outdoors\",\n    attribution: \"Thunderforest and OpenStreetMap contributors.\",\n    url:\n      \"https://{s}.tile.thunderforest.com/outdoors/{z}/{x}/{y}{r}.png?apikey=7c352c8ff1244dd8b732e349e0b0fe8d\",\n  },\n  {\n    name: \"Stamen Design - Toner\",\n    attribution: `Map tiles by <a href=\"http://stamen.com\">Stamen Design</a>, under <a href=\"http://creativecommons.org/licenses/by/3.0\">CC BY 3.0</a>. Data by <a href=\"http://openstreetmap.org\">OpenStreetMap</a>, under <a href=\"http://www.openstreetmap.org/copyright\">ODbL</a>.`,\n    url: \"https://stamen-tiles-{s}.a.ssl.fastly.net/toner/{z}/{x}/{y}.png\",\n  },\n  {\n    name: \"Stamen Design - Water color\",\n    url: \"https://stamen-tiles-{s}.a.ssl.fastly.net/watercolor/{z}/{x}/{y}.png\",\n    attribution:\n      'Map tiles by <a href=\"http://stamen.com\">Stamen Design</a>, <a href=\"http://creativecommons.org/licenses/by/3.0\">CC BY 3.0</a> &mdash; Map data &copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>',\n  },\n  {\n    name: \"Google maps - Satelite\",\n    url: \"http://mt3.google.com/vt/lyrs=s&x={x}&y={y}&z={z}\",\n    attribution: \"Google\",\n  },\n];\n\nconst bboxForPoints = (points) => {\n  const result = [Infinity, Infinity, -Infinity, -Infinity];\n  for (let point of points) {\n    let coord = point.position;\n    if (result[0] > coord[0]) {\n      result[0] = coord[0];\n    }\n    if (result[1] > coord[1]) {\n      result[1] = coord[1];\n    }\n    if (result[2] < coord[0]) {\n      result[2] = coord[0];\n    }\n    if (result[3] < coord[1]) {\n      result[3] = coord[1];\n    }\n  }\n\n  return result;\n};\n\nfunction isString(r) {\n  return typeof r == \"string\";\n}\nfunction getRandomColor() {\n  var letters = \"0123456789ABCDEF\";\n  var color = \"#\";\n  for (var i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n}\n\nfunction OrgunitMap({\n  lines,\n  position,\n  showableMap,\n  width,\n  height,\n  showLayers,\n}) {\n  const [status, setStatus] = useState(\"\");\n  const [clicked, setClicked] = useState(\"\");\n  const [selectedLayer, setSelectedLayer] = useState(maps[0]);\n  const [rawPoints, setRawPoints] = React.useState(undefined);\n  const [pointMarkers, setPointMarkers] = React.useState(undefined);\n  const [rawGeojsons, setRawGeojsons] = React.useState(undefined);\n  const mapRef = useRef(null);\n  const handleClick = () => {\n    if (mapRef && mapRef.current) {\n      let bound = undefined;\n      const map = mapRef.current.leafletElement;\n      if (pointMarkers && pointMarkers.length > 0) {\n        const bbox = bboxForPoints(pointMarkers);\n        bound = bbox;\n      }\n\n      if (bound && bound[0] !== Infinity) {\n        const southWest = L.latLng(bound[0], bound[1]);\n        const northEast = L.latLng(bound[2], bound[3]);\n        const bounds = L.latLngBounds(southWest, northEast);\n        map.fitBounds(bounds);\n        let nextTarget = document.getElementsByClassName(\n          \"leaflet-pixi-overlay\"\n        )[0];\n        nextTarget.style.zIndex = -1;\n      } else if (rawGeojsons && rawGeojsons.length > 0) {\n        const functionPoly = turf.bbox;\n        // only geojson\n\n        var bboxPolygon = functionPoly(rawGeojsons[0]);\n\n        if (bboxPolygon) {\n          const southWest = L.latLng(bboxPolygon[1], bboxPolygon[0]);\n          const northEast = L.latLng(bboxPolygon[3], bboxPolygon[2]);\n          const bounds = L.latLngBounds(southWest, northEast);\n\n          map.fitBounds(bounds);\n        }\n      }\n    }\n  };\n  useEffect(() => {\n    setTimeout(() => {\n      handleClick();\n    }, 2000);\n  }, [mapRef, pointMarkers, rawGeojsons]);\n\n  useEffect(() => {\n    if (mapRef && mapRef.current && mapRef.current.leafletElement) {\n      const map = mapRef.current.leafletElement;\n      map.on(\"click\", function(event) {\n        let nextTarget = document.getElementsByClassName(\n          \"leaflet-pixi-overlay\"\n        )[0];\n        nextTarget.style.zIndex = -1;\n      });\n      map.on(\n        \"mousemove\",\n        L.Util.throttle(function(event) {\n          if (event.originalEvent) {\n            // get the target pane\n            var currentTarget = event.originalEvent.target;\n            var stopped;\n            var removed;\n            // attempt to grab the next layer below\n            let nextTarget = document.getElementsByClassName(\n              \"leaflet-pixi-overlay\"\n            )[0];\n\n            /*let nextTarget = document.elementFromPoint(\n                event.originalEvent.clientX,\n                event.originalEvent.clientY\n              );*/\n\n            // we keep drilling down until we get stopped,\n            // or we reach the map container itself\n            if (\n              nextTarget &&\n              nextTarget.nodeName.toLowerCase() !== \"body\" &&\n              nextTarget.classList.value.indexOf(\"leaflet-container\") === -1 &&\n              currentTarget !== nextTarget\n            ) {\n              var ev = new MouseEvent(event.type, event.originalEvent);\n              nextTarget.style.zIndex = 1000;\n\n              stopped = !nextTarget.dispatchEvent(ev);\n              if (stopped || ev._stopped) {\n                L.DomEvent.stop(event);\n              }\n            }\n          }\n        }, 32)\n      );\n    }\n  }, [mapRef]);\n  useEffect(() => {\n    if (lines == undefined) {\n      return;\n    }\n    const newRawPoints = lines.filter((l) => {\n      if (l == undefined) {\n        return false;\n      }\n      if (\n        l.coordinates === undefined &&\n        l.coordinate === undefined &&\n        l.geometry === undefined\n      ) {\n        return false;\n      }\n      const isEventCoordinates =\n        l.coordinate && l.coordinate.latitude && l.coordinate.longitude;\n      if (isEventCoordinates) {\n        return true;\n      }\n      if (l.geometry && l.geometry.type == \"Point\") {\n        return true;\n      }\n      if (l.coordinates === undefined) {\n        return false;\n      }\n      return (\n        isString(l.coordinates) &&\n        !l.coordinates.startsWith(\"[[\") &&\n        l.coordinates != \"\"\n      );\n    });\n\n    const newGeojsons = lines\n      .filter(\n        (l) =>\n          (l.coordinates &&\n            isString(l.coordinates) &&\n            l.coordinates.startsWith(\"[[\")) ||\n          (l.geometry &&\n            l.geometry.type &&\n            shapesFeatureType.includes(l.geometry.type))\n      )\n      .map((line) => {\n        let geometry = line.geometry;\n        try {\n          geometry = turf.polygon(JSON.parse(line.coordinates));\n        } catch (ignored) {\n          try {\n            geometry = turf.multiPolygon(JSON.parse(line.coordinates));\n          } catch (ignored) {}\n        }\n        if (geometry) {\n          if (geometry.properties == undefined) {\n            geometry.properties = {};\n          }\n          if (geometry.properties) {\n            geometry.properties.line = line;\n          }\n        }\n        return geometry;\n      })\n      .filter((g) => g);\n\n    const markers = newRawPoints.map((line, index) => {\n      const latlong =\n        line.coordinate && line.coordinate.latitude && line.coordinate.longitude\n          ? [line.coordinate.latitude, line.coordinate.longitude]\n          : line.coordinates\n          ? JSON.parse(line.coordinates).reverse()\n          : line.geometry && line.geometry.coordinates.slice(0).reverse();\n      const color = line.color || \"red\";\n      return {\n        id: \"points\" + index,\n        key: \"points\" + index,\n        iconColor: color,\n        position: latlong,\n        tooltip: () => {\n          return renderToString(\n            <div>\n              {Object.keys(line).map((k) => {\n                return (\n                  <div>\n                    <b>{k}</b> <AsPrimitive value={line[k]} />\n                  </div>\n                );\n              })}\n            </div>\n          );\n        },\n\n        customIcon:\n          '<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"' +\n          color +\n          '\" width=\"5\" height=\"5\" viewBox=\"0 0 5 5\"><circle cx=\"0\" cy=\"0\" r=\"5\" stroke=\"' +\n          color +\n          '\" stroke-width=\"5\" fill=\"' +\n          color +\n          '\" /></svg>',\n      };\n    });\n    setPointMarkers(markers);\n    setRawGeojsons(newGeojsons);\n    setRawPoints(newRawPoints);\n    handleClick();\n  }, [lines]);\n  if (lines == undefined || lines == null) {\n    return <></>;\n  }\n\n  if (!showableMap) {\n    return (\n      <p>\n        Map will show if the lines contains a 'coordinates' or 'geometry' field\n      </p>\n    );\n  }\n\n  function onFeature(feature, event) {\n    if (event.originalEvent._stopped) {\n      return;\n    }\n\n    // get the target pane\n    var currentTarget = event.originalEvent.target;\n    var stopped;\n    var removed;\n\n    // hide the target node\n    removed = {\n      node: currentTarget,\n      pointerEvents: currentTarget.style.pointerEvents,\n    };\n    currentTarget.style.pointerEvents = \"none\";\n\n    // attempt to grab the next layer below\n    let nextTarget = document.elementFromPoint(\n      event.originalEvent.clientX,\n      event.originalEvent.clientY\n    );\n\n    // we keep drilling down until we get stopped,\n    // or we reach the map container itself\n    //nextTarget = mapRef.current.container.children[0].children[2].children[1].children[0]\n    if (\n      nextTarget &&\n      nextTarget.nodeName.toLowerCase() !== \"body\" &&\n      nextTarget.classList.value.indexOf(\"leaflet-container\") === -1\n    ) {\n      var ev = new MouseEvent(event.originalEvent.type, event.originalEvent);\n      stopped = !nextTarget.dispatchEvent(ev);\n      if (stopped || ev._stopped) {\n        L.DomEvent.stop(event);\n      }\n    }\n\n    // restore pointerEvents\n    removed.node.style.pointerEvents = removed.pointerEvents;\n    setClicked(feature);\n  }\n\n  const geojsons =\n    rawGeojsons == undefined\n      ? []\n      : rawGeojsons\n          .filter(\n            (geometry) =>\n              geometry && geometry.properties && geometry.properties.line\n          )\n          .map((geometry, index) => {\n            const line = geometry.properties.line;\n            const opacity = geometry.type == \"LineString\" ? 1 : 0.3;\n            line.fillColor = line.fillColor || getRandomColor();\n            const style = {\n              fillColor: line.fillColor,\n              color: line.color || getRandomColor(),\n              weight: line.opacity || opacity,\n              opacity: line.opacity || opacity,\n              fillOpacity: line.opacity || opacity,\n            };\n            if (clicked == line) {\n              style.weight = 3;\n              style.opacity = 0.8;\n              style.dashArray = \"5,5\";\n            }\n            return (\n              <GeoJSON\n                data={geometry}\n                key={\"parent-\" + index + (clicked == line ? \"clicked\" : \"none\")}\n                style={style}\n                title={JSON.stringify(line, getCircularReplacer())}\n                onClick={(event) => {\n                  onFeature(line, event);\n                }}\n              />\n            );\n          });\n\n  const mapSelected = (event, val) => {\n    setSelectedLayer(val.props.value);\n  };\n\n  return (\n    <div className=\"avoid-page-break\">\n      <p>{status}</p>\n      {showLayers && (\n        <div\n          style={{\n            display: \"flex\",\n          }}\n        >\n          <FormControl>\n            <InputLabel>Layer</InputLabel>\n            <Select onChange={mapSelected} value={selectedLayer}>\n              {maps.map((m) => (\n                <MenuItem value={m}>{m.name}</MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n          <Button onClick={handleClick}>Fit</Button>\n        </div>\n      )}\n      <div>\n        {lines.length} records. {rawPoints ? rawPoints.length : \"?\"} points\n        displayed. {geojsons.length} zones displayed.{\" \"}\n        {clicked &&\n          Object.keys(clicked)\n            .filter((k) => ![\"geometry\", \"coordinates\"].includes(k))\n            .map((k) => {\n              return (\n                <div>\n                  <b>{k}</b> <AsPrimitive value={clicked[k]} />\n                </div>\n              );\n            })}\n      </div>\n\n      {((pointMarkers && pointMarkers[0]) || (geojsons && geojsons[0])) && (\n        <Map\n          preferCanvas={true}\n          doubleClickZoom={false}\n          center={position}\n          zoom={3}\n          ref={mapRef}\n          style={{\n            width: width || \"80%\",\n            height: height || \"900px\",\n            padding: \"0px\",\n          }}\n        >\n          <TileLayer {...selectedLayer}></TileLayer>\n          <CoordinatesControl position=\"top\" coordinates=\"decimal\" />\n\n          {pointMarkers && pointMarkers[0] && (\n            <PixiOverlay key=\"4\" markers={pointMarkers} interactive={true} />\n          )}\n\n          {geojsons}\n        </Map>\n      )}\n    </div>\n  );\n}\n\nexport default OrgunitMap;\n","import React, { useEffect, useState } from \"react\";\nimport MUIDataTable from \"mui-datatables\";\nimport IdyllDocument from \"idyll-document\";\nimport { mapChildren } from \"idyll-component-children\";\nimport * as components from \"idyll-components\";\nimport IdyllVegaLite from \"idyll-vega-lite\";\nimport { AsPrimitive } from \"./AsPrimitive\";\nimport OrgunitBasicMap from \"./OrgunitMap\";\nimport ErrorBoundary from \"./ErrorBoundary\";\nimport { createMuiTheme, MuiThemeProvider } from \"@material-ui/core/styles\";\n\nimport Button from \"@material-ui/core/Button\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\nconst LandscapeOrientation = () => (\n  <React.Fragment>\n    <style type=\"text/css\">\n      {\n        \"@media print{@page {size: A4 landscape}; .reportPage {width: 100%; margin: 0; };\"\n      }\n    </style>\n    <style type=\"text/css\">\n      {\n        \"@media screen {  .reportPage {    width: 29.7cm;    margin: auto  } } ;\"\n      }\n    </style>\n  </React.Fragment>\n);\n\nconst PortraitOrientation = () => (\n  <React.Fragment>\n    <style type=\"text/css\">\n      {\n        \"@media print{@page {size: A4 portrait}; .reportPage {width: 100%; margin: 0; }\"\n      }\n    </style>\n    <style type=\"text/css\">\n      {\"@media screen {  .reportPage {    width: 21cm;    margin: auto  } } \"}\n    </style>\n  </React.Fragment>\n);\n\nconst PageOrientation = props => (\n  <React.Fragment>\n    {props.orientation === \"landscape\" && <LandscapeOrientation />}\n    {props.orientation === \"portrait\" && <PortraitOrientation />}\n  </React.Fragment>\n);\n\nconst PageBreak = props => <div className=\"pagebreak\"> </div>;\n\nconst AsJSON = props => {\n  const { idyll, hasError, updateProps, data, ...otherProps } = props;\n\n  return (\n    <div>\n      <pre>{JSON.stringify(data, null, 2)}</pre>\n    </div>\n  );\n};\n\nconst FlexBox = props => {\n  const { idyll, hasError, updateProps, data, ...otherProps } = props;\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        justifyContent: \"space-evenly\",\n        alignItems: \"flex-end\"\n      }}\n    >\n      {props.children.map(item => (\n        <div style={{ padding: \"10px\" }}>{item}</div>\n      ))}\n    </div>\n  );\n};\n\nconst OrgunitMap = props => {\n  return (\n    <OrgunitBasicMap\n      showableMap={true}\n      position={[-12.9487, 9.0131]}\n      width=\"500px\"\n      height=\"500px\"\n      {...props}\n    />\n  );\n};\n\nconst DataTableAction = (props) => {\n  const { label, onClick, selectedRows } = props\n  const handleClick = (e) => {\n    onClick(selectedRows)\n  }\n  return (\n    <Tooltip title={label}>\n      <Button onClick={handleClick}>{label}</Button>\n    </Tooltip>\n  );\n};\n\nconst DataTable = ({ data, label, perPage, selectableRows, children, excludedColumns }) => {\n  const [selectedRows, setSelectedRows] = useState([]);\n  const results = data || [];\n  const keySet = new Set();\n  results.forEach(r => {\n    if (r !== null && r !== undefined) {\n      Object.keys(r).forEach(k => keySet.add(k));\n    }\n  });\n  const keys = Array.from(keySet);\n  const filename = (label || \"Result List\").replace(/\\s/g, \"_\") + \".csv\";\n  const getMuiTheme = () =>\n    createMuiTheme({\n      overrides: {\n        MUIDataTable: {\n          paper: {\n            marginRight: \"50px\"\n          }\n        }\n      }\n    });\n\n    // allows the DataAction to receive the selected rows when clicked\n    const childrenWithProps = React.Children.map(children, child => {\n      const props = { selectedRows };\n      if (React.isValidElement(child)) {\n          return React.cloneElement(child, props);\n      }\n      return child;\n  });\n\n  const determineDisplayColumn = (column) => {\n   const display = excludedColumns.split(\",\").includes(column) ? 'excluded' : 'true'\n   return display\n  }\n\n  return (\n    <MuiThemeProvider theme={getMuiTheme()}>\n      <MUIDataTable\n        title={label || \"Result List\"}\n        data={results}\n        columns={keys.map(k => {\n          return {\n            name: k,\n            options: {\n              filter: true,\n              display: excludedColumns === undefined ? 'true' : determineDisplayColumn(k),\n              customBodyRender: value => <AsPrimitive value={value} />\n            }\n          };\n        })}\n        options={{\n          filterType: \"dropdown\",\n          print: false,\n          responsive: \"scrollFullHeight\",\n          selectableRows: selectableRows || \"none\",\n          downloadOptions: {\n            filename: filename,\n            separator: \",\"\n          },\n          rowsPerPageOptions: [1, 10, 20, 50, 100, 1000],\n          rowsPerPage: perPage || 20,\n          selectToolbarPlacement: \"above\",\n          onRowSelectionChange: (\n            currentRowsSelected,\n            allRowsSelected,\n            rowsSelected\n          ) => {\n            setSelectedRows(rowsSelected.map(index => results[index]));\n          },\n          customToolbar: () => {\n            return  childrenWithProps\n          }\n        }}\n      />\n    </MuiThemeProvider>\n  );\n};\n\nclass MyLoop extends React.Component {\n  render() {\n    const { children, value } = this.props;\n\n    if (children && value) {\n      return value.map(val => {\n        return mapChildren(children, child => {\n          if (typeof child !== \"object\") {\n            return child;\n          }\n          let newProps = Object.assign({}, child.props);\n          newProps = Object.keys(child.props).reduce((props, elm) => {\n            props[\"iitem\"] = val;\n            return props;\n          }, newProps);\n          return React.cloneElement(child, { ...newProps });\n        });\n      });\n    }\n    return null;\n  }\n}\n\nconst Dhis2Content = props => {\n  const item = props.iitem;\n  if (item.contentType === \"html\") {\n    return <div dangerouslySetInnerHTML={{ __html: item.content }} />;\n  } else {\n    return <img src={item.content} alt=\"\"></img>;\n  }\n};\n\nconst Dhis2Item = props => {\n  const item = props.iitem;\n  const propName =\n    item && item.type\n      ? item.type == \"REPORT_TABLE\"\n        ? \"reportTable\"\n        : item.type.toLowerCase()\n      : \"\";\n\n  const itemName = item && item[propName] ? item[propName].name : \"\";\n  const [html, setHtml] = React.useState(\"\");\n  const [imgUrl, setImgUrl] = React.useState(\"\");\n\n  useEffect(() => {\n    if (propName !== \"\") {\n      const prefixUrl = props.prefixUrl || \"../../\";\n      let resourceName = undefined;\n      if (propName == \"reportTable\") {\n        resourceName = \"reportTables\";\n      } else {\n        resourceName = propName.toLowerCase() + \"s\";\n      }\n\n      const url = prefixUrl + resourceName + \"/\" + item[propName].id + \"/data\";\n      const fetchData = async () => {\n        const result = await fetch(url + \".html+css\").then(r => r.text());\n        setHtml(result);\n      };\n      if (propName !== \"reportTable\") {\n        setHtml(\"\");\n        setImgUrl(url + \".png\");\n      } else {\n        fetchData();\n      }\n    }\n  }, [item, propName, props.prefixUrl, setHtml]);\n\n  if (item == undefined) {\n    return <p>hello</p>;\n  }\n  if (propName === \"reportTable\") {\n    return <div dangerouslySetInnerHTML={{ __html: html }} />;\n  } else {\n    return <img src={imgUrl} alt={itemName}></img>;\n  }\n};\n\nconst availableComponents = {\n  ...components,\n  IdyllVegaLite: IdyllVegaLite,\n  AsJSON: AsJSON,\n  OrgunitMap: OrgunitMap,\n  FlexBox: FlexBox,\n  DataTable: DataTable,\n  DataTableAction: DataTableAction,\n  PageOrientation: PageOrientation,\n  PageBreak: PageBreak,\n  MyLoop: MyLoop,\n  Dhis2Item: Dhis2Item,\n  Dhis2Content: Dhis2Content\n};\n\nconst IdyllReport = ({ markup, dataSets }) => {\n  const initialState = {\n    ...dataSets.asVars()\n  };\n\n  return (\n    <ErrorBoundary>\n      <IdyllDocument\n        key={dataSets.registeredCount}\n        theme=\"github\"\n        markup={markup}\n        components={availableComponents}\n        initialState={initialState}\n      />\n    </ErrorBoundary>\n  );\n};\n\nexport default IdyllReport;\n"],"sourceRoot":""}