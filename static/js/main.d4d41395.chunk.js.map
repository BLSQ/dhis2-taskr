{"version":3,"sources":["AsPrimitive.js","ErrorBoundary.js","support/lodash.js","support/FetchInterceptor.js","recipes.js","RecipesPage.js","support/loadRecipes.js","support/Dhis2.js","Stats.js","Results.js","support/JSONApi.js","support/XlsxPopulateOpenAsBlob.js","support/asyncForEach.js","Help.js","support/DatePeriods.js","Params.js","DeleteButton.js","Editor.js","RecipeAlert.js","support/fixChars.js","RecipePage.js","RecipeGistPage.js","AppDrawer.js","App.js","serviceWorker.js","index.js"],"names":["isString","r","AsPrimitive","value","undefined","startsWith","href","target","rel","slice","length","title","rendered","isPrimitive","isBoolean","toString","JSON","stringify","seen","WeakSet","key","has","add","getCircularReplacer","ErrorBoundary","Component","constructor","props","super","this","state","hasError","error","componentDidCatch","info","console","log","setState","render","children","_","downloadFile","data","fileName","fileType","blob","Blob","type","a","document","createElement","download","window","URL","createObjectURL","click","remove","flattenObject","o","except","prefix","result","keepNull","isNumber","isNull","includes","isArray","isPlainObject","i","pref","isEmpty","flattenObjects","objects","map","copyToClipBoard","text","navigator","clipboard","writeText","then","err","clipboardData","setData","renameColumns","columnMapping","obj","mapKeys","reorderColumns","columns","clone","forEach","col","FetchInterceptor","ENVIRONMENT_IS_REACT_NATIVE","product","ENVIRONMENT_IS_NODE","process","ENVIRONMENT_IS_WEB","ENVIRONMENT_IS_WORKER","importScripts","env","global","Error","fetch","hooks","_instance","interceptor","hook","hijack","unregister","controller","AbortController","signal","request","Request","object","prop","url","options","onBeforeRequest","promise","call","onAfterRequest","response","ok","onRequestSuccess","onRequestFailure","recipes","id","name","editable","code","report","params","label","resourceName","default","choices","helperText","filter","useStyles","makeStyles","theme","search","width","margin","paddingLeft","card","minWidth","maxWidth","minHeight","maxHeight","bullet","display","transform","fontSize","pos","marginBottom","fab","position","zIndex","bottom","spacing","right","backgroundColor","color","RecipesPage","dhis2","onNewRecipe","history","freshRecipe","classes","setFilter","useState","setRecipes","loadRecipesQuery","useQuery","async","tasks","api","keys","get","task","local","push","loadRecipes","onSuccess","concat","builtInRecipes","sort","b","onError","isLoading","isFetching","isRefetching","Paper","className","IconButton","iconButton","InputBase","input","placeholder","inputProps","onChange","e","Fab","onClick","Box","justifyContent","flexWrap","alignItems","alignContent","recipe","toLowerCase","Card","style","flex","alignSelf","CardContent","Typography","gutterBottom","CardActions","Button","size","ORGUNIT_FIELDS","Dhis2","argOptions","REACT_APP_DHIS2_URL","user","REACT_APP_USER","password","REACT_APP_PASSWORD","contractGroupId","REACT_APP_CONTRACT_OU_GROUP","cache","userId","baseUrl","ignoredStores","version","forceHttps","disableInitialize","initialize","d2","getManifest","manifest","getBaseUrl","replace","catch","init","headers","currentUser","appVersion","getInstance","systemInfoRaw","system","systemInfo","currentUserRaw","Api","getApi","organisationUnits","fields","page","organisationUnitGroups","findOrganisationUnit","dataElements","query","updateOrganisationUnit","ou","update","imgUrl","addOrganisationUnitToGroup","ouId","groupId","post","removeOrganisationUnitToGroup","delete","findOrganisationUnitGroup","updateOrganisationUnitGroup","group","dateFormat","toKeyAndValue","record","column","Array","test","toColumnStats","counts","keyAndValue","count","total","stats","Object","values","percentage","parseFloat","toFixed","orderBy","Stats","selectedColumns","setSelectedColumns","React","InputLabel","Select","multiple","event","split","OutlinedInput","MenuItem","selectedColumn","customBodyRender","OrgunitMap","lazy","Results","results","selectedTab","setSelectedTab","memoizedKeys","useMemo","resultsSubSet","keySet","Set","k","from","showableMap","filename","Tabs","newValue","Tab","fallback","lines","showLayers","print","responsive","selectableRows","downloadOptions","separator","rowsPerPageOptions","JSONAPIDeserializer","require","Deserializer","JSONApi","payload","keyForAttribute","deserialize","XlsxPopulate","openAsBlob","workbook","outputAsync","msSaveOrOpenBlob","body","appendChild","revokeObjectURL","removeChild","asyncForEach","array","callback","index","Help","float","MONTH_NAMES","MONTH_TO_QUARTER","SIX_MONTHLY_TO_MONTHS","MONTH_NAMES_FR","MONTH_NAMES_EN","MONTH_NAMES_BY_QUARTER","MONTH_NUMBER_BY_QUARTER","eduQuarterNames","YEARLY","MONTHLY","QUARTERLY","SIX_MONTHLY","FINANCIAL_JULY","SUPPORTED_PERIOD_TYPES","FORMAT_FY_JULY_QUARTER","FORMAT_QUARTER","FORMAT_MONTH","FORMAT_MONTH_YEAR","FORMAT_SIX_MONTH","FORMAT_EDU_QUARTER","SUPPORTED_FORMATS","DatePeriods","translations","setMonthTranslations","n","month","year","padMonth","month2quarter","quarterIntOrString","quarter","months","currentDate","Date","setMonth","getMonth","getFullYear","quarterByMonth","period","year_months","monthNumber","parseInt","year_month","dhis2period","yearPeriod","monthlyNameFormat","monthPeriod","monthName","join","format","period2FinancialYearJulyQuarterName","period2QuarterName","monthNameYear","sixMonthlyName","eduQuarterName","quarterPeriod","monthsPeriod","financialJulyQuarterName","monthDhis2Periods","detect","financialQuarterNumber","quarterNumber","financialJulyYear","financialJulyYearPlus1","monthQuarterStart","monthQuarterEnd","template","substituteStr","formatValues","str","match","nextQuarter","nextSixMonth","nextYearMonth","nextYear","nextFinancialJuly","previousQuarter","previousSixMonth","previousYearMonth","previousYear","previousFinancialJuly","dhis2Period","sixMonth","splitType","splitYearQuarter","splitYearSixMonth","splitFinancialJuly","splitYearMonth","splitYear","month_year_offset","quarter_year_offset","unsupportedSplitType","monthsInQuarter","dhis2MonthPeriod","semester","numberOfPeriods","previous","previousPeriods","reverse","next","nextPeriods","Dhis2Search","defaultValue","inputValue","setInputValue","setOptions","selectedOption","setSelectedOption","handleChange","fetchMemo","throttle","filters","f","useEffect","active","Autocomplete","getOptionLabel","option","filterOptions","x","evt","autoComplete","includeInputInList","freeSolo","searchText","renderInput","TextField","fullWidth","renderOption","Params","defaultValues","param","onParametersChange","parameters","setParameters","newParameters","parseExcelFile","inputElement","elementName","files","file","fromDataAsync","parserJson","reader","FileReader","onload","jsonObj","parse","readAsText","parserCsv","PapaParse","header","dynamicTyping","complete","onSearchChange","v","FormControl","marginLeft","val","accept","DeleteButton","confirmOpen","setConfirmOpen","verifyRecipeQuery","retry","recipeExists","isSuccess","handleDeleteMutation","useMutation","apiResponse","location","reload","alert","marginRight","variant","disabled","Dialog","open","onClose","DialogContent","DialogActions","mutate","IdyllReport","AsyncFunction","getPrototypeOf","setOutRequest","register","method","status","DataSets","registeredCount","datasets","datasetName","reset","mode","member","reRun","clearResults","asVars","Editor","onSave","autorun","showEditor","setShowEditor","dataSets","setDataSets","height","setHeight","setWidth","autorunStarted","setAutorunStarted","propertyEdited","setPropertyEdited","setName","setCode","setReport","setResults","requests","setRequests","parameterDefinitionsJson","setParameterDefinitionsJson","parameterDefinitions","setParameterDefinitions","setError","onRun","prettyCode","prettier","parser","plugins","libs","identifier","entryPoint","entryPoints","l","message","lineNumber","columnNumber","clear","dirty","isEqual","editableContent","m","readOnly","debounceChangePeriod","enableBasicAutocompletion","enableSnippets","parametersDefinitionsChange","commands","bindKey","win","mac","exec","editor","getValue","fullScreen","classList","contains","toggle","container","setAutoScrollEditorIntoView","resize","modifiedRecipe","FormControlLabel","control","Switch","decodeURIComponent","trim","markup","RecipeAlert","isError","setOpen","alertSeverity","Collapse","in","Alert","severity","action","sx","mb","accents","à","À","ç","é","É","è","È","ê","Ê","ë","Ë","ô","œ","ù","ú","RecipePage","URLSearchParams","useLocation","recipeId","queryClient","useQueryClient","alertMessage","setAlertMessage","onSaveMutation","versionInfo","string","accent","fixChars","fresh","invalidateQueries","fetchRecipeQuery","ignored","find","RecipeGistPage","gistId","gist","json","description","content","html_url","drawerHeader","padding","AppDrawer","drawerOpen","setDrawerOpen","toggleDrawer","path","edge","Drawer","anchor","List","ListItem","disablePadding","ListItemIcon","ListItemText","primary","DocPage","root","paper","paddingBottom","generateUid","QueryClient","defaultOptions","queries","refetchOnWindowFocus","App","newR","client","AppBar","Toolbar","Grid","justify","item","exact","to","Boolean","hostname","ReactDOM","getElementById","serviceWorker","ready","registration"],"mappings":"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","file":"static/js/main.d4d41395.chunk.js","sourcesContent":["import React from \"react\";\nimport ErrorBoundary from \"./ErrorBoundary\";\n\nfunction isString(r) {\n  return typeof r == \"string\";\n}\nfunction isPrimitive(r) {\n  return typeof r == \"number\" || isString(r) || typeof r == \"boolean\";\n}\nfunction isBoolean(r) {\n  return typeof r == \"boolean\";\n}\nfunction isFunction(r) {\n  return typeof r == \"function\";\n}\n\nconst getCircularReplacer = () => {\n  const seen = new WeakSet();\n  return (key, value) => {\n    if (typeof value === \"object\" && value !== null) {\n      if (seen.has(value)) {\n        return;\n      }\n      seen.add(value);\n    }\n    return value;\n  };\n};\n\nexport function AsPrimitive({ value }) {\n  if (value === undefined || value === null) {\n    return \"\";\n  }\n  if (isFunction(value)) {\n    return \"can't render functions\";\n  }\n  if (\n    isString(value) &&\n    (value.startsWith(\"http://\") || value.startsWith(\"https://\"))\n  ) {\n    return (\n      <a href={value} target=\"_blank\" rel=\"noopener noreferrer\">\n        {value.slice(0, 100)}...\n      </a>\n    );\n  }\n\n  if (isString(value) && value.length > 100) {\n    return <span title={value}>{value.slice(0, 100)}...</span>;\n  }\n\n  const rendered = isPrimitive(value)\n    ? isBoolean(value)\n      ? value.toString()\n      : value\n    : JSON.stringify(value, getCircularReplacer(), 2);\n  return <ErrorBoundary>{rendered}</ErrorBoundary>;\n}\n","import React, {Component} from 'react';\nclass ErrorBoundary extends Component {\n   constructor(props) {\n      super(props);\n      this.state = { hasError: false };\n   }\n\n   static getDerivedStateFromError(error) {\n      return { hasError: true };\n   }\n\n   componentDidCatch(error, info) {\n      console.log(error, info);\n      this.setState({error,info})\n   }\n\n   render() {\n     if (this.state.hasError) {\n       return <span>Something went wrong. {this.state.info}</span>;\n     }\n\n     return this.props.children;\n   }\n}\nexport default ErrorBoundary","import _ from \"lodash\";\n\nfunction downloadFile({ data, fileName, fileType }) {\n  // Create a blob with the data we want to download as a file\n  const blob = new Blob([data], { type: fileType })\n  // Create an anchor element and dispatch a click event on it\n  // to trigger a download\n  const a = document.createElement('a')\n  a.download = fileName\n  a.href = window.URL.createObjectURL(blob)\n  a.click()\n  a.remove()\n}\n\n_.downloadFile = downloadFile;\n\nfunction flattenObject(\n  o,\n  except = [],\n  prefix = \"\",\n  result = {},\n  keepNull = true\n) {\n  if (\n    _.isString(o) ||\n    _.isNumber(o) ||\n    _.isBoolean(o) ||\n    (keepNull && _.isNull(o))\n  ) {\n    result[prefix] = o;\n    return result;\n  }\n  if (except.includes(prefix)) {\n    result[prefix] = o;\n    return result;\n  }\n  if (_.isArray(o) || _.isPlainObject(o)) {\n    for (let i in o) {\n      let pref = prefix;\n      if (_.isArray(o)) {\n        pref = pref + `[${i}]`;\n      } else {\n        if (_.isEmpty(prefix)) {\n          pref = i;\n        } else {\n          pref = prefix + \"-\" + i; // sadly . is not working need to investigate a bit further\n        }\n      }\n      flattenObject(o[i], except, pref, result, keepNull);\n    }\n    return result;\n  }\n  return result;\n}\n\n_.flattenObject = flattenObject;\n\n_.flattenObjects = (objects, except) => {\n  return objects.map(o => _.flattenObject(o, except));\n};\n\n_.copyToClipBoard = (text) => {\n  if (navigator.clipboard != undefined) {\n    //Chrome\n    navigator.clipboard.writeText(text).then(\n      () => {},\n      (err) => {\n        console.error(\"Async: Could not copy text: \", err);\n      }\n    );\n  } else if (window.clipboardData) {\n    // Internet Explorer\n    window.clipboardData.setData(\"Text\", text);\n  }\n};\n\n_.renameColumns = (data, columnMapping) => {\n  return data.map(obj =>\n    _.mapKeys(obj, (value, key) => columnMapping[key] || key)\n  );\n};\n\n_.reorderColumns = (data, columns) => {\n  return data.map(obj => {\n    const clone = {};\n    columns.forEach(col => (clone[col] = obj[col]));\n    return clone;\n  });\n};\n\nexport default _;\n","class FetchInterceptor {\n  /**\n   * Recognize global environment and attach fetch\n   */\n  constructor() {\n    const ENVIRONMENT_IS_REACT_NATIVE =\n      typeof navigator === \"object\" && navigator.product === \"ReactNative\";\n    const ENVIRONMENT_IS_NODE =\n      typeof process === \"object\" && typeof require === \"function\";\n    const ENVIRONMENT_IS_WEB = typeof window === \"object\";\n    const ENVIRONMENT_IS_WORKER = typeof importScripts === \"function\";\n\n    if (ENVIRONMENT_IS_REACT_NATIVE) {\n      this.env = global;\n    } else if (ENVIRONMENT_IS_WORKER) {\n      this.env = this;\n    } else if (ENVIRONMENT_IS_WEB) {\n      this.env = window;\n    } else if (ENVIRONMENT_IS_NODE) {\n      this.env = global;\n    } else {\n      throw new Error(\"Unsupported environment for fetch-intercept\");\n    }\n\n    this.fetch = this.env.fetch;\n  }\n\n  /**\n   * Whitelist hooks\n   */\n  static hooks = [\"onBeforeRequest\", \"onRequestSuccess\", \"onRequestFailure\"];\n\n  /**\n   * Register intercept hooks & return an interceptor instance\n   * @param {object} hooks - The intercept hooks\n   * @return {FetchInterceptor} An interceptor object\n   */\n  static register(hooks = {}) {\n    if (this._instance) {\n      return this._instance;\n    }\n    const interceptor = new this();\n    for (let i = 0; i < this.hooks.length; i++) {\n      const hook = this.hooks[i];\n      if (typeof hooks[hook] === \"function\") {\n        interceptor[hook] = hooks[hook];\n      }\n    }\n    interceptor.hijack();\n    this._instance = interceptor;\n\n    return interceptor;\n  }\n\n  /**\n   * Reset fetch and unregister intercept hooks\n   */\n  unregister() {\n    this.env.fetch = this.fetch;\n    delete this.constructor._instance;\n  }\n\n  /**\n   * Hijack global fetch and insert registered hooks if present\n   */\n  hijack() {\n    const controller = new AbortController();\n    const signal = controller.signal;\n    this.env.fetch = (...a) => {\n      let request;\n      if (a[0] instanceof Request) {\n        let object = {};\n        [\n          \"cache\",\n          \"context\",\n          \"credentials\",\n          \"destination\",\n          \"headers\",\n          \"integrity\",\n          \"method\",\n          \"mode\",\n          \"redirect\",\n          \"referrer\",\n          \"referrerPolicy\",\n          \"url\",\n          \"body\",\n          \"bodyUsed\"\n        ].forEach(prop => {\n          if (prop in a[0]) {\n            object[prop] = a[0][prop];\n          }\n        });\n        object.signal = signal;\n        const { url, ...options } = object;\n        request = new Request(url, options);\n      } else {\n        const url = a[0];\n        const options = {\n          ...a[1],\n          signal\n        };\n        request = new Request(url, options);\n      }\n      if (typeof this.onBeforeRequest === \"function\") {\n        this.onBeforeRequest(request, controller);\n      }\n      const promise = this.fetch.call(this.env, request);\n      if (typeof this.onAfterRequest === \"function\") {\n        this.onAfterRequest(request, controller);\n      }\n      return promise.then(response => {\n        if (response.ok) {\n          if (typeof this.onRequestSuccess === \"function\") {\n            this.onRequestSuccess(response, request, controller);\n          }\n        } else {\n          if (typeof this.onRequestFailure === \"function\") {\n            this.onRequestFailure(response, request, controller);\n          }\n        }\n        return response;\n      });\n    };\n  }\n}\n\nexport default FetchInterceptor;\n","const recipes = [\n  {\n    id: \"D5a1DVMw7F1\",\n    name: \"empty\",\n    editable: true,\n    code: `\n    const api = await dhis2.api();\n    const ou = await api.get(\"organisationUnits\", {\n      fields: \"id,name,ancestors[id,name],geometry\"\n    });\n\n    return _.flattenObjects(ou.organisationUnits, [\"geometry\"]);\n      `,\n  },\n  {      \n    id: \"loadtest456\",\n    name: \"Load test map and results\",\n    editable: true,\n    code: `\n    const api = await dhis2.api();\n    const ou = await api.get(\"organisationUnits\", {\n      fields: \"id,name,ancestors[id,name],geometry\",\n      paging: false\n    });\n    \n    const points = _.flattenObjects(ou.organisationUnits, [\"geometry\"]);\n    for (var i = 0; i < 10000; i++) {\n      points.push({\n        name: \"demo \" + i,\n        geometry: {\n          type: \"Point\",\n          coordinates: [\n            -12 + 1 * Math.random() * Math.sin(i),\n            8.5 + 1 * Math.cos(i)\n          ]\n        }\n      });\n    }\n    \n    return points;\n       \n      `,\n  },  \n  {\n\n    id: \"loadtest452\",\n    name: \"Show everything\",\n    editable: true,\n    code: `\n// press crtl-r to run\nconst api = await dhis2.api();\nconst ou = await api.get(\"organisationUnits\", {\nfields: \"id,name,geometry\",\npaging: false\n});\n\n/**\n * @param numOfSteps: Total number steps to get color, means total colors\n * @param step: The step number, means the order of the color\n */\nfunction rainbow(numOfSteps, step) {\n  // This function generates vibrant, \"evenly spaced\" colours (i.e. no clustering). This is ideal for creating easily distinguishable vibrant markers in Google Maps and other apps.\n  // Adam Cole, 2011-Sept-14\n  // HSV to RBG adapted from: http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript\n  var r, g, b;\n  var h = step / numOfSteps;\n  var i = ~~(h * 6);\n  var f = h * 6 - i;\n  var q = 1 - f;\n  switch (i % 6) {\n    case 0:\n      r = 1;\n      g = f;\n      b = 0;\n      break;\n    case 1:\n      r = q;\n      g = 1;\n      b = 0;\n      break;\n    case 2:\n      r = 0;\n      g = 1;\n      b = f;\n      break;\n    case 3:\n      r = 0;\n      g = q;\n      b = 1;\n      break;\n    case 4:\n      r = f;\n      g = 0;\n      b = 1;\n      break;\n    case 5:\n      r = 1;\n      g = 0;\n      b = q;\n      break;\n  }\n  var c =\n    \"#\" +\n    (\"00\" + (~~(r * 255)).toString(16)).slice(-2) +\n    (\"00\" + (~~(g * 255)).toString(16)).slice(-2) +\n    (\"00\" + (~~(b * 255)).toString(16)).slice(-2);\n  return c;\n}\nlet index = 1;\nfor (o of ou.organisationUnits) {\n  o.color = rainbow(100, index % 100);\n  index = index + 1;\n}\nreturn ou.organisationUnits\n`\n  },\n  {\n    id: \"lD3mlYe0S0X\",\n    name: \"Basic - Access api\",\n    code: `\n  const api = await dhis2.api();\n  const ou = await api.get(\"organisationUnits\", {\n    fields: \"id,name\",\n    paging: false\n  });\n  return ou.organisationUnits\n      `,\n  },\n  {\n    id: \"u2Rzyn9ZvfD\",\n    name: \"Basic - List of orgunits with ancestors and groups\",\n    editable: false,\n    code: `\n\n  const api = await dhis2.api();\n  const organisationUnitsResp = await api.get(\"organisationUnits\", {\n    fields: \"id,name,ancestors[id,name],organisationUnitGroups[id,name]\",\n    paging: false\n  });\n  const organisationUnits =  organisationUnitsResp.organisationUnits.map(ou => {\n      return {\n          id: ou.id,\n          name: ou.name,\n          level0: ou.ancestors[0] && ou.ancestors[0].name,\n          level1: ou.ancestors[1] && ou.ancestors[1].name,\n          level2: ou.ancestors[2] && ou.ancestors[2].name,\n          level3: ou.ancestors[3] && ou.ancestors[3].name,\n          level4: ou.ancestors[4] && ou.ancestors[4].name,\n          groups: ou.organisationUnitGroups.map(g => g.name).sort().join(\", \")\n      };\n  });\n  return organisationUnits\n  `,\n  },\n  {\n    id: \"noCPOHibwHt\",\n    name: \"Basic - List all available resources\",\n    code: `\nconst api = await dhis2.api();\n\nconst resources = await api.get(\"resources\")\nreturn resources.resources.map( r => {\n    return {\n        name: r.displayName,\n        snippet: 'const '+r.plural+'Resp = await api.get(\"'+r.plural+'\")'\n    }\n})\n\n    `,\n  },\n  {\n    id: \"RWYYgYTGumd\",\n    name: \"Users - Super user, inactive user, never logged in audit\",\n    editable: true,\n    code: `\n    const api = await dhis2.api();\n\n    const userResp = await api.get(\"users\", {\n      fields:\n        \"id,name,email,userCredentials[userRoles[id,name],lastLogin],organisationUnits[id,name,level],created\",\n      filter: \"userCredentials.disabled:eq:false\",\n      paging: false\n    });\n    const users = userResp.users\n      .map(user => {\n        return {\n          id: user.id,\n          name: user.name,\n          email: user.email,\n          superuser: user.userCredentials.userRoles.some(role =>\n            [\"Superuser\", \"Administrateur Principal\"].includes(role[\"name\"])\n          )\n            ? \"true\"\n            : \"\",\n          manageOrganisationUnits: user.organisationUnits\n            .map(ou => ou.name)\n            .join(\", \"),\n          roles: user.userCredentials.userRoles.map(r => r.name).join(\", \"),\n          created: user.created,\n          lastLogin: user.userCredentials.lastLogin\n        };\n      })\n      .sort((a, b) => (a.superuser ? -1 : b.super_user ? -1 : 1));\n\n    const date = new Date();\n    const newDate = new Date(date.setMonth(date.getMonth() - 6));\n    const loginDate =  date.toJSON().substring(0, 7)\n\n    report.register(\"superusers\", users.filter(u => u.superuser));\n    report.register(\"created_notloggedin\", users.filter(u => u.lastLogin == undefined));\n    report.register(\"oldLastLogin\", users.filter(u => u.lastLogin && u.lastLogin <= loginDate ));\n    report.register(\"users\", users);\n\n    return \"\";\n\n\n  `,\n    report: `\n# Admin users\n\nLimit the admin users to a small number\n\n[DataTable data:superusers label:\"Admin users\" perPage:50/]\n\n# Users created but never logged in\n\nUser created but that never logged in. If they were created long time a ago, it's probably safer to disable them.\n\n[DataTable data:created_notloggedin label:\"Created but never logged in\" perPage:20/]\n\n# Last login more than 6 months\n\nThese users didn't logged in since a while. It's probably safer to disable them.\n\n[DataTable data:oldLastLogin label:\"Login more than 6 months\" perPage:20/]\n\n# All enabled users\n\nYou might want to audit the roles and orgunits of existing users\n\n[DataTable data:users label:\"All users\" perPage:20/]\n\n\n`,\n  },\n  {\n    id: \"bifaoG4Ky23\",\n    name: \"Coordinates - Investigate GEOJSON data quality\",\n    editable: false,\n    code: `\n      const api = await dhis2.api();\n      const ou = await api.get(\"organisationUnits\", {\n        fields: \"id,name,coordinates,featureType\",\n        paging: false\n      });\n      ou.organisationUnits.forEach(ou => {\n        ou.guessedFeatureType =\n          ou.coordinates === undefined\n            ? \"NONE\"\n            : ou.coordinates.startsWith(\"[[[[\")\n            ? \"MULTI_POLYGON\"\n            : ou.coordinates.startsWith(\"[[[\")\n            ? \"POLYGON\"\n            : ou.coordinates.startsWith(\"[[\")\n            ? \"LINE\"\n            : ou.coordinates.startsWith(\"[\")\n            ? \"POINT\"\n            : \"NONE\";\n\n        ou.featureTypeMatches = ou.guessedFeatureType === ou.featureType;\n      });\n      return ou.organisationUnits.filter(ou => ou.featureTypeMatches == false);\n    `,\n  },\n  {\n    id: \"d4pmpo12iMp\",\n    name: \"Coordinates - coordinates stats per level\",\n    editable: true,\n    code: `\n    const stats = [];\n    const api = await dhis2.api();\n\n    const levels = await api.get(\"organisationUnitLevels\", {\n      fields: \"id,name,level\",\n      order: \"level\"\n    });\n\n    const system = await api.get(\"system/info\");\n    const version = system.version;\n    const v = version.split(\".\");\n    const vfloat = parseFloat(v[0] + \".\" + v[1]);\n    const fieldCoordinates = vfloat >= 2.32 ? \"geometry\" : \"coordinates\";\n\n    for( let level of levels.organisationUnitLevels) {\n      const withCoordinates = await api.get(\"organisationUnits\", {\n        fields: \"id,name\",\n        filter: [\"level:eq:\" + level.level, fieldCoordinates + \":!null\"],\n        paging: true,\n        pageSize: 1\n      });\n      const withoutCoordinates = await api.get(\"organisationUnits\", {\n        fields: \"id,name\",\n        filter: [\"level:eq:\" + level.level, fieldCoordinates + \":null\"],\n        paging: true,\n        pageSize: 1\n      });\n\n      const allOus = await api.get(\"organisationUnits\", {\n        fields: \"id,name\",\n        filter: [\"level:eq:\" + level.level],\n        paging: true,\n        pageSize: 1\n      });\n\n      stats.push({\n        levelName: level.name,\n        level: level.level,\n        withCoordinates: withCoordinates.pager.total,\n        withoutCoordinates: withoutCoordinates.pager.total,\n        totalOrganisationUnits: allOus.pager.total,\n        percentageCoordinates:\n          allOus.pager.total > 0\n            ? ((withCoordinates.pager.total / allOus.pager.total) * 100).toFixed(2)\n            : \"-\"\n      });\n      report.register(\"statsByLevel\" + level.level, [\n        { x: \"with\", y: withCoordinates.pager.total },\n        { x: \"without\", y: withoutCoordinates.pager.total }\n      ]);\n    }\n\n    return stats;\n\n\n `,\n\n    report: `\n\n [FlexBox]\n# Level 1\n[FlexBox]\n[Chart type:\"pie\" data:statsByLevel1 colorScale:\\`[\"green\", \"grey\" ]\\` /]\n[AsJSON data:statsByLevel1 /]\n[/FlexBox]\n\n# Level 2\n[FlexBox]\n[Chart type:\"pie\" data:statsByLevel2 colorScale:\\`[\"green\", \"grey\" ]\\` /]\n[AsJSON data:statsByLevel2 /]\n[/FlexBox]\n\n[/FlexBox]\n\n[FlexBox]\n# Level 3\n[FlexBox]\n[Chart type:\"pie\" data:statsByLevel3 colorScale:\\`[\"green\", \"grey\" ]\\` /]\n[AsJSON data:statsByLevel3 /]\n[/FlexBox]\n\n# Level 4\n[FlexBox]\n[Chart type:\"pie\" data:statsByLevel4 colorScale:\\`[\"green\", \"grey\" ]\\` /]\n[AsJSON data:statsByLevel4 /]\n[/FlexBox]\n[/FlexBox]\n   `,\n  },\n  {\n    id: \"D5a1DVMw7FV\",\n    name: \"List data elements that aren't linked to program stages or datasets\",\n    editable: true,\n    code: `\n    const api = await dhis2.api();\n    const de = await api.get(\"dataElements\", {\n    fields: \"id,name,href,domainType\",\n    filter: \"dataSetElements:empty\",\n    paging: false\n    });\n\n\n    const programResp = await api.get(\"programStages\", {\n        fields: \"programStageDataElements[dataElement[id]]\",\n        paging: false\n    })\n\n    const usedByPrograms = new Set(programResp.programStages.flatMap(ps=> ps.programStageDataElements.map(psde => psde.dataElement.id)))\n\n    return de.dataElements.filter( de => !usedByPrograms.has(de.id))\n`,\n  },\n\n  {\n    id: \"YuQRTavdpGE\",\n    name: \"Show orgunits with a level 2 org unit on map\",\n    editable: true,\n    code: `\n    const api = await dhis2.api();\nconst parent = await api.get(\"organisationUnits\", {\n  fields: \"id,name,coordinates,geometry\",\n  filter: \"level:eq:2\",\n  pageSize: 2\n});\nconst ou = await api.get(\"organisationUnits\", {\n  fields: \"id,name,coordinates,featureType,geometry,path\",\n  filter: \"path:ilike:\" + parent.organisationUnits[0].id,\n  paging: false\n});\nreturn ou.organisationUnits;\n`,\n  },\n  {\n    id: \"a0d79dd5c59\",\n    name: \"Play - display events and map\",\n    editable: true,\n    code: `\n      const api = await dhis2.api();\n\n      const ev = await api.get(\"events\", {\n        program: \"VBqh0ynB2wv\",\n        pageSize: 100\n      });\n\n      return ev.events;\n\n        `,\n  },\n  {\n    id: \"af2fd38f351\",\n    name: \"Play - Periods\",\n    editable: true,\n    code: `\nconst periods = [\"2019\", \"2019S1\", \"2019Q3\", \"201907\"];\nconst frequencies = [\n  \"monthly\",\n  \"quarterly\",\n  \"yearly\",\n  \"sixMonthly\",\n  \"financialJuly\"\n];\nconst results = [];\nperiods.forEach(period => {\n  frequencies.forEach(frequency => {\n    results.push(\n      [period, frequency].concat(DatePeriods.split(period, frequency))\n    );\n  });\n});\n\nreturn results;\n\n    `,\n  },\n  {\n    id: \"af2fd38f350\",\n    name: \"Play - display event values and map\",\n    editable: true,\n    code: `\n      const api = await dhis2.api();\n      const de = await api.get(\"dataElements\", {\n        fields: \"id,name\",\n        filter: \"domainType:eq:TRACKER\",\n        paging: false\n      });\n      const dataElementsById = {};\n      de.dataElements.forEach(de => (dataElementsById[de.id] = de.name));\n      const ev = await api.get(\"events\", {\n        program: \"VBqh0ynB2wv\",\n        pageSize: 100\n      });\n      const events = ev.events.map(event => {\n        r = { id: event.event, coordinate: event.coordinate };\n\n        event.dataValues.forEach(\n          dataValue => (r[dataElementsById[dataValue.dataElement]] = dataValue.value)\n        );\n\n        r.color = r[\"Gender\"] == \"Male\" ? \"blue\" : \"red\";\n        return r;\n      });\n\n      return events;\n\n\n        `,\n  },\n  {\n    id: \"dy1a1mseGR7\",\n    name: \"Play - indicators using a given data element\",\n    editable: true,\n    code: `\n    const api = await dhis2.api();\n    const dataElementId = \"fbfJHSPpUQD\";\n    const ind = await api.get(\"indicators\", {\n      filter: \"numerator:token:\" + dataElementId,\n      fields:\n        \"id,name,numerator,denominator,numeratorDescription,denominatorDescription\",\n      paging: false\n    });\n    const ind2 = await api.get(\"indicators\", {\n      filter: \"denominator:token:\" + dataElementId,\n      fields:\n        \"id,name,numerator,denominator,numeratorDescription,denominatorDescription\",\n      paging: false\n    });\n    return _.uniqBy(ind.indicators.concat(ind2.indicators), i => i.id);\n    `,\n  },\n  {\n    id: \"ToQVD4irW3Q\",\n    name: \"Play - programIndicators using a given tracker data element\",\n    editable: true,\n    code: `\n    const api = await dhis2.api();\nconst dataElementId = \"Zj7UnCAulEk\";\nconst ind = await api.get(\"programIndicators\", {\n  filter: \"expression:token:\" + dataElementId,\n  fields: \"id,name,expression,filter,description\",\n  paging: false\n});\nconst ind2 = await api.get(\"programIndicators\", {\n  filter: \"filter:token:\" + dataElementId,\n  fields: \"id,name,expression,filter,description\",\n  paging: false\n});\nreturn _.uniqBy(\n  ind.programIndicators.concat(ind2.programIndicators),\n  i => i.id\n);\n\n`,\n  },\n  {\n    id: \"r6JQgt6y8Dn\",\n    name: \"Play - fetch values for a period and display them on a map\",\n    editable: true,\n    code: `\n\n    const api = await dhis2.api();\n    const de = await api.get(\"dataElements\", {\n      filter: \"dataElementGroups.id:eq:qfxEYY9xAl6\",\n      paging: false\n    });\n    const ou = await api.get(\"organisationUnits\", {\n      paging: false,\n      fields: \"id,name,geometry,coordinates\"\n    });\n    const dataElementsById = _.keyBy(de.dataElements, de => de.id);\n    const organisationUnitsById = _.keyBy(ou.organisationUnits, ou => ou.id);\n    const dv = await api.get(\"dataValueSets\", {\n      orgUnit: \"ImspTQPwCqd\",\n      children: true,\n      dataElementGroup: \"qfxEYY9xAl6\",\n      period: \"201905\"\n    });\n    dv.dataValues.forEach(dv => {\n      dv.dataElement = dataElementsById[dv.dataElement];\n      dv.orgUnit = organisationUnitsById[dv.orgUnit];\n      dv.geometry = organisationUnitsById[dv.orgUnit.id].geometry;\n      dv.color = dv.value == 9 ? \"blue\" : \"red\";\n    });\n    return dv.dataValues;\n    `,\n  },\n  {\n    id: \"gbvX3pogf7p\",\n    name: \"Generic - overview of category combos\",\n    editable: true,\n    code: `\n\n    // press crtl-r to run\nconst api = await dhis2.api();\nconst ccc = await api.get(\"categoryCombos\", {\n  fields: \"id,name,categories[name,categoryOptions[name]]\",\n  paging: false\n});\nccc.categoryCombos.forEach(cc => {\n  cc.description = cc.categories\n    .map(\n      c => c.name + \" [\" + c.categoryOptions.map(o => o.name).join(\", \") + \"]\"\n    )\n    .join(\", \");\n  delete cc.categories;\n});\nreturn ccc.categoryCombos;\n`,\n  },\n  {\n    id: \"turfds456az\",\n    name: \"Turf - demo\",\n    editable: true,\n    code: `\n    var points = [\n      turf.point([29.3599, -3.3614], { name: \"Bujumbura, Burundi\" }),\n      turf.point([4.3517, 50.8503], { name: \"Bruxelles, Belgium\" }),\n      turf.point([2.3522, 48.8566], { name: \"Paris, France\" }),\n      turf.point([13.405, 52.52], { name: \"Berlin, Germany\" }),\n      turf.point([15.2663, -4.4419], { name: \"Kinshasa, DRC\" }),\n      turf.point([-14.4392276, 14.5001717], { name: \"Senegal\" }),\n      turf.point([31.0335, -17.8252], { name: \"Harare, Zimbabwe\" }),\n      turf.point([-5.8593, 43.3614], { name: \"Asturias, Spain\" }),\n      turf.point([2.3912, 6.3703], { name: \"Cotonou, Benin\" }),\n      turf.point([-77.0369, 38.9072], { name: \"Washington DC, USA\" }),\n      turf.point([3.406448, 6.465422], { name: \"Busuyi (Lagos, Nigeria)\" })\n    ];\n    points.sort((p1, p2) => turf.distance(p1, p2));\n    const polPoints = points\n      .map(p => p.geometry.coordinates)\n      .concat([points[0].geometry.coordinates]);\n    var line = turf.lineString([[0, 10], [20, 20]]);\n    var tin = turf.tin(turf.featureCollection(points), \"z\");\n    return points.concat([line]).concat(tin[\"features\"]);\n`,\n  },\n  {\n    id: \"turfds123az\",\n    name: \"Turf - demo - geocoding, geojson\",\n    editable: true,\n    code: `\n    const data = [\n      { address: \"4000 Glain, belgique\" },\n      { address: \"Chaussée de Tirlemont 45 5030 Gembloux\" },\n      { address: \"avenue de la Station 101-103 5030 Gembloux\" },\n      { address: \"Route de Hannut 181 5021 Boninne, belgique\" },\n      { address: \"Rue Lamarck, 57 4000 Liège\" },\n      { address: \"rue du Marché au beurre 25 6700 Arlon\" }\n    ];\n    ​\n    const provinces = await fetch(\n      \"https://mestachs.github.io/belgium/provinces.geo.json\"\n    ).then(r => r.json());\n    ​\n    const communes = await fetch(\n      \"https://mestachs.github.io/belgium/communes-be-2019.geojson\"\n    ).then(r => r.json());\n    ​\n    for (record of data) {\n      const localisation = await fetch(\n        \"https://nominatim.openstreetmap.org/search?q=\" +\n          record.address +\n          \"&format=json&polygon=1&addressdetails=1\"\n      ).then(resp => resp.json());\n      if (localisation.length > 0) {\n        record.localisation = localisation[0];\n        record.coordinates = JSON.stringify([\n          parseFloat(localisation[0].lon),\n          parseFloat(localisation[0].lat)\n        ]);\n        turf.geometrify(record);\n      }\n    }\n    const matched_communes = communes.features.filter(commune =>\n      data.some(ou => ou.geometry && turf.inside(ou.geometry, commune))\n    );\n    const matched_provinces = provinces.features.filter(commune =>\n      data.some(ou => ou.geometry && turf.inside(ou.geometry, commune))\n    );\n    return data.concat(matched_provinces).concat(matched_communes);\n`,\n  },\n  {\n    id: \"Yf6UHoPkdS6\",\n    name: \"Play : update legendset colors\",\n    editable: true,\n    code: `\n    const api = await dhis2.api();\n    const lengendSetId = \"Yf6UHoPkdS6\";\n    const dryRun = true;\n    let legendSet = await api.get(\"legendSets/\" + lengendSetId);\n    const colors = {\n      \"30 - 40\": \"#d9f0az\",\n      \"40 - 50\": \"#addd50\",\n      \"50 - 60\": \"#41ab60\"\n    };\n\n    Object.keys(colors).forEach(range => {\n      const legend = legendSet.legends.find(l => l.displayName == range);\n      legend.color = colors[range];\n    });\n    if (!dryRun) {\n      await api.update(\"legendSets/\" + lengendSetId, legendSet);\n    }\n    legendSet = await api.get(\"legendSets/\" + lengendSetId, {\n      fields: \":all\"\n    });\n    return legendSet;\n\n`,\n  },\n  {\n    id: \"aze123PkdS6\",\n    name: \"Play : export orgunits with parent and groups\",\n    editable: true,\n    code: `\n  const api = await dhis2.api();\nconst ou = await api.get(\"organisationUnits\", {\n  fields:\n    \"id,name,coordinates,featureType,parent,organisationUnitGroups[id,name,groupSets[id]]\",\n  paging: false\n});\nreturn ou.organisationUnits.map(ou => {\n  return {\n    id: ou.id,\n    name: ou.name,\n    coordinates: ou.coordinates,\n    featureType: ou.featureType,\n    parent: ou.parent ? ou.parent.id : undefined,\n    groups: ou.organisationUnitGroups.map(g => g.name).join(\", \")\n  };\n});\n`,\n  },\n  {\n    id: \"YlvBkdBjjVO\",\n    name: \"Play : event counts\",\n    editable: true,\n    code: `\nconst api = await dhis2.api();\nconst pg = await api.get(\"programs\", {\n  fields: \"id,name,programStages[id,name]\",\n  paging: false\n});\n\nconst results = [];\nfor (let program of pg.programs) {\n\n  try {\n    const ev = await api.get(\"events\", {\n      program: program.id,\n      pageSize: 10,\n      totalPages: true\n    });\n    results.push({\n      id: program.id,\n\n      name: program.name,\n      events: ev.pager.total\n    });\n  } catch (ignore) {}\n}\n\nresults.push({\n  name: \"TOTAL\",\n  events: results.map(m => m.events).reduce((a, b) => a + b)\n});\nreturn results;\n`,\n  },\n  {\n    id: \"YlvBkdBjaz5\",\n    name: \"Play : CSV and fuse\",\n    editable: true,\n    code: `\n\n      const data = \\`\nline,name\n1,Adonkiia\n2,Afro Arabe Clinique\n      \\`;\n\n      const options = {\n        shouldSort: true,\n        includeScore: true,\n        threshold: 0.6,\n        location: 0,\n        distance: 100,\n        maxPatternLength: 32,\n        minMatchCharLength: 1,\n        keys: [\"name\"]\n      };\n\n      const api = await dhis2.api();\n      const ou = await api.get(\"organisationUnits\", {\n        paging: false,\n        fields: \"id,name\"\n      });\n\n      const fuse = new Fuse(ou.organisationUnits, options); // \"list\" is the item array\n\n      let ouToMaps = PapaParse.parse(data.trim(), {\n        header: true\n      });\n\n      ouToMaps.data.forEach(ouToMap => {\n        ouToMap.mapping = fuse.search(ouToMap.name)[0];\n      });\n\n      return _.flattenObjects(ouToMaps.data);\n\n\n    `,\n  },\n  {\n    id: \"UMHyEfFHCcr\",\n    name: \"Simple event - Create event based on csv (not tracker)\",\n    editable: true,\n    params: [\n      {\n        id: \"program\",\n        label: \"Search\",\n        type: \"dhis2\",\n        resourceName: \"programs\",\n        default: \"lxAQ7Zs9VYR\",\n      },\n      {\n        id: \"mode\",\n        label: \"Select run mode\",\n        type: \"select\",\n        default: \"generateEmptyCsv\",\n        choices: [\n          [\"generateEmptyCsv\", \"Generate an empty csv\"],\n          [\"dryRun\", \"Import from csv - Dry run\"],\n          [\"import\", \"Import from csv - import events\"],\n        ],\n      },\n      {\n        id: \"file\",\n        label: \"Pick csv with event values\",\n        type: \"csv\",\n        helperText:\n          \"you can use 'Generate an empty csv' run mode to generate a template\",\n      },\n    ],\n    code: `\n\n    const programId = parameters.program.id;\n\n    const dryRun = parameters.mode ==\"dryRun\";\n    // press crtl-r to run\n    const api = await dhis2.api();\n    const pg = await api.get(\"programs/\" + programId, {\n      fields:\n        \"id,name,programStages[programStageDataElements[dataElement[id,name,valueType]]]\"\n    });\n    const dataElementsByName = {};\n    pg.programStages\n      .flatMap(ps => ps.programStageDataElements)\n      .map(psde => psde.dataElement)\n      .forEach(de => (dataElementsByName[de.name] = de));\n\n    if (parameters.mode == \"generateEmptyCsv\") {\n      const result = {\n        id: \"orgUnitId\",\n        eventid:\n          \"pre-generated event Id by https://play.dhis2.org/2.29/api/system/id?limit=3\"\n      };\n      Object.keys(dataElementsByName).forEach(k => {\n        result[k] = \"\";\n      });\n      return [result];\n    }\n\n    const csv = parameters.file\n\n    function formatValue(value, de) {\n      if (de.valueType == \"INTEGER_ZERO_OR_POSITIVE\") {\n        return parseInt(value);\n      }\n      if (de.valueType == \"BOOLEAN\") {\n        return value === \"Oui\" || value === \"1\" ? true : false;\n      }\n      return value;\n    }\n\n    const events = csv.data.map(row => {\n      return {\n        program: programId,\n        event: row.eventid,\n        orgUnit: row.id,\n        eventDate: \"2019-11-18T00:00:00.000\",\n        status: \"COMPLETED\",\n        dataValues: Object.keys(dataElementsByName).map(column => {\n          return {\n            dataElement: dataElementsByName[column].id,\n            value: formatValue(row[column], dataElementsByName[column])\n          };\n        })\n      };\n    });\n\n    if (dryRun) {\n      return { events };\n    } else {\n      try {\n        const createResp = await api.post(\"events\", { events });\n        return createResp;\n      } catch (except) {\n        return except;\n      }\n    }\n\n    `,\n  },\n  {\n    id: \"UMHyEfFHXLS\",\n    name: \"XlsxPopulate - Create a workbook from js\",\n    editable: true,\n    code: `\n\n    const workbook = await XlsxPopulate.fromBlankAsync();\n    const sheet = workbook.sheet(0);\n\n    sheet\n      .cell(\"A1\")\n      .value(\"This was created in the browser!\")\n      .style(\"fontColor\", \"ff0000\");\n\n    const api = await dhis2.api();\n    const ou = await api.get(\"organisationUnits\", {\n      fields: \"id,name,ancestors[id,name]\"\n    });\n    const r = sheet.cell(\"A2\");\n    r.value(ou.organisationUnits.map(ou => [ou.id, ou.name]));\n    sheet.column(\"A\").width(15);\n    sheet.column(\"B\").width(30);\n    XlsxPopulate.openAsBlob(workbook, \"orgunits.xslx\");\n    return \"a workbook will open shortly\";\n    `,\n  },\n  {\n    id: \"hV9ISZaPz2w\",\n    name: \"Users - Create users from csv\",\n    editable: true,\n    params: [\n      {\n        id: \"file\",\n        type: \"csv\",\n        label: \"Pick csv with event values\",\n      },\n      {\n        id: \"mode\",\n        type: \"select\",\n        label: \"Select run mode\",\n        choices: [\n          [\"dryRun\", \"Import from csv - Dry run\"],\n          [\"import\", \"Import from csv - create users\"],\n        ],\n        default: \"dryRun\",\n      },\n    ],\n    code: `\n\nconst rawData = \\`\nfirstName,surname,email,username,password,userRole,organisationUnits,dataViewOrganisationUnits\nJohn,Doe,johndoe@mail.com,johndoe123,Your-password-123,Data entry clerk,DHIS2OUID,DHIS2OUID\n\\`;\n\nconst api = await dhis2.api();\nconst dryRun = parameters.mode == \"dryRun\";\n\nconst ur = await api.get(\"userRoles\", { fields: \"id,name\", paging: false });\nconst userRoles = {};\nur.userRoles.forEach(u => (userRoles[u.name] = u.id));\n\nconst users = parameters.file.data.filter(user => user.username);\n\nconst ids = (await api.get(\"system/id?limit=\" + 2 * users.length))[\"codes\"];\n\nlet index = 0;\ndhis2_users = users.map(user => {\n  const id1 = ids[index];\n  const id2 = ids[index + 1];\n  index = index + 2;\n  const dhis2user = {\n    id: id1,\n    firstName: user.firstName,\n    surname: user.surname,\n    email: user.email,\n    userCredentials: {\n      id: id2,\n      userInfo: {\n        id: id1\n      },\n      username: user.username,\n      password: user.password\n    },\n    organisationUnits: user.organisationUnits.split(\",\").map(id => {\n      return { id };\n    }),\n    dataViewOrganisationUnits: user.dataViewOrganisationUnits\n      .split(\",\")\n      .map(id => {\n        return { id };\n      })\n  };\n  dhis2user.userRoles = user.userRole.split(\",\").map(role => {\n    if (userRoles[role] == undefined) {\n      throw new Error(\n        \"userRole not found : '\" +\n          role +\n          \"' known roles : \" +\n          Object.keys(userRoles).join(\" ,\")\n      );\n    }\n    return { id: userRoles[role] };\n  });\n\n  dhis2user.userCredentials.userRoles = dhis2user.userRoles;\n  return dhis2user;\n});\nif (dryRun) {\n  return { dhis2_users };\n} else {\n  const resp = await api.post(\"metadata\", { users: dhis2_users });\n  return resp;\n}\n\n\n    `,\n  },\n  {\n    id: \"akBR3UIfpLB\",\n    name: \"Play - Pameters show case\",\n    editable: true,\n    params: [\n      {\n        id: \"program\",\n        label: \"Search for program\",\n        type: \"dhis2\",\n        resourceName: \"programs\",\n        default: \"sample\",\n      },\n      {\n        id: \"datalementTracker\",\n        label: \"Search for tracker data element\",\n        type: \"dhis2\",\n        resourceName: \"dataElements\",\n        filter: \"domainType:eq:TRACKER\",\n      },\n      {\n        id: \"datalementAggregate\",\n        label: \"Search for aggregate data element\",\n        type: \"dhis2\",\n        resourceName: \"dataElements\",\n        filter: \"domainType:eq:AGGREGATE\",\n      },\n      {\n        id: \"mode\",\n        label: \"Select run mode\",\n        type: \"select\",\n        default: \"generateEmptyCsv\",\n        choices: [\n          [\"generateEmptyCsv\", \"Generate an empty csv\"],\n          [\"dryRun\", \"Import from csv - Dry run\"],\n          [\"import\", \"Import from csv - import events\"],\n        ],\n      },\n      {\n        id: \"file\",\n        label: \"Pick csv with event values\",\n        type: \"csv\",\n        helperText:\n          \"you can use 'Generate an empty csv' run mode to generate a template\",\n      },\n    ],\n    code: `\n       return parameters\n    `,\n  },\n  {\n    id: \"q1bKZe58btE\",\n    name: \"Play - Mix orgunits and gadm\",\n    params: [\n      {\n        id: \"orgunit\",\n        type: \"dhis2\",\n        label: \"Search for a zone\",\n        filter: \"level:in:[1,2,3]\",\n        default: {\n          name: \"Badjia\",\n          id: \"YuQRtpLP10I\",\n        },\n        resourceName: \"organisationUnits\",\n      },\n      {\n        id: \"gadm_level\",\n        label: \"GADM level\",\n        type: \"select\",\n        default: \"1\",\n        choices: [\n          [0, \"0\"],\n          [1, \"1\"],\n          [2, \"2\"],\n          [3, \"3\"],\n        ],\n      },\n    ],\n    code: `\n    // press crtl-r to run\n    const api = await dhis2.api();\n    const ou = await api.get(\"organisationUnits/\" + parameters.orgunit.id, {\n      fields: \"id,name,geometry\"\n    });\n    ou.opacity = 0.7;\n    ou.color = \"red\";\n    ou.fillColor = \"red\";\n\n    const s3_url = \"https://geojson-countries.s3-eu-west-1.amazonaws.com/\";\n    const download = async file => {\n      return fetch(s3_url + file).then(f => f.json());\n    };\n    const gadm = await download(\"gadm36_SLE_\"+parameters.gadm_level+\".shp.geojson\");\n\n    const results = [];\n\n    gadm[\"features\"].forEach((f, index) => {\n      results.push(f);\n      f.name = f.properties.NAME_2;\n      f.color = \"black\";\n    });\n    results.push(ou);\n    return results;\n\n `,\n  },\n  {\n    id: \"dHC94p8sbdE\",\n    name: \"Dataviz - update custom attributes of program indicator\",\n    params: [\n      {\n        id: \"programIndicator\",\n        type: \"dhis2\",\n        resourceName: \"programIndicators\",\n      },\n      {\n        id: \"alternateName-fr\",\n        type: \"text\",\n      },\n      {\n        id: \"position\",\n        type: \"text\",\n      },\n      {\n        id: \"iconName\",\n        type: \"text\",\n      },\n      {\n        id: \"mode\",\n        label: \"Select run mode\",\n        type: \"select\",\n        default: \"dryRun\",\n        choices: [\n          [\"dryRun\", \"Dry run\"],\n          [\"update\", \"update\"],\n        ],\n      },\n    ],\n    code: `\n\nconst api = await dhis2.api();\nconst pi = await api.get(\n  \"programIndicators/\" + parameters.programIndicator.id,\n  {\n    fields: \":all\",\n    paging: false\n  }\n);\n\nconst values = {\n  \"alternateName-fr\": parameters[\"alternateName-fr\"],\n  position: parameters[\"position\"],\n  iconName: parameters[\"iconName\"]\n};\n\nconst customAttributes = (await api.get(\"attributes\",\n                            {\n                              fields:\"id,name\",\n                              filter: \"programIndicatorAttribute:eq:true\"\n                            })).attributes\nif (customAttributes.length == 0) {\n  alert(\"Sorry no custom attributes : \"+Object.keys(values))\n  return\n}\ncustomAttributes.forEach(customAttribute => {\n  const currentVal = pi.attributeValues.find(\n    attribValue => attribValue.attribute.id == customAttribute.id\n  );\n  const newValue = values[customAttribute.name];\n  if (values[customAttribute.name]) {\n    if (currentVal) {\n      currentVal.value = newValue;\n    } else {\n      pi.attributeValues.push({\n        value: newValue,\n        attribute: { id: customAttribute.id }\n      });\n    }\n  }\n});\n\nconst dryRun = parameters.mode == \"dryRun\";\nif (dryRun) {\n  return pi;\n} else {\n  const updated = await api.update(\"programIndicators/\" + pi.id, pi);\n  return updated;\n}\nreturn pi.attributeValues;\n\n\n`,\n  },\n  {\n    id: \"YKPWywkbphl\",\n    name: \"XLSForm - Generate a basic xlsform for a program\",\n    params: [\n      {\n        id: \"program\",\n        type: \"dhis2\",\n        resourceName: \"programs\",\n      },\n    ],\n    code: `\n    const api = await dhis2.api();\n    const pg = await api.get(\"programs/\" + parameters.program.id + \".json\", {\n      fields:\n        \"id,name,trackedEntityType,programTrackedEntityAttributes[trackedEntityAttribute[id,generated,name,code,valueType,optionSet[id,name,code,options[id,code,name]]]],programStages[id,code,name,programStageSections[:all,id,name,code],programStageDataElements[compulsory,code,dataElement[id,name,formName,shortName,code,valueType,optionSet[id,code,name,options[code,name]]]]]\",\n      paging: false\n    });\n\n    const iaso_mappings = {};\n\n    function toQuestion(valueType, optionSet, compulsory) {\n      let type = \"\";\n      let constraint = undefined;\n      let constraint_message = undefined;\n      let required = undefined;\n      let appearance = undefined;\n\n      if (compulsory == true) {\n        required = \"true\";\n      }\n\n      if (optionSet) {\n        type =\n          \"select_one \" +\n          (optionSet.code ||\n            slugify(optionSet.name) ||\n            slugify(optionSet.displayName));\n        appearance = \"minimal\";\n      } else if (valueType == \"BOOLEAN\" || valueType == \"TRUE_ONLY\") {\n        type = \"select_one yesno\";\n      } else if (valueType == \"DATE\") {\n        type = \"date\";\n      } else if (valueType == \"TEXT\" || valueType == \"LONG_TEXT\") {\n        type = \"text\";\n      } else if (valueType == \"PERCENTAGE\") {\n        type = \"integer\";\n      } else if (valueType == \"INTEGER\") {\n        type = \"integer\";\n      } else if (valueType == \"INTEGER_POSITIVE\") {\n        type = \"integer\";\n        constraint = \". > 0\";\n        constraint_message = \"must be non-zero positive number\";\n      } else if (valueType == \"INTEGER_ZERO_OR_POSITIVE\") {\n        type = \"integer\";\n        constraint = \". >= 0\";\n        constraint_message = \"must be a positive number\";\n      } else if (valueType == \"INTEGER_ZERO_OR_NEGATIVE\") {\n        type = \"integer\";\n        constraint = \". <= 0\";\n        constraint_message = \"must be a negative number\";\n      } else if (valueType == \"INTEGER_NEGATIVE\") {\n        type = \"integer\";\n        constraint = \". < 0\";\n        constraint_message = \"must be non-zero negative number\";\n      } else if (valueType == \"NUMBER\") {\n        type = \"decimal\";\n      } else if (valueType == \"COORDINATE\") {\n        type = \"geopoint\";\n      } else if (valueType == \"EMAIL\") {\n        type = \"text\";\n        constraint = \"regex(., '[A-Za-z0-9._%+-]+@[A-Za-z0-9-]+[.][A-Za-z]{2,10}')\";\n        constraint_message = \"should be a email\";\n      } else if (valueType == \"PHONE_NUMBER\") {\n        type = \"text\";\n        constraint = \"regex(., '[0-9._%+-]+[.]')\";\n        constraint_message = \"should be a phone number\";\n      } else if (valueType == \"ORGANISATION_UNIT\") {\n        type = \"select_one orgunit\";\n      } else if (valueType == \"FILE_RESOURCE\") {\n        type = \"file\";\n      } else if (valueType == \"TIME\") {\n        type = \"time\";\n      } else if (valueType == \"AGE\") {\n        type = \"date\";\n      } else {\n        throw Error(\"valueType not supported \" + valueType);\n      }\n      return {\n        type: type,\n        constraint: constraint,\n        constraint_message: constraint_message,\n        required: required,\n        appearance: appearance\n      };\n    }\n\n    function slugify(string) {\n      if (string == undefined) {\n        return undefined;\n      }\n      string = string.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\n\n      return string\n        .toString()\n        .toLowerCase()\n        .replace(\"(\", \"_\")\n        .replace(\")\", \"_\")\n        .replace(/[‘’]/g, \"_\")\n        .replace(/[“”]/g, \"_\")\n        .replace(/\\\\s+/g, \"_\") // Replace spaces with -\n        .replace(/&/g, \"_and_\") // Replace & with 'and'\n        .replace(/[^[a-zA-Z0-9?-?]-]+/g, \"\") // Arabic support\n        .replace(/__+/g, \"_\") // Replace multiple - with single -\n        .replace(/^-+/, \"\") // Trim - from start of text\n        .replace(/_+$/, \"\"); // Trim - from end of text\n    }\n\n    const workbook = await XlsxPopulate.fromBlankAsync();\n    const sheet = workbook.sheet(0);\n    const questions = [\n      [\n        \"type\",\n        \"name\",\n        \"label\",\n        \"required\",\n        \"choice_filter\",\n        \"constraint\",\n        \"constraint_message\",\n        \"relevant\",\n        \"hint\",\n        \"appearance\",\n        \"calculation\"\n      ]\n    ];\n\n    function append_to_mappings(question_name, mapping) {\n      if (iaso_mappings[question_name] == undefined) {\n        iaso_mappings[question_name] = [];\n      }\n      iaso_mappings[question_name].push(mapping);\n    }\n\n    pg.programTrackedEntityAttributes.forEach(de => {\n      const question = toQuestion(\n        de.trackedEntityAttribute.valueType,\n        de.trackedEntityAttribute.optionSet,\n        de.compulsory\n      );\n      const question_name =\n        de.trackedEntityAttribute.code || slugify(de.trackedEntityAttribute.name);\n\n      append_to_mappings(question_name, de);\n\n      questions.push([\n        question.type,\n        question_name,\n        de.trackedEntityAttribute.formName || de.trackedEntityAttribute.name,\n        question.required,\n        undefined,\n        question.constraint,\n        question.constraint_message,\n        undefined,\n        undefined,\n        question.appearance\n      ]);\n    });\n\n    let stageIndex = 1;\n\n    pg.programStages.forEach(programStage => {\n      questions.push([\n        undefined,\n        undefined,\n        undefined,\n        undefined,\n        undefined,\n        undefined,\n        undefined\n      ]);\n      questions.push([\n        \"begin group\",\n        slugify(programStage.name),\n        programStage.name,\n        undefined,\n        undefined,\n        undefined,\n        undefined\n      ]);\n      let sectionIndex = 1;\n      if (programStage.programStageSections.length == 0) {\n        programStage.programStageSections.push({\n          dataElements: programStage.programStageDataElements.map(\n            psde => psde.dataElement\n          )\n        });\n      }\n\n      programStage.programStageSections.forEach(programStageSection => {\n        questions.push([\n          undefined,\n          undefined,\n          undefined,\n          undefined,\n          undefined,\n          undefined,\n          undefined\n        ]);\n        questions.push([\n          \"begin group\",\n          \"section_\" +\n            stageIndex +\n            \"_\" +\n            sectionIndex +\n            \"_\" +\n            slugify(programStageSection.name),\n          programStageSection.name,\n          undefined,\n          undefined,\n          undefined,\n          undefined\n        ]);\n        programStageSection.dataElements.forEach(programStageSectionDe => {\n          const de = programStage.programStageDataElements.find(\n            psde => programStageSectionDe.id == psde.dataElement.id\n          );\n          const question_name = de.dataElement.code || slugify(de.dataElement.name);\n          append_to_mappings(question_name, {\n            program: pg.id,\n            programStage: programStage.id,\n            ...de\n          });\n\n          const valueType = de.dataElement.valueType;\n          const optionSet = de.dataElement.optionSet;\n          const question = toQuestion(valueType, optionSet, de.compulsory);\n          \"type\",\n            \"name\",\n            \"label\",\n            \"required\",\n            \"choice_filter\",\n            \"constraint\",\n            \"constraint_message\",\n            \"relevant\",\n            \"hint\",\n            \"appearance\",\n            \"calculation\";\n          questions.push([\n            question.type,\n            question_name,\n            de.dataElement.formName || de.dataElement.name,\n            question.required,\n            undefined,\n            question.constraint,\n            question.constraint_message,\n            undefined,\n            undefined,\n            question.appearance\n          ]);\n        });\n        questions.push([\n          \"end group\",\n          undefined,\n          undefined,\n          undefined,\n          undefined,\n          undefined,\n          undefined\n        ]);\n        sectionIndex = sectionIndex + 1;\n      });\n      questions.push([\n        \"end group\",\n        undefined,\n        undefined,\n        undefined,\n        undefined,\n        undefined,\n        undefined\n      ]);\n      stageIndex = stageIndex + 1;\n    });\n    //questions.push([\"image\", \"imgUrl\", \"Photo de la structure\"]);\n    //questions.push([\"geopoint\", \"gps\", \"Coordonnées GPS\"]);\n\n    sheet.name(\"survey\");\n    sheet.cell(\"A1\").value(questions);\n\n    const sheetChoices = workbook.addSheet(\"choices\");\n    const dataElementsWithOptionSets = pg.programStages\n      .flatMap(ps => ps.programStageDataElements)\n      .filter(de => de.dataElement.optionSet);\n    const optionChoices = [\n      [\"list_name\", \"name\", \"label\"],\n      [\"orgunit\", \"TODO\", \"TODO\"],\n      [\"yesno\", \"1\", \"Oui\"],\n      [\"yesno\", \"0\", \"Non\"]\n    ];\n\n    const alreadyPushedOptionSet = new Set();\n    dataElementsWithOptionSets.forEach(de => {\n      if (!alreadyPushedOptionSet.has(de.dataElement.optionSet.id)) {\n        de.dataElement.optionSet.options.forEach(option => {\n          optionChoices.push([\n            slugify(de.dataElement.optionSet.code) ||\n              slugify(de.dataElement.optionSet.name),\n            option.code,\n            option.name\n          ]);\n        });\n        alreadyPushedOptionSet.add(de.dataElement.optionSet.id);\n      }\n    });\n\n    pg.programTrackedEntityAttributes.forEach(de => {\n      if (de.trackedEntityAttribute.optionSet) {\n        if (!alreadyPushedOptionSet.has(de.trackedEntityAttribute.optionSet.id)) {\n          de.trackedEntityAttribute.optionSet.options.forEach(option => {\n            optionChoices.push([\n              slugify(de.trackedEntityAttribute.optionSet.code) ||\n                slugify(de.trackedEntityAttribute.optionSet.name),\n              option.code,\n              option.name\n            ]);\n          });\n          alreadyPushedOptionSet.add(de.trackedEntityAttribute.optionSet.id);\n        }\n      }\n    });\n\n    const sheetSettings = workbook.addSheet(\"settings\");\n    const settings = [\n      [\"form_title\", \"form_id\"],\n      [pg.name, slugify(pg.code) || slugify(pg.name)]\n    ];\n    sheetSettings.cell(\"A1\").value(settings);\n\n    sheetChoices.cell(\"A1\").value(optionChoices);\n\n    XlsxPopulate.openAsBlob(workbook, slugify(pg.name) + \".xlsx\");\n    const identifier = pg.programTrackedEntityAttributes.find(\n      e => e.trackedEntityAttribute.generated == true\n    );\n    return {\n      program_id: pg.id,\n      tracked_entity_identifier: identifier.trackedEntityAttribute.id,\n      tracked_entity_type: pg.trackedEntityType.id,\n      question_mappings: iaso_mappings\n    };\n    return pg;\n\n`,\n  },\n  {\n    id: \"vPHBZOSHMfS\",\n    name: \"XLSForm - Diff two xlsform\",\n    params: [\n      {\n        id: \"v1\",\n        type: \"xlsx\",\n      },\n      {\n        id: \"v2\",\n        type: \"xlsx\",\n      },\n    ],\n    code: `\nconst surveyV1 = parameters.v1.sheet(\"survey\");\nconst surveyV2 = parameters.v2.sheet(\"survey\");\n\nconst questionKeysFrom = survey => {\n  return survey\n    .range(\"B2:B2000\")\n    .value()\n    .flat(1)\n    .filter(v => v != null);\n};\n\nconst questionFields = [\n  \"type\",\n  \"name\",\n  \"label\",\n  \"constraint\",\n  \"constraint_message\",\n  \"relevant\",\n  \"choice_filter\",\n  \"required\",\n  \"hint\",\n  \"appearance\",\n  \"calculation\"\n];\nconst asQuestions = survey => {\n  const questions = survey\n    .range(\"A2:K2000\")\n    .value()\n    .map(row => {\n      const val = {};\n      questionFields.forEach((col, index) => {\n        let rawVal = row[index];\n        if (rawVal && rawVal[\"_node\"]) {\n          rawVal = rawVal[\"_node\"][\"children\"];\n        }\n        val[col] = rawVal;\n      });\n      return val;\n    });\n  results = {};\n  questions.forEach(q => (results[q.name] = q));\n  return results;\n};\n\nconst v1_question_keys = new Set(questionKeysFrom(surveyV1));\n\nconst v2_question_keys = new Set(questionKeysFrom(surveyV2));\n\nlet allKeys = new Set([...v1_question_keys, ...v2_question_keys]);\n\nlet same_keys = new Set(\n  [...v1_question_keys].filter(x => v2_question_keys.has(x))\n);\n\nlet deleted_keys = new Set(\n  [...v1_question_keys].filter(x => !v2_question_keys.has(x))\n);\nlet added_keys = new Set(\n  [...v2_question_keys].filter(x => !v1_question_keys.has(x))\n);\n\nquestions_v1 = asQuestions(surveyV1);\n\nquestions_v2 = asQuestions(surveyV2);\ndiffs = [];\nsame_keys.forEach(key => {\n  const q1 = questions_v1[key];\n  const q2 = questions_v2[key];\n  const diffColumns = questionFields.filter(\n    field =>\n      (q1 == undefined && q2 != undefined) ||\n      (q1 != undefined && q2 == undefined) ||\n      (q1 && q2 && q1[field] !== q2[field])\n  );\n  if (diffColumns.length > 0) {\n    diffs.push({ key, diffColumns, v1: q1, v2: q2 });\n  }\n});\nconst flattened_diff = diffs.map(d => {\n  let v = { key: d.key, status: \"M\", diffColumns: d.diffColumns.join(\" , \") };\n  d.diffColumns.forEach(c => {\n    v[c + \"_v1\"] = d.v1[c];\n    v[c + \"_v2\"] = d.v2[c];\n  });\n\n  return v;\n});\n\nadded_keys.forEach(added_key => {\n  const q = questions_v2[added_key];\n  let v = {\n    key: added_key,\n    status: \"A\",\n    diffColumns: \":ALL\"\n  };\n  questionFields.forEach(c => {\n    v[c + \"_v2\"] = q[c];\n  });\n  flattened_diff.push(v);\n});\n\ndeleted_keys.forEach(deleted_key => {\n  const q = questions_v1[deleted_key];\n  let v = {\n    key: deleted_key,\n    status: \"D\",\n    diffColumns: \":ALL\"\n  };\n  questionFields.forEach(c => {\n    v[c + \"_v1\"] = q[c];\n  });\n  flattened_diff.push(v);\n});\n\nreturn flattened_diff;\nreturn {\n  deleted_keys: Array.from(deleted_keys),\n  added_keys: Array.from(added_keys),\n  same_keys: Array.from(same_keys),\n  allKeys: Array.from(allKeys),\n  v1_question_keys: Array.from(v1_question_keys),\n  v2_question_keys: Array.from(v2_question_keys),\n  diffs: diffs\n};\n\n`,\n  },\n  {\n    id: \"WJBsaMBdioj\",\n    name: \"XLSForm - generate a xlsform from a DataSet\",\n    params: [\n      {\n        id: \"dataSet\",\n        type: \"dhis2\",\n        resourceName: \"dataSets\",\n      },\n    ],\n    code: `const api = await dhis2.api();\n\n    //return await api.get(\"dataSets\");\n    const ds = await api.get(\"dataSets/\" + parameters.dataSet.id, {\n      fields:\n        \"id,name,periodType,dataSetElements[dataElement[id,name,formName,code,valueType,categoryCombo[id,name,categoryOptionCombos[id,name,categoryOptions[id,name,code]]]\"\n    });\n    const questions = [];\n\n    var collator = new Intl.Collator(undefined, {\n      numeric: true,\n      sensitivity: \"base\"\n    });\n    const dataSetElements = ds.dataSetElements.sort((a, b) =>\n      collator.compare(a.dataElement.name, b.dataElement.name)\n    );\n\n    function slugify(str) {\n      str = str.replace(/^\\\\s+|\\\\s+$/g, \"\"); // trim\n      str = str.toLowerCase();\n      str = str.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\n      // remove accents, swap ñ for n, etc\n      var from = \"·/_,:;\";\n      var to = \"______\";\n\n      for (var i = 0, l = from.length; i < l; i++) {\n        str = str.replace(new RegExp(from.charAt(i), \"g\"), to.charAt(i));\n      }\n\n      str = str\n        .replace(/[^a-z0-9 -]/g, \"\") // remove invalid chars\n        .replace(/\\\\s+/g, \"_\") // collapse whitespace and replace by -\n        .replace(/-+/g, \"_\"); // collapse dashes\n\n      return str;\n    }\n\n    dataSetElements.forEach(dataSetElement => {\n      const dataElement = dataSetElement.dataElement;\n      dataElement.categoryCombo.categoryOptionCombos.forEach(coc => {\n        const coc_code = coc.categoryOptions.map(o => slugify(o.code)).join(\"__\");\n        let type = \"\";\n        let constraint;\n        let constraint_message;\n        let required;\n\n        if (\n          dataElement.valueType == \"BOOLEAN\" ||\n          dataElement.valueType == \"TRUE_ONLY\"\n        ) {\n          type = \"select_one yesno\";\n        } else if (dataElement.valueType == \"DATE\") {\n          type = \"date\";\n        } else if (dataElement.valueType == \"TEXT\") {\n          type = \"text\";\n        } else if (dataElement.valueType == \"PERCENTAGE\") {\n          type = \"integer\";\n        } else if (dataElement.valueType == \"INTEGER\") {\n          type = \"integer\";\n        } else if (dataElement.valueType == \"INTEGER_POSITIVE\") {\n          type = \"integer\";\n          constraint = \". > 0\";\n          constraint_message = \"must be non-zero positive number\";\n        } else if (dataElement.valueType == \"INTEGER_ZERO_OR_POSITIVE\") {\n          type = \"integer\";\n          constraint = \". >= 0\";\n          constraint_message = \"must be a positive number\";\n        } else if (dataElement.valueType == \"INTEGER_ZERO_OR_NEGATIVE\") {\n          type = \"integer\";\n          constraint = \". <= 0\";\n          constraint_message = \"must be a negative number\";\n        } else if (dataElement.valueType == \"INTEGER_NEGATIVE\") {\n          type = \"integer\";\n          constraint = \". < 0\";\n          constraint_message = \"must be non-zero negative number\";\n        } else if (dataElement.valueType == \"NUMBER\") {\n          type = \"decimal\";\n        } else if (dataElement.valueType == \"COORDINATE\") {\n          type = \"geopoint\";\n        }\n        let label = dataElement.formName || dataElement.name;\n        let code = slugify(dataElement.code || dataElement.name);\n        if (coc.name != \"default\") {\n          label = label + \" \" + coc.name;\n          code = code + \"__\" + coc_code;\n        }\n        questions.push({\n          type: type,\n          name: code,\n          label: label,\n          constraint: constraint,\n          constraint_message: constraint_message\n        });\n      });\n\n      //questions.push({});\n    });\n\n    const workbook = await XlsxPopulate.fromBlankAsync();\n\n    const questionFields = [\n      \"type\",\n      \"name\",\n      \"label\",\n      \"constraint\",\n      \"constraint_message\",\n      \"relevant\",\n      \"choice_filter\",\n      \"required\",\n      \"hint\",\n      \"appearance\",\n      \"calculation\"\n    ];\n\n    const sheet = workbook.sheet(0);\n    sheet.name(\"survey\");\n    sheet.cell(\"A1\").value([questionFields])\n    sheet.cell(\"A2\").value(questions.map(question => questionFields.map(f => question[f])));\n\n\n    const sheetChoices = workbook.addSheet(\"choices\");\n    const optionChoices = [\n      [\"list_name\", \"name\", \"label\"],\n      [\"yesno\", \"yes\", \"1\"],\n      [\"yesno\", \"no\", \"0\"]\n    ];\n    sheetChoices.cell(\"A1\").value(optionChoices);\n\n    const sheetSettings = workbook.addSheet(\"settings\");\n    const settings = [\n      [\"form_title\",\"form_id\"],\n      [ds.name,ds.code]\n    ];\n\n    sheetSettings.cell(\"A1\").value(settings);\n\n    XlsxPopulate.openAsBlob(workbook, slugify(ds.name)+\".xslx\");\n\n\n    return questions;\n    `,\n  },\n  {\n    id: \"ZZJcZFTSl50\",\n    name: \"Coordinates - Coordinates coverage\",\n    code: `\nlet stats = [];\nconst api = await dhis2.api();\n\nconst levels = (await api.get(\"organisationUnitLevels\", {\n  fields: \"id,name,level\",\n  order: \"level\"\n})).organisationUnitLevels;\n\nfunction perc2color(perc) {\n  var r,\n    g,\n    b = 0;\n  if (perc < 50) {\n    r = 255;\n    g = Math.round(5.1 * perc);\n  } else {\n    g = 255;\n    r = Math.round(510 - 5.1 * perc);\n  }\n  var h = r * 0x10000 + g * 0x100 + b * 0x1;\n  return \"#\" + (\"000000\" + h.toString(16)).slice(-6);\n}\nconst system = await api.get(\"system/info\");\nconst version = system.version;\nconst v = version.split(\".\");\nconst vfloat = parseFloat(v[0] + \".\" + v[1]);\nconst fieldCoordinates = vfloat >= 2.32 ? \"geometry\" : \"coordinates\";\nconst ouFields = \"id,name,coordinates,geometry,ancestors[id,name],leaf,level\"\nlet provinces = await api.get(\"organisationUnits\", {\n  fields: ouFields,\n  filter: [\"level:eq:2\"],\n  paging: false\n});\nlet allOrgunits = [];\nconst facilityLevel = levels[levels.length - 1];\nfor (province of provinces.organisationUnits) {\n  const children = await api.get(\"organisationUnits\", {\n    fields: ouFields,\n    filter: [\"path:ilike:\" + province.id],\n    paging: false\n  });\n  withCoordinates = children.organisationUnits.filter(\n    ou => ou.level == facilityLevel.level && (ou.coordinates || ou.geometry)\n  ).length;\n  withoutCoordinates = children.organisationUnits.filter(\n    ou =>\n      facilityLevel.level &&\n      (ou.coordinates == undefined && ou.geometry == undefined)\n  ).length;\n  province.withCoordinates = withCoordinates;\n  province.withoutCoordinates = withoutCoordinates;\n  province.totalFacilities = withCoordinates + withoutCoordinates\n  province.percentage =\n    ((withCoordinates * 100) / (withCoordinates + withoutCoordinates)).toFixed(2);\n  province.color = \"blue\";\n  province.fillColor = perc2color(province.percentage);\n  stats.push(province);\n  children.organisationUnits.forEach(ou => allOrgunits.push(ou));\n}\nreport.register(\"organisationUnits\", allOrgunits);\nreport.register(\"stats2\", stats);\nstats = []\nallOrgunits.forEach(ou => turf.geometrify(ou))\nconst districts = allOrgunits.filter(ou => ou.level == 3)\nconst badPoints = []\nfor (district of districts ) {\n  children = allOrgunits.filter(ou => ou.level == facilityLevel.level && ou.ancestors[2] && ou.ancestors[2].id == district.id)\n  withCoordinates = children.filter(\n    ou => (ou.coordinates || ou.geometry)\n  ).length;\n  withoutCoordinates = children.filter(\n    ou =>\n      (ou.coordinates == undefined && ou.geometry == undefined)\n  ).length;\n  children.filter(ou => ou.geometry).forEach( ou => {\n    ou.inside = turf.booleanPointInPolygon(ou.geometry, district.geometry);\n    ou.color = ou.inside ? \"green\" : \"red\"\n    if (ou.inside == false) {\n      badPoints.push(ou)\n    }\n  })\n\n  district.pointsInParentPolygon = children.filter(ou => ou.inside == true).length\n  district.withCoordinates = withCoordinates;\n  district.withoutCoordinates = withoutCoordinates;\n  district.totalFacilities = withCoordinates + withoutCoordinates\n  district.percentage =\n    ((withCoordinates * 100) / (withCoordinates + withoutCoordinates)).toFixed(2);\n\n\n  district.color = \"blue\";\n  district.fillColor = perc2color(district.percentage);\n  stats.push(district);\n}\n\nreport.register(\"stats3\", stats);\nreport.register(\"stats4\", stats.concat(badPoints));\nreturn \"\";\n  `,\n    report: `\n[PageOrientation orientation:\"landscape\" /]\n# Coordinates Coverage\n\n> Number of org units with coordinates\n> --------------------------------------------------------------------\n>                 Number of org units\n\n[PageBreak /]\n## At level 2\n[FlexBox]\n[OrgunitMap lines:stats2 /]\n[/FlexBox]\n[PageBreak /]\n\n## At level 3\n[FlexBox]\n[OrgunitMap lines:stats3 /]\n[/FlexBox]\n[PageBreak /]\n\n\n## Detailed data\n[DataTable data:\\`stats2.map(l => _.omit(l, ['id','geometry','coordinates','ancestors','color','fillColor']))\\` label:\"Province coverage data\" perPage:20/]\n\n[br/][br/][br/]\n[DataTable data:\\`stats3.map(l => _.omit(l, ['id','geometry','coordinates','ancestors','color','fillColor']))\\` label:\"District coverage data\" perPage:5/]\n\n# Coordinates not belonging to parent polygon\n\n## All points\n[FlexBox]\n[OrgunitMap lines:organisationUnits width:\"700px\" height:\"700px\"/]\n[/FlexBox]\n[PageBreak /]\n\n## All points not belonging to parent polygon\n[FlexBox]\n[OrgunitMap lines:\\`stats4.map(l => _.omit(l, ['color','fillColor']))\\` width:\"700px\" height:\"700px\"/]\n[/FlexBox]\n`,\n  },\n  {\n    id: \"FP8cYl1lSF6\",\n    name: \"demo dashboard to pdf\",\n    params: [\n      {\n        id: \"dashboard\",\n        label: \"Search\",\n        type: \"dhis2\",\n        resourceName: \"dashboards\",\n        default: {\n          name: \"PLAY Delivery\",\n          id: \"iMnYyBfSxmM\",\n        },\n      },\n    ],\n    code: `\n    let params = new URLSearchParams(window.location.href.split(\"?\")[1]);\n    const dashboardId = params.get(\"dashboardId\") || parameters.dashboard.id\n// press crtl-r to run\nconst api = await dhis2.api();\nconst ou = await api.get(\"dashboards/\"+dashboardId, {\n  fields: \"id,name,dashboardItems[type,chart[id,name],map[id,name],reportTable[id,name]]\",\n  paging: false\n});\nconst vals = ou.dashboardItems.filter(d => d.chart || d.map|| d.reportTable);\n\nreport.register(\"charts\", vals);\nreturn \"\";\n`,\n\n    report: `\n[PageOrientation orientation:\"landscape\" /]\n\n\n[MyLoop value:charts]\n [Dhis2Item /]\n [PageBreak /]\n[/MyLoop]`,\n  },\n  {\n    id: \"azwst23HaO2\",\n    name: \"demo dashboard to pdf 2\",\n    params: [\n      {\n        id: \"dashboard\",\n        label: \"Search\",\n        type: \"dhis2\",\n        resourceName: \"dashboards\",\n        default: {\n          name: \"PLAY Delivery\",\n          id: \"iMnYyBfSxmM\",\n        },\n      },\n    ],\n    code: `\n    let params = new URLSearchParams(window.location.href.split(\"?\")[1]);\n    const dashboardId = params.get(\"dashboardId\") || parameters.dashboard.id\n    const api = await dhis2.api();\n\n    const toDataURL = url =>\n      fetch(url)\n        .then(response => response.blob())\n        .then(\n          blob =>\n            new Promise((resolve, reject) => {\n              const reader = new FileReader();\n              reader.onloadend = () => resolve(reader.result);\n              reader.onerror = reject;\n              reader.readAsDataURL(blob);\n            })\n        );\n\n    const ou = await api.get(\"dashboards/\" + dashboardId, {\n      fields:\n        \"id,name,dashboardItems[type,chart[id,name],map[id,name],reportTable[id,name]]\",\n      paging: false\n    });\n    const dashboardItems = ou.dashboardItems.filter(\n      d => d.chart || d.map || d.reportTable\n    );\n\n    const results = [];\n    for (item of dashboardItems) {\n      const prefixUrl = \"../../\";\n      const propName =\n        item && item.type\n          ? item.type == \"REPORT_TABLE\"\n            ? \"reportTable\"\n            : item.type.toLowerCase()\n          : \"\";\n\n      const itemName = item && item[propName] ? item[propName].name : \"\";\n      let resourceName = undefined;\n      if (propName == \"reportTable\") {\n        resourceName = \"reportTables\";\n      } else {\n        resourceName = propName.toLowerCase() + \"s\";\n      }\n      let url = prefixUrl + resourceName + \"/\" + item[propName].id + \"/data\";\n      let content = undefined;\n      let contentType\n      if (propName == \"reportTable\") {\n        url += \".html+css\";\n        contentType = \"html\";\n        content = await fetch(url).then(r => r.text());\n      } else {\n        url += \".png\";\n        contentType = \"img\";\n        content = await toDataURL(url);\n      }\n\n      results.push({ item, url, content, contentType });\n    }\n    report.register(\"charts\", results);\n    return null;\n\n`,\n\n    report: `\n[PageOrientation orientation:\"landscape\" /]\n\n\n[MyLoop value:charts]\n [Dhis2Content /]\n [PageBreak /]\n[/MyLoop]`,\n  },\n  {\n    id: \"df\",\n    name: \"Users - Last metadata changes (this months max 1000)\",\n    code: `\ndate = new Date();\nvar newDate = new Date(date.setMonth(date.getMonth() - 1));\nconst api = await dhis2.api();\nconst ou = await api.get(\"metadataAudits\", {\n  pageSize: 1000,\n  createdAt: date.toJSON().substring(0, 7)\n});\nou.metadataAudits = ou.metadataAudits.sort(\n  (a, b) => -1 * a.createdAt.localeCompare(b.createdAt)\n);\nconst format_value = mutation => {\n  if (mutation.path == \"attributeValues\") {\n    return mutation.value\n      .map(av => av.attribute.code + \" => \" + av.value)\n      .join(\"\\\\n\");\n  }\n  if (mutation.path == \"dataSetElements\") {\n    return (\n      mutation.path + \" => \" + mutation.value.map(av => av.dataElement.name)\n    );\n  }\n  return mutation.path + \" => \" + mutation.value;\n};\n\nou.metadataAudits.forEach(met => {\n  met.klass = met.klass.split(\".\")[met.klass.split(\".\").length - 1];\n  if (met.value) {\n    const value = JSON.parse(met.value);\n    let val = value.mutations\n      ? value.mutations\n          .filter(m => m.path !== \"lastUpdated\")\n          .map(m => format_value(m))\n      : [];\n    if (met.type === \"CREATE\" || met.type === \"DELETE\") {\n      val = [value.name + \" (\" + value.id + \")\"];\n    }\n    delete met.value;\n    met.what = val.join(\"\\\\n \");\n  }\n});\nreturn ou.metadataAudits;\n`,\n  },\n  {\n    id: \"vgSvwOMNAvQ\",\n    name: \"Export - Data values for a given orgUnit, dataSet and periods\",\n    params: [\n      {\n        id: \"dataSet\",\n        type: \"dhis2\",\n        resourceName: \"dataSets\",\n      },\n      {\n        id: \"orgUnit\",\n        type: \"dhis2\",\n        resourceName: \"organisationUnits\",\n      },\n      {\n        id: \"periods\",\n        type: \"text\",\n      },\n    ],\n    code: `\n    // #/recipes/vgSvwOMNAvQ?dataSet=aLpVgfXiz0f&orgUnit=U514Dz4v9pv&periods=2018,2019&autorun=true\n    let params = new URLSearchParams(window.location.href.split(\"?\")[1]);\n    const periods = params.get(\"periods\") || parameters.periods;\n    const dataSetId = params.get(\"dataSet\") || parameters.dataSet.id;\n    const orgUnitId = params.get(\"orgUnit\") || parameters.orgUnit.id;\n    const api = await dhis2.api();\n\n    const dataSet = await api.get(\"dataSets/\" + dataSetId, {\n      fields:\n        \"id,dataSetElements[dataElement[id,name,categoryCombo[id,name,categoryOptionCombos[id,name]\"\n    });\n\n    const dataElementsById = {};\n\n    const categoryOptionCombosById = {};\n\n    dataSet.dataSetElements.forEach(dse => {\n      const dataElement = dse.dataElement;\n      dataElementsById[dataElement.id] = {\n        id: dataElement.id,\n        name: dataElement.name\n      };\n      const categoryOptionCombos = dataElement.categoryCombo.categoryOptionCombos;\n      categoryOptionCombos.forEach(coc => (categoryOptionCombosById[coc.id] = coc));\n    });\n\n    const periodsQuery =\n      \"period=\" +\n      periods\n        .split(\",\")\n        .map(p => p.trim())\n        .join(\"&period=\");\n    const ouQuery = \"orgUnit=\" + orgUnitId;\n\n    const url =\n      \"dataValueSets?\" + periodsQuery + \"&\" + ouQuery + \"&dataSet=\" + dataSetId;\n    const vals = await api.get(url);\n\n    if (!vals.dataValues) {\n      return \"no data\";\n    }\n\n    vals.dataValues.forEach(dv => {\n      dv.dataElement = dataElementsById[dv.dataElement];\n      dv.categoryOptionCombo = categoryOptionCombosById[dv.categoryOptionCombo];\n    });\n\n    const values = _.flattenObjects(vals.dataValues);\n    const workbook = await XlsxPopulate.fromBlankAsync();\n    const columns = Object.keys(values[0]);\n\n    const sheet = workbook.sheet(0);\n    sheet\n      .cell(\"A1\")\n      .value([columns])\n      .style(\"fontColor\", \"ff0000\");\n\n    const r = sheet.cell(\"A2\");\n\n    r.value(values.map(dv => columns.map(col => dv[col])));\n    sheet.column(\"A\").width(30);\n    sheet.column(\"B\").width(30);\n    sheet.column(\"C\").width(30);\n    sheet.column(\"D\").width(30);\n    sheet.column(\"E\").width(30);\n    sheet.column(\"F\").width(30);\n    sheet.column(\"G\").width(30);\n    sheet.column(\"H\").width(30);\n\n    XlsxPopulate.openAsBlob(\n      workbook,\n      \"datavalues-\" + orgUnitId + \"-\" + dataSetId + \"-\" + periods + \"\" + \".xlsx\"\n    );\n    return vals.dataValues;\n`,\n  },\n\n  {\n    id: \"azdflm3HaO2\",\n    name: \"Play : Audit, select and fix orgunit name demo\",\n    report: `\n# Hello\n\n* Run once, select a few orgunits\n* then click \"Fix me\"\n* then confirm\n* this will patch the orgunits name and\n* relaunch the recipe\n\n[DataTable data:organisationUnits label:\"organisationUnits\" perPage:20 selectableRows:\"multiple\" ]\n[DataTableAction label:\"Fix me\" onClick:organisationUnitsOnClick/]\n[DataTableAction label:\"Unfix me\" onClick:organisationUnitsOnClick/]\n[/DataTable]\n\ndemo\n      `,\n    code: `\n\n// press crtl-r to run\nconst api = await dhis2.api();\n\nconst ou = await api.get(\"organisationUnits\", {\n  fields: \"id,name,coordinates,geometry\",\n  paging: false\n});\n\nreport.register(\"organisationUnits\", ou.organisationUnits);\nreport.register(\"organisationUnitsOnClick\", async selectedRows => {\n  const details = [];\n  const confirm = prompt(\n    \"Please confirm you want to modify all \" +\n      selectedRows.length +\n      \" orgunits. (Can't be undone !!)\",\n    \"Yes\"\n  );\n  if (confirm == \"Yes\") {\n    for (selected of selectedRows) {\n      details.push(\n        await api.patch(\"organisationUnits/\" + selected.id, {\n          name: selected.name + \" (modified by this recipe)\"\n        })\n      );\n    }\n    report.reset(\"run\");\n    // report.reset(\"clear\");\n  }\n});\n\nreturn \"\";\n`,\n  },\n\n  {\n    id: \"belflm3Ha77\",\n    name: \"Covid Belgium : hospitalisation\",\n    report: `\n    [PageOrientation orientation:\"landscape\" /]\n    # Overview NEW_ING last month\n    [FlexBox]\n    [IdyllVegaLite data:data spec:\\`{\n      title: \"Belgium\",\n      width: 900,\n      height: 300,\n      \"encoding\": {\"x\": {\"field\": \"DATE\", \"type\": \"temporal\"}},\n\n      \"layer\": [\n        {\n          \"encoding\": {\n            \"color\": {\"field\": \"PROVINCE\", \"type\": \"nominal\"},\n            \"y\": {\"field\": \"NEW_IN\", \"type\": \"quantitative\"}\n          },\n          \"layer\": [\n            {\"mark\": \"line\"},\n            {\"transform\": [{\"filter\": {\"selection\": \"hover\"}}], \"mark\": \"point\"},\n\n          ]\n        },\n        {\n          \"transform\": [{\"pivot\": \"PROVINCE\", \"value\": \"NEW_IN\", \"groupby\": [\"DATE\"]}],\n          \"mark\": \"rule\",\n          \"encoding\": {\n            \"opacity\": {\n              \"condition\": {\"value\": 0.3, \"selection\": \"hover\"},\n              \"value\": 0\n            },\n            \"tooltip\": [\n              {\"field\": \"Antwerpen\", \"type\": \"quantitative\"},\n              {\"field\": \"BrabantWallon\", \"type\": \"quantitative\"},\n              {\"field\": \"Brussels\", \"type\": \"quantitative\"},\n              {\"field\": \"Hainaut\", \"type\": \"quantitative\"},\n              {\"field\": \"Limburg\", \"type\": \"quantitative\"},\n                        {\"field\": \"Liège\", \"type\": \"quantitative\"},\n                        {\"field\": \"Luxembourg\", \"type\": \"quantitative\"},\n                        {\"field\": \"Namur\", \"type\": \"quantitative\"},\n                        {\"field\": \"OostVlaanderen\", \"type\": \"quantitative\"},\n                         {\"field\": \"WestVlaanderen\", \"type\": \"quantitative\"},\n                        {\"field\": \"VlaamsBrabant\", \"type\": \"quantitative\"},\n\n            ]\n          },\n          \"selection\": {\n            \"hover\": {\n              \"type\": \"single\",\n              \"fields\": [\"DATE\"],\n              \"nearest\": true,\n              \"on\": \"mouseover\",\n              \"empty\": \"none\",\n              \"clear\": \"mouseout\"\n            }\n          }\n        }\n      ]\n    }:\\` /]\n    [IdyllVegaLite data:data spec:\\`{\n       \"width\": 800, \"height\": 250,\n      \"resolve\": {\"scale\": {\"color\": \"independent\"}},\n\n      \"layer\": [\n         {\"mark\": \"bar\",\n          \"encoding\": {\n            \"x\": {\"aggregate\": \"sum\", \"field\": \"NEW_IN\", \"type\": \"quantitative\", \"stack\": \"zero\"},\n            \"y\": {\"field\": \"PROVINCE\", \"type\": \"nominal\"},\n            \"color\": {\"field\": \"PROVINCE\", \"type\": \"nominal\"}},\n\n         },\n         {\"mark\": {\"type\": \"text\", \"dx\": -15, \"dy\": 3},\n          \"encoding\": {\n            \"x\": {\"aggregate\": \"sum\", \"field\": \"NEW_IN\", \"type\": \"quantitative\", \"stack\": \"zero\"},\n            \"y\": {\"field\": \"PROVINCE\", \"type\": \"nominal\"},\n            \"color\": {\"field\": \"PROVINCE\", \"type\": \"nominal\", \"scale\": {\"range\": [\"white\"]}, \"legend\": null},\n            \"text\": {\"aggregate\": \"sum\", \"field\": \"NEW_IN\", \"type\": \"quantitative\", \"format\": \".0f\"}}\n        }\n      ]\n\n    }:\\` /]\n    [/FlexBox]\n\n# NEW_IN avg last 7 days\n[FlexBox]\n[OrgunitMap lines:provincesGeojson width:\"400px\" height:\"400px\"/]\n[DataTable data:\\`provincesGeojson.map(l => l.properties):\\` label:\"Province NEW_IN avg data\" perPage:20/]\n\n[/FlexBox]\n# NEW_IN in last month\n[FlexBox]\n\n[IdyllVegaLite data:\\`graphByProvince[\"Antwerpen\"].data\\` spec:\\`graphByProvince[\"Antwerpen\"].spec\\` /]\n[IdyllVegaLite data:\\`graphByProvince[\"OostVlaanderen\"].data\\` spec:\\`graphByProvince[\"OostVlaanderen\"].spec\\` /]\n[IdyllVegaLite data:\\`graphByProvince[\"WestVlaanderen\"].data\\` spec:\\`graphByProvince[\"WestVlaanderen\"].spec\\` /]\n[IdyllVegaLite data:\\`graphByProvince[\"VlaamsBrabant\"].data\\` spec:\\`graphByProvince[\"VlaamsBrabant\"].spec\\` /]\n[IdyllVegaLite data:\\`graphByProvince[\"Limburg\"].data\\` spec:\\`graphByProvince[\"Limburg\"].spec\\` /]\n[IdyllVegaLite data:\\`graphByProvince[\"Brussels\"].data\\` spec:\\`graphByProvince[\"Brussels\"].spec\\` /]\n[IdyllVegaLite data:\\`graphByProvince[\"Liège\"].data\\` spec:\\`graphByProvince[\"Liège\"].spec\\` /]\n[IdyllVegaLite data:\\`graphByProvince[\"Namur\"].data\\` spec:\\`graphByProvince[\"Namur\"].spec\\` /]\n[IdyllVegaLite data:\\`graphByProvince[\"BrabantWallon\"].data\\` spec:\\`graphByProvince[\"BrabantWallon\"].spec\\` /]\n[IdyllVegaLite data:\\`graphByProvince[\"Hainaut\"].data\\` spec:\\`graphByProvince[\"Hainaut\"].spec\\` /]\n[IdyllVegaLite data:\\`graphByProvince[\"Luxembourg\"].data\\` spec:\\`graphByProvince[\"Luxembourg\"].spec\\` /]\n[/FlexBox]\n    `,\n    code: `\n\n  const data = (\n    await fetch(\"https://epistat.sciensano.be/Data/COVID19BE_HOSP.json\").then(r =>\n      r.json()\n    )\n  ).filter(d => d.DATE > \"2020-09-01\");\n\n  report.register(\"data\", data);\n\n  const provincesGeojson = await fetch(\n    \"https://mestachs.github.io/belgium/provinces.geo.json\"\n  ).then(r => r.json());\n\n  report.register(\"provincesGeojson\", provincesGeojson.features);\n\n  function toColor(perc) {\n    var r,\n      g,\n      b = 0;\n    if (perc < 50) {\n      r = 255;\n      g = Math.round(5.1 * perc);\n    } else {\n      g = 255;\n      r = Math.round(510 - 5.1 * perc);\n    }\n    var h = r * 0x10000 + g * 0x100 + b * 0x1;\n    return \"#\" + (\"000000\" + h.toString(16)).slice(-6);\n  }\n\n  const provinces = new Set();\n\n  data.forEach(d => provinces.add(d.PROVINCE));\n  const provinceMapping = {\n    \"East Flanders\": \"OostVlaanderen\",\n    Antwerp: \"Antwerpen\",\n    Brussels: \"Brussels\",\n    Hainaut: \"Hainaut\",\n    Limburg: \"Limburg\",\n    Liege: \"Liège\",\n    Luxembourg: \"Luxembourg\",\n    Namur: \"Namur\",\n    \"Flemish Brabant\": \"VlaamsBrabant\",\n    \"Walloon Brabant\": \"BrabantWallon\",\n    \"West Flanders\": \"WestVlaanderen\"\n  };\n  provincesGeojson.features.forEach(province => {\n    const provinceName = provinceMapping[province.properties.NAME_1];\n    const provinceData = data.filter(d => d.PROVINCE == provinceName);\n    if (provinceData.length == 0) {\n      throw new Error(\n        \"no data for \" + province.properties.NAME_1 + \" vs \" + provinceName\n      );\n    }\n    const provinceDataLast7days = provinceData.slice(\n      provinceData.length - 7,\n      provinceData.length\n    );\n    const provinceDataLast14days = provinceData.slice(\n      provinceData.length - 14,\n      provinceData.length\n    );\n\n    const last7AvgRounded = _.meanBy(\n      provinceDataLast7days,\n      p => p.NEW_IN\n    ).toFixed(2);\n    const last14AvgRounded = _.meanBy(\n      provinceDataLast14days,\n      p => p.NEW_IN\n    ).toFixed(2);\n    let percentage = 0;\n    if (last7AvgRounded >= 30) {\n      percentage = 0;\n    }\n    if (last7AvgRounded >= 20) {\n      percentage = 5;\n    }\n    if (last7AvgRounded >= 8) {\n      percentage = 10;\n    } else if (last7AvgRounded >= 6) {\n      percentage = 25;\n    } else if (last7AvgRounded >= 4) {\n      percentage = 35;\n    } else if (last7AvgRounded >= 2) {\n      percentage = 50;\n    } else if (last7AvgRounded > 0) {\n      percentage = 75;\n    } else {\n      percentage = 100;\n    }\n    province.properties = {\n      province: provinceName,\n      Last7days: last7AvgRounded,\n      Last14days: last14AvgRounded\n      //percentage: percentage\n    };\n    province.fillColor = toColor(percentage);\n    province.opacity = 0.6\n  });\n\n  const graphByProvince = {};\n  provinces.forEach(province => {\n    const graph = {\n      data: data.filter(d => d.PROVINCE == province),\n      spec: {\n        width: 300,\n        height: 100,\n        mark: \"bar\",\n        title: province,\n        encoding: {\n          tooltip: [\n            { field: \"NEW_IN\", type: \"quantitative\" },\n            { field: \"DATE\", type: \"temporal\" }\n          ],\n          x: {\n            field: \"DATE\",\n            type: \"temporal\",\n            axis: { title: \"time\", format: \"%Y%m%d\" }\n          },\n\n          y: {\n            field: \"NEW_IN\",\n            type: \"quantitative\",\n            axis: {\n              title: \"new in\",\n              tickCount: 5\n            },\n            scale: { domain: [0, 35] }\n          }\n        }\n      }\n    };\n    graphByProvince[province] = graph;\n  });\n\n  report.register(\"graphByProvince\", graphByProvince);\n\n  return \"\";\n  `,\n  },\n  {\n    id: \"zti4UfUGliw\",\n    name: \"BLSQ - Export dataset\",\n    params: [\n      {\n        id: \"dataset\",\n        label: \"Search for dataset\",\n        type: \"dhis2\",\n        resourceName: \"dataSets\",\n      },\n    ],\n    code: `\n\n    let api = await dhis2.api();\n\n    const datasets = await api.get(\"dataSets\", {\n      fields:\n        \"id,name,href,periodType,:all,dataSetElements[dataElement[id,code,name,shortName,domainType,valueType,aggregationType,description,categoryCombo[id,name,categoryOptionCombos[id,name,code,categoryCombo[id,name]]],formName,zeroIsSignificant,optionSet[id,name,options[id,code,name,optionSet[id]]]]]\",\n      filter: \"name:eq:\" + parameters.dataset.name\n    });\n\n    const ds = datasets.dataSets[0];\n\n    const dataElements = ds.dataSetElements.flatMap(dse => dse.dataElement);\n    const optionSets = _.uniqBy(\n      dataElements.filter(de=> de.optionSet).map(de => de.optionSet),\n      cc => cc.id\n    );\n\n    const options = _.uniqBy(\n      dataElements.filter(de=> de.optionSet).flatMap(de => de.optionSet.options),\n      cc => cc.id\n    );\n    const categoryCombos = _.uniqBy(\n      dataElements.map(de => de.categoryCombo),\n      cc => cc.id\n    );\n\n    const categoryOptionCombos = _.uniqBy(\n      dataElements.flatMap(de => de.categoryCombo.categoryOptionCombos),\n      cc => cc.id\n    );\n\n    report.register(\"dataSet\", ds);\n    report.register(\n      \"dataElements\",\n      _.reorderColumns(\n        _.renameColumns(_.flattenObjects(dataElements), {\n          \"categoryCombo-id\": \"categoryCombo\"\n        }),\n        [\n          \"id\",\n          \"name\",\n          \"shortName\",\n          \"code\",\n          \"aggregationType\",\n          \"domainType\",\n          \"valueType\",\n          \"zeroIsSignificant\",\n          \"categoryCombo-name\",\n          \"categoryCombo\",\n          \"optionSet-id\",\n          \"optionSet-name\",\n        ]\n      )\n    );\n\n    report.register(\n      \"categoryCombos\",\n      _.reorderColumns(categoryCombos, [\"id\", \"name\"])\n    );\n    report.register(\n      \"categoryOptionCombos\",\n      _.reorderColumns(_.flattenObjects(categoryOptionCombos), [\"id\", \"code\",\"name\",\"categoryCombo-id\",\"categoryCombo-name\"])\n    );\n    report.register(\n      \"optionSets\",\n      _.reorderColumns(optionSets,[\"id\",\"name\"])\n    )\n    report.register(\n      \"options\",\n      _.flattenObjects(options)\n    )\n    return \"\";\n    `,\n\n    report: `\n    DataSet : **[Display value:\\`dataSet.name\\` /]** - [Display value:\\`dataSet.periodType\\` /].\n\n    from [Display value:\\`dataSet.href\\` /]\n\n    # Data elements\n    [DataTable data:dataElements label:\"Data Elements\" perPage:5/]\n\n    # Category Combos\n    [DataTable data:categoryCombos label:\"categoryCombos\" perPage:5/]\n\n    # Category Option Combos\n    [DataTable data:categoryOptionCombos label:\"categoryOptionCombos\" perPage:5/]\n\n    # Option Sets\n    [DataTable data:optionSets label:\"optionSets\" perPage:5/]\n\n    # Options\n    [DataTable data:options label:\"options\" perPage:5/]\n    `,\n  },\n  {\n    id: \"ay1YOx7IwyH\",\n    name: \"Dataset similarities\",\n    code: `\n\n    const api = await dhis2.api();\n    const dataElements = (\n      await api.get(\"dataElements\", {\n        fields: \"id,name,dataSetElements[dataSet[id,name]]\",\n        paging: false\n      })\n    ).dataElements;\n\n    const dataSets = (\n      await api.get(\"dataSets\", {\n        fields: \"id,name,periodType,dataSetElements[dataElement[id,name]]\",\n        paging: false\n      })\n    ).dataSets;\n    const selectedDataSets = dataSets.filter(\n      ds => !ds.name.includes(\"ORBF -\") && ds.dataSetElements.length > 0\n    );\n    const humanResults = [];\n    const results = new Set();\n    selectedDataSets.forEach(dsA => {\n      selectedDataSets.forEach(dsB => {\n        if (dsA.id !== dsB.id) {\n          const setA = new Set(dsA.dataSetElements.map(dse => dse.dataElement.id));\n          const setB = new Set(dsB.dataSetElements.map(dse => dse.dataElement.id));\n          const deInA = dsB.dataSetElements.filter(dse =>\n            setA.has(dse.dataElement.id)\n          );\n          const notInA = dsB.dataSetElements.filter(\n            dse => !setA.has(dse.dataElement.id)\n          );\n          const notInB = dsA.dataSetElements.filter(\n            dse => !setB.has(dse.dataElement.id)\n          );\n          const pendwidth = Math.min(Math.max(1, deInA.length), 20);\n          const dotlineA =\n            dsA.id + \" -- \" + dsB.id + \" [penwidth=\" + pendwidth + \"]\";\n          const dotlineB =\n            dsB.id + \" -- \" + dsA.id + \" [penwidth=\" + pendwidth + \"]\";\n          if (\n            deInA.length > 0 &&\n            !results.has(dotlineA) &&\n            !results.has(dotlineB)\n          ) {\n            results.add(dotlineA);\n            humanResults.push({\n              dsA: dsA.name,\n              dsB: dsB.name,\n              commonElementsSize: deInA.length,\n              ratio:\n                (deInA.length / (deInA.length + notInA.length + notInB.length)) *\n                100,\n              notInASize: notInA.length,\n              notInBSize: notInB.length,\n              commonElements: deInA.map(dse => dse.dataElement.name).join(\"\\\\n\"),\n              notInA: notInA.map(dse => dse.dataElement.name).join(\"\\\\n\"),\n              notInB: notInB.map(dse => dse.dataElement.name).join(\"\\\\n\")\n            });\n            results.add(dsA.id + '[label=\"' + dsA.name + '\"]');\n            results.add(dsB.id + '[label=\"' + dsB.name + '\"]');\n          }\n        }\n      });\n    });\n\n    const finalresults = [\"graph G {\"].concat(Array.from(results)).concat([\"}\\\\n\"]);\n\n    _.copyToClipBoard(finalresults.join(\"\\\\n\"));\n    return humanResults;\n    `,\n  },\n  {\n    id: \"R1vONil9UYA\",\n    name: \"Export program definition as xlsx\",\n    params: [\n      {\n        id: \"program\",\n        type: \"dhis2\",\n        label: \"Search\",       \n        resourceName: \"programs\",\n      },\n      {\n        id: \"csv_to_map\",\n        type: \"csv\",\n      },\n    ],\n\n    code: `\n\nconst programId = parameters.program.id;\n\nconst api = await dhis2.api();\nconst program = await api.get(\"programs/\" + programId, {\n  fields:\n    \"id,name,categoryCombo[id,name,categoryOptionCombos[id,name]]\" +\n    \",trackedEntityType[id,name,code,trackedEntityTypeAttributes[id,name,trackedEntityAttribute[id,name,code,valueType,optionSet[name,options[id,name,code]]]]]\" +\n    \",programStages[id,name,programStageDataElements[compulsory,dataElement[id,name,code,valueType,optionSet[name,options[id,name,code]]]]\"\n});\n\nconst codify = name => {\n  if (name == undefined) {\n    return undefined;\n  }\n  return name\n    .toLowerCase()\n    .normalize(\"NFD\")\n    .replace(/[\\\\u0300-\\\\u036f]/g, \"\")\n    .replace(/[\\\\(\\\\):]/g, \"\")\n    .split(\",\")\n    .join(\"_\")\n    .split(\"'\")\n    .join(\"_\")\n    .split(\"-\")\n    .join(\"_\")\n    .split(\" \")\n    .join(\"_\")\n    .split(String.fromCharCode(8217))\n    .join(\"_\")\n    .split(\"?\")\n    .join(\"_\")\n    .replace(/__/, \"_\")\n    .replace(/_+/g, \"_\");\n};\n\nconst targetOptionSetsRaw = [];\n\nconst targetColumns = [\n  {\n    code: \"organisation_unit_uid\",\n    id: \"organisation_unit_uid\",\n    value_type: \"UID\",\n    name: \"organisation_unit_uid\",\n    required: true,\n    option_set: \"\",\n    kind: \"program.orgunitid\"\n  }\n];\n\nif (program.categoryCombo.name !== \"default\") {\n  targetColumns.push({\n    code: \"attribute_category_option\",\n    id: \"attributeCategoryOption\",\n    value_type: \"UID\",\n    name: program[\"categoryCombo\"][\"name\"],\n    required: true,\n    option_set: codify(program.categoryCombo.name),\n    kind: \"program.aoc\"\n  });\n\n  for (let option of program[\"categoryCombo\"][\"categoryOptionCombos\"]) {\n    targetOptionSetsRaw.push({\n      option_set: codify(program.categoryCombo.name),\n      value: option.id,\n      name: option.name\n    });\n  }\n}\n\nif (program.trackedEntityType) {\n  targetColumns.push({\n    code: \"enrollment_date\",\n    id: \"enrollment_date\",\n    value_type: \"DATE\",\n    name: \"enrollment date\",\n    required: true,\n    option_set: \"\",\n    kind: \"enrollmentDate\"\n  });\n\n  for (let tei_attribute of program.trackedEntityType\n    .trackedEntityTypeAttributes) {\n    code = codify(tei_attribute[\"name\"]);\n    targetColumns.push({\n      code: \"tei.\" + code,\n      id: tei_attribute[\"trackedEntityAttribute\"][\"id\"],\n      name: tei_attribute[\"name\"],\n      required: true,\n      value_type: tei_attribute.trackedEntityAttribute.valueType,\n      option_set: tei_attribute.trackedEntityAttribute.optionSet\n        ? codify(tei_attribute.trackedEntityAttribute.optionSet.name)\n        : undefined,\n      kind: \"tei.attributes\"\n    });\n\n    if (tei_attribute.trackedEntityAttribute.optionSet) {\n      for (let option of tei_attribute.trackedEntityAttribute.optionSet\n        .options) {\n        targetOptionSetsRaw.push({\n          option_set: codify(\n            tei_attribute.trackedEntityAttribute.optionSet.name\n          ),\n          value: option.code,\n          name: option.name\n        });\n      }\n    }\n  }\n}\n\nfor (let programStage of program.programStages) {\n  const stage_code = codify(programStage.name);\n  targetColumns.push({\n    code: stage_code + \".event_date\",\n    id: programStage.id + \".event_date\",\n    name: programStage.name + \" - Event date\",\n    value_type: \"DATE\",\n    required: true,\n    kind: \"program_stage.event_date\"\n  });\n\n  targetColumns.push({\n    code: stage_code + \".completed\",\n    id: programStage.id + \".completed\",\n    name: programStage.name + \" - Completed\",\n    value_type: \"BOOLEAN\",\n    required: true,\n    kind: \"program_stage.completed\"\n  });\n  for (let programStageDataElement of programStage.programStageDataElements) {\n    const dataElement = programStageDataElement.dataElement;\n    targetColumns.push({\n      code: stage_code + \".\" + codify(dataElement.name),\n      id: programStage.id + \".\" + dataElement.id,\n      name: programStage.name + \" - \" + dataElement.name,\n      value_type: dataElement.valueType,\n      option_set: dataElement.optionSet\n        ? codify(dataElement.optionSet.name)\n        : undefined,\n      kind: \"program_stage.de\"\n    });\n    if (dataElement.optionSet) {\n      for (let option of dataElement.optionSet.options) {\n        targetOptionSetsRaw.push({\n          option_set: codify(dataElement.optionSet.name),\n          value: option.code,\n          name: option.name\n        });\n      }\n    }\n  }\n}\n\nconst targetOptionSets = _.uniqWith(targetOptionSetsRaw, _.isEqual);\n\nconst workbook = await XlsxPopulate.fromBlankAsync();\nif (parameters.csv_to_map) {\n  const sourceColumnsSheet = workbook.addSheet(\"source-columns\");\n  sourceColumnsSheet.cell(\"A1\").value([[\"code\", \"name\"]]);\n  sourceColumnsSheet\n    .cell(\"A2\")\n    .value(parameters.csv_to_map.meta.fields.map(s => [codify(s), s]));\n}\nconst targetColumnsSheet = workbook.addSheet(\"target-columns\");\nconst targetColumnsCols = Object.keys(targetColumns[0]);\ntargetColumnsSheet.name(\"target-columns\");\ntargetColumnsSheet.cell(\"A1\").value([targetColumnsCols]);\n\nconst targetColumnsValues = targetColumns.map(option =>\n  targetColumnsCols.map(c => option[c])\n);\n\nif (targetOptionSets.length == 0) {\n  targetOptionSets.push({ option_set: \"\", value: \"\", name: \"\" });\n}\n\ntargetColumnsSheet.cell(\"A2\").value(targetColumnsValues);\n\nconst targetOptionsSheet = workbook.addSheet(\"target-optionsets\");\n\nconst targetOptionsSetCols = Object.keys(targetOptionSets[0]);\ntargetColumnsSheet.cell(\"A1\").value([targetColumnsCols]);\n\ntargetColumnsSheet.cell(\"H1\").value([[\"accepted_values\", \"labels\"]]);\n\ntargetColumns.map((col, index) => {\n  const rowIndex = index + 2;\n  targetColumnsSheet\n    .cell(\"H\" + rowIndex)\n    .formula(\n      \"ArrayFormula(TEXTJOIN(\\\\\", \\\\\",TRUE,IF('target-optionsets'!$A$2:$B$5000=F\" +\n        rowIndex +\n        \",'target-optionsets'!$B$2:$B$5000,\\\\\"\\\\\")))\"\n    );\n  targetColumnsSheet\n    .cell(\"I\" + rowIndex)\n    .formula(\n      \"ArrayFormula(TEXTJOIN(\\\\\", \\\\\",TRUE,IF('target-optionsets'!$A$2:$B$5000=F\" +\n        rowIndex +\n        \",'target-optionsets'!$C$2:$C$5000,\\\\\"\\\\\")))\"\n    );\n});\n\nconst targetOptionsSetValues = targetOptionSets.map(option =>\n  targetOptionsSetCols.map(c => option[c])\n);\n\ntargetOptionsSheet.cell(\"A1\").value([targetOptionsSetCols]);\ntargetOptionsSheet.cell(\"A2\").value(targetOptionsSetValues);\n\nXlsxPopulate.openAsBlob(workbook, \"mappings-\" + programId + \".xlsx\");\n\nreturn \"the xls works in google sheet but NOT in open office\";\n\n`,\n  },\n];\nexport default recipes;\n","import React, { useState } from \"react\";\nimport { useQuery } from \"react-query\";\n\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Box from \"@material-ui/core/Box\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Paper from \"@material-ui/core/Paper\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { Fab } from \"@material-ui/core\";\nimport builtInRecipes from \"./recipes\";\n\nimport { loadRecipes } from \"./support/loadRecipes\";\n\nconst useStyles = makeStyles(theme => ({\n  search: {\n    width: 280,\n    margin: 10,\n    paddingLeft: 10\n  },\n  card: {\n    minWidth: 275,\n    maxWidth: 300,\n    minHeight: 150,\n    maxHeight: 250,\n    margin: \"10px\"\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\"\n  },\n  title: {\n    fontSize: 18\n  },\n  pos: {\n    marginBottom: 12\n  },\n  fab: {\n    position: \"fixed\",\n    zIndex: 10,\n    bottom: theme.spacing(4),\n    right: theme.spacing(4),\n    backgroundColor: \"red\",\n    color: \"white\"\n  }\n}));\n\nconst RecipesPage = (props) => {\n  const { dhis2, onNewRecipe, history, freshRecipe } = props;\n  const classes = useStyles();\n  const [filter, setFilter] = useState(\"\");\n  const handleInputChange = e => {\n    const { value } = e.target;\n    setFilter(value);\n  };\n  const [recipes, setRecipes] = useState(undefined);\n\n  const loadRecipesQuery = useQuery(\"loadRecipes\", \n    async () => {\n      const tasks = await loadRecipes(dhis2, freshRecipe)\n      return tasks;\n    },\n    {\n      onSuccess: (tasks) => {\n        setRecipes(tasks.concat(builtInRecipes.sort((a, b) => a.name > b.name)));\n      },\n      onError: (error) => {\n        console.log(error);\n      }\n    }\n  )\n  \n  const isLoading = loadRecipesQuery.isLoading || loadRecipesQuery.isFetching || loadRecipesQuery.isRefetching;\n  return (\n    <>\n     {isLoading && <span>Loading...</span>}\n     {recipes && (\n       <div>\n        <Paper className={classes.search}>\n          <IconButton\n            type=\"submit\"\n            className={classes.iconButton}\n            aria-label=\"search\"\n          >\n            <SearchIcon />\n          </IconButton>\n          <InputBase\n            className={classes.input}\n            placeholder=\"Search\"\n            inputProps={{ \"aria-label\": \"search\" }}\n            onChange={handleInputChange}\n            value={filter}\n          />\n        </Paper>\n        <Fab className={classes.fab + \" no-print\"} onClick={() => onNewRecipe(history)}>\n          <AddIcon />\n        </Fab>\n        <Box\n          display=\"flex\"\n          width=\"100%\"\n          justifyContent=\"space-between\"\n          flexWrap=\"wrap\"\n          alignItems=\"flex-center\"\n          alignContent=\"space-around\"\n        >\n          \n          {recipes\n            .filter(recipe =>\n              recipe.name.toLowerCase().includes(filter.toLowerCase())\n            )\n            .map(recipe => (\n              <Card\n                key={recipe.id}\n                className={classes.card}\n                style={{\n                  flex: \"10 10 20%\",\n                  alignSelf: \"stretch\",\n                  alignContent: \"stretch\",\n                  backgroundColor: recipe.local ? \"white\" : \"rgb(227 231 239)\"\n                }}\n              >\n                <CardContent>\n                  <Typography className={classes.title} gutterBottom>\n                    {recipe.name}\n                  </Typography>\n                </CardContent>\n                <CardActions>\n                  <Button\n                    size=\"small\"\n                    href={\"#/recipes/\" + recipe.id + \"/run\"}\n                    color=\"primary\"\n                  >\n                  <PlayArrowIcon />\n                    Show\n                  </Button>\n                  <span style={{ width: \"300px\" }}></span>\n                  <Button size=\"small\" href={\"#/recipes/\" + recipe.id}>\n                    Edit\n                  </Button>\n                </CardActions>\n              </Card>\n            ))\n          }\n        </Box>\n      </div>\n     )}\n    </>\n  );\n}\n\nexport default RecipesPage;\n","\nexport const loadRecipes = async (dhis2, freshRecipe) => {\n  const tasks = [];\n  const api = await dhis2.api();\n  try {\n    const keys = await api.get(\"/dataStore/taskr\");\n\n    for (let key of keys) {\n      const task = await api.get(\"/dataStore/taskr/\" + key);\n      task.local = true;\n      tasks.push(task);\n    }\n  } catch (error) {\n    console.log(error);\n  }\n  if (tasks.length === 0) {\n    tasks.push(freshRecipe());\n  }\n  return tasks;\n};\n","import { init, getInstance, getManifest } from \"d2/lib/d2\";\n\nconst ORGUNIT_FIELDS =\n  \"[id,name,ancestors[id,name],organisationUnitGroups[id,name,code]]\";\n\nclass Dhis2 {\n  /**\n   * @param url API endpoint url\n   * @param auth Authentication HTTP header content\n   */\n  constructor(argOptions) {\n    const options = argOptions || {};\n    this.url = options.url || process.env.REACT_APP_DHIS2_URL;\n    this.user = options.user || process.env.REACT_APP_USER;\n    this.password = options.password || process.env.REACT_APP_PASSWORD;\n    this.contractGroupId =\n      options.contractGroupId || process.env.REACT_APP_CONTRACT_OU_GROUP;\n    this.cache = [];\n    this.userId = \"\";\n    this.baseUrl = \"..\";\n    this.ignoredStores = [\"\"];\n    this.version = \"\";\n    this.forceHttps = options.forceHttps;\n    if (options.disableInitialize) {\n      return;\n    }\n\n    this.initialize = this.initialize();\n  }\n\n  /**\n   * Initialized the Api to a d2 instance.\n   * @returns {Api}\n   */\n  initialize() {\n    let headers =\n      process.env.NODE_ENV === \"development\"\n        ? {\n            Authorization: \"Basic \" + btoa(this.user + \":\" + this.password)\n          }\n        : null;\n    console.info(\"Using node env: \" + process.env.NODE_ENV);\n    this.d2 = getManifest(\"./manifest.webapp\")\n      .then(manifest => {\n        let baseUrl =\n          process.env.NODE_ENV === \"production\"\n            ? manifest.getBaseUrl()\n            : this.url;\n        if (this.forceHttps) {\n          baseUrl = baseUrl.replace(\"http://\", \"https://\");\n        }\n\n        console.info(\"Using URL: \" + baseUrl);\n        this.baseUrl = baseUrl;\n        return baseUrl + \"/api\";\n      })\n      .catch(e => {\n        return this.url;\n      })\n      .then(baseUrl =>\n        init({ baseUrl, headers }).then(d2 => {\n          this.user = d2.currentUser;\n          this.userId = d2.currentUser.id;\n        })\n      );\n    return this;\n  }\n\n  appVersion() {\n    return getManifest(\"./manifest.webapp\").then(manifest => {\n      return manifest.version;\n    });\n  }\n  currentUser() {\n    return getInstance().then(d2 => d2.currentUser);\n  }\n\n  systemInfoRaw() {\n    return getInstance().then(d2 => d2.system.systemInfo);\n  }\n\n  currentUserRaw() {\n    return getInstance().then(d2 =>\n      d2.Api.getApi().get(\n        \"/me?fields=:all,organisationUnits\" +\n          ORGUNIT_FIELDS +\n          \",dataViewOrganisationUnits\" +\n          ORGUNIT_FIELDS\n      )\n    );\n  }\n  organisationUnits(fields, page) {\n    return getInstance().then(d2 => {\n      return d2.Api.getApi().get(\n        \"/organisationUnits?fields=\" + fields + \"&pageSize=1000&page=\" + page\n      );\n    });\n  }\n\n  api() {\n    return getInstance().then(d2 => {\n      return d2.Api.getApi();\n    });\n  }\n  organisationUnitGroups(fields) {\n    return getInstance().then(d2 => {\n      return d2.Api.getApi().get(\n        \"/organisationUnitGroups?fields=\" + fields + \"&paging=\" + false\n      );\n    });\n  }\n\n  findOrganisationUnit(id) {\n    return getInstance().then(d2 => {\n      return d2.Api.getApi().get(\"/organisationUnits/\" + id);\n    });\n  }\n\n  dataElements(query) {\n    return getInstance().then(d2 => {\n      return d2.Api.getApi().get(\n        \"/dataElements\"+query\n      );\n    });\n  }\n\n  updateOrganisationUnit(ou) {\n    return getInstance().then(d2 => {\n      return d2.Api.getApi().update(\n        \"/organisationUnits/\" + ou.id + \"?preHeatCache=false\",\n        ou\n      );\n    });\n  }\n\n  imgUrl() {\n    return getInstance().then(d2 => {\n      return d2.Api.getApi().get(\"/attributes?filter=name:eq:imgUrl\");\n    });\n  }\n\n  addOrganisationUnitToGroup(ouId, groupId) {\n    return getInstance().then(d2 => {\n      return d2.Api.getApi().post(\n        \"/organisationUnitGroups/\" + groupId + \"/organisationUnits/\" + ouId\n      );\n    });\n  }\n\n  removeOrganisationUnitToGroup(ouId, groupId) {\n    return getInstance().then(d2 => {\n      return d2.Api.getApi().delete(\n        \"/organisationUnitGroups/\" + groupId + \"/organisationUnits/\" + ouId\n      );\n    });\n  }\n\n  findOrganisationUnitGroup(groupId) {\n    return getInstance().then(d2 => {\n      return d2.Api.getApi().get(\"/organisationUnitGroups/\" + groupId);\n    });\n  }\n\n  updateOrganisationUnitGroup(group) {\n    return getInstance().then(d2 => {\n      return d2.Api.getApi().update(\n        \"/organisationUnitGroups/\" + group.id,\n        group\n      );\n    });\n  }\n}\n\nexport default Dhis2;\n","import React from \"react\";\n\nimport {\n  FormControl,\n  InputLabel,\n  MenuItem,\n  OutlinedInput,\n  Select,\n} from \"@material-ui/core\";\nimport MUIDataTable from \"mui-datatables\";\nimport _ from \"./support/lodash\";\nimport { AsPrimitive } from \"./AsPrimitive\";\n\nconst dateFormat = /^(\\d{4})-(\\d{2})-(\\d{2}).*$/;\n\nconst isObject = (o) => typeof o === \"object\" && o !== null;\n\nconst toKeyAndValue = (record, column) => {\n    \n        let value = record[column];\n        if (\n          column == \"coordinates\" ||\n          column == \"geometry\" ||\n          Array.isArray(value)\n        ) {\n          return \"not supported for stats\";\n        }\n        if (isObject(value) && value.id) {\n          return [value.id, value];\n        }\n        if (typeof value === \"string\" && dateFormat.test(value)) {\n          return value.slice(0, 10);\n        }\n        return value;\n      \n}\n\nconst toColumnStats = (column, data) =>  {\n  let counts = {}\n  for(let record of data) {\n     const keyAndValue = toKeyAndValue(record, column)\n     let key, value \n     if (Array.isArray(keyAndValue)) {\n        key = keyAndValue[0];\n        value= keyAndValue[1]\n     } else {\n         key = keyAndValue\n         value = keyAndValue\n     }\n     if (counts[key] == undefined) {\n        counts[key] = {value: value, count: 0}   \n     }\n     counts[key].count = counts[key].count + 1\n  }\n  let total = data.length;\n  let stats = Object.values(counts).map((r) => {\n    return {\n      value: r.value,\n      count: r.count,\n      percentage: total != 0 ? parseFloat((r.count / total * 100).toFixed(2)) : undefined,\n    };\n  });\n\n  stats = _.orderBy(stats, [\"count\"], [\"desc\"]);\n  return stats;\n};\n\nconst Stats = ({ columns, data }) => {\n  const [selectedColumns, setSelectedColumns] = React.useState([columns[0]]);\n\n  const handleChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setSelectedColumns(\n      // On autofill we get a the stringified value.\n      typeof value === \"string\" ? value.split(\",\") : value\n    );\n  };\n\n  return (\n    <div>\n      <InputLabel id=\"demo-multiple-name-label\">Columns</InputLabel>\n      <Select\n        multiple\n        value={selectedColumns}\n        onChange={handleChange}\n        input={<OutlinedInput label=\"Column\" />}\n      >\n        {columns.map((column) => (\n          <MenuItem key={column} value={column}>\n            {column}\n          </MenuItem>\n        ))}\n      </Select>\n      <br />\n\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"strech\",\n          flexWrap: \"wrap\",\n          justifyContent: \"flex-start\",\n        }}\n      >\n        {selectedColumns.map((selectedColumn) => (\n          <div style={{ margin: \"3px\" }} key={selectedColumn}>\n            <MUIDataTable\n              data={toColumnStats(selectedColumn, data)}\n              columns={[\n                {\n                  name: \"value\",\n                  options: {\n                    filter: true,\n                    customBodyRender: (value) => <AsPrimitive value={value} />,\n                  },\n                },\n                {\n                  name: \"count\",\n                  options: {\n                    filter: true,\n                    customBodyRender: (value) => <AsPrimitive value={value} />,\n                  },\n                },\n                {\n                    name: \"percentage\"\n                }\n              ]}\n              title={`Stats for ${selectedColumn}`}\n            />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\nexport default Stats;\n","import React, { useState, useMemo, Suspense } from \"react\";\nimport MUIDataTable from \"mui-datatables\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport { AsPrimitive } from \"./AsPrimitive\";\nimport ErrorBoundary from \"./ErrorBoundary\";\nimport Stats from \"./Stats\";\n\nconst OrgunitMap = React.lazy(() => import(\"./OrgunitMap\"));\n\nexport function Results({ results, label, position }) {\n  const [selectedTab, setSelectedTab] = useState(1);\n\n  const memoizedKeys = useMemo(() => {\n    if (!Array.isArray(results)) {\n      return [];\n    }\n    let resultsSubSet = results;\n    if (results.length > 30000) {\n      resultsSubSet = results.slice(0, 10000);\n    }\n    const keySet = new Set();\n    resultsSubSet.forEach((r) => {\n      if (r !== null && r !== undefined) {\n        Object.keys(r).forEach((k) => keySet.add(k));\n      }\n    });\n    const keys = Array.from(keySet);\n    return keys;\n  }, [results]);\n\n  const showableMap =\n    memoizedKeys.includes(\"coordinates\") ||\n    memoizedKeys.includes(\"coordinate\") ||\n    memoizedKeys.includes(\"geometry\");\n\n  const handleChange = (event, newValue) => {\n    setSelectedTab(newValue);\n  };\n\n  const filename = (label || \"Result List\").replace(/\\s/g, \"_\") + \".csv\";\n\n  if (!Array.isArray(results)) {\n    return (\n      <div>\n        <ErrorBoundary>\n          <pre>\n            <AsPrimitive value={results}></AsPrimitive>\n          </pre>\n        </ErrorBoundary>\n      </div>\n    );\n  }\n\n  return (\n    <div style={{ width: \"80%\", maxWidth: \"80%\" }}>\n      <Tabs\n        value={selectedTab}\n        onChange={handleChange}\n        aria-label=\"simple tabs example\"\n      >\n        <Tab label=\"Table\" value={1} />\n        <Tab label=\"Map\" value={2} />\n        <Tab label=\"Stats\" value={3} />\n      </Tabs>\n      {selectedTab == 3 && <Stats columns={memoizedKeys} data={results} />}\n      {selectedTab == 2 && (\n        <Suspense fallback={<h1>Loading...</h1>}>\n          <OrgunitMap\n            lines={results}\n            position={position}\n            showableMap={showableMap}\n            showLayers={true}\n          />\n        </Suspense>\n      )}\n      {selectedTab == 1 && (\n        <MUIDataTable\n          title={label || \"Result List\"}\n          data={results}\n          columns={memoizedKeys.map((k) => {\n            return {\n              name: k,\n              options: {\n                filter:\n                  k == \"geometry\" || k == \"coordinates\"\n                    ? false\n                    : results.length < 30000,\n                customBodyRender: (value) => <AsPrimitive value={value} />,\n              },\n            };\n          })}\n          options={{\n            print: false,\n            responsive: \"scrollFullHeight\",\n            selectableRows: \"none\",\n            downloadOptions: {\n              filename: filename,\n              separator: \",\",\n            },\n            rowsPerPageOptions: [1, 20, 50, 100, 1000],\n          }}\n        />\n      )}\n    </div>\n  );\n}\n","const JSONAPIDeserializer = require(\"jsonapi-serializer\").Deserializer;\n\nclass JSONApi {\n  static deserialize(payload, options = {}) {\n    return new JSONAPIDeserializer({\n      keyForAttribute: \"camelCase\",\n      ...options,\n    }).deserialize(payload);\n  }\n}\n\nexport default JSONApi","import XlsxPopulate from \"xlsx-populate\";\n\nXlsxPopulate.openAsBlob = (workbook, filename) => {\n  workbook.outputAsync({ type: \"blob\" }).then(function(blob) {\n    if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n      window.navigator.msSaveOrOpenBlob(blob, filename || \"out.xlsx\");\n    } else {\n      var url = window.URL.createObjectURL(blob);\n      var a = document.createElement(\"a\");\n      document.body.appendChild(a);\n      a.href = url;\n      a.download = filename || \"out.xlsx\";\n      a.click();\n      window.URL.revokeObjectURL(url);\n      document.body.removeChild(a);\n    }\n  });\n};\n\nexport default XlsxPopulate;\n","export async function asyncForEach(array, callback) {\n  for (let index = 0; index < array.length; index++) {\n    await callback(array[index], index, array);\n  }\n}\nexport function arraysEqual(a, b) {\n  if (a === b)\n    return true;\n  if (a == null || b == null)\n    return false;\n  if (a.length != b.length)\n    return false;\n  // If you don't care about the order of the elements inside\n  // the array, you should sort both arrays here.\n  // Please note that calling sort on an array will modify that array.\n  // you might want to clone your array first.\n  for (var i = 0; i < a.length; ++i) {\n    if (a[i] !== b[i])\n      return false;\n  }\n  return true;\n}\n","import React from \"react\";\n\nfunction Help() {\n  return (\n    <div\n      style={{\n        float: \"right\"\n      }}\n    >\n      <br/>\n      Help :{\" \"}\n      <ul>\n        <li>\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://docs.dhis2.org/master/en/developer/html/dhis2_developer_manual_full.html#webapi_metadata_object_filter\"\n          >\n            Metadata object filter\n          </a>\n        </li>\n        <li>\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://gist.github.com/mestachs/e56a632a92a84148edda5678939626c5\"\n          >\n            Some bluesquare recipes\n          </a>\n        </li>\n        <li>\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://lodash.com/docs/4.17.15\"\n          >\n            lodash\n          </a>\n        </li>\n        <li>\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"http://turfjs.org/docs/\"\n          >\n            turf\n          </a>\n        </li>\n        <li>\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://www.papaparse.com/\"\n          >\n            Papa Parse\n          </a>\n        </li>\n        <li>\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://github.com/dtjohnson/xlsx-populate#usage\"\n          >\n            xlsx-populate\n          </a>\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nexport default Help;\n","let MONTH_NAMES = [];\n\nconst MONTH_TO_QUARTER = {\n  1: \"1\",\n  2: \"1\",\n  3: \"1\",\n  4: \"2\",\n  5: \"2\",\n  6: \"2\",\n  7: \"3\",\n  8: \"3\",\n  9: \"3\",\n  10: \"4\",\n  11: \"4\",\n  12: \"4\"\n};\n\nconst SIX_MONTHLY_TO_MONTHS = {\n  1: [1, 2, 3, 4, 5, 6],\n  2: [7, 8, 9, 10, 11, 12]\n};\n\nconst QUARTER_BY_SIX_MONTHLY = {\n  1: [1, 2],\n  2: [3, 4]\n};\n\nconst MONTH_NAMES_FR = [\n  \"Janvier\",\n  \"Février\",\n  \"Mars\",\n  \"Avril\",\n  \"Mai\",\n  \"Juin\",\n  \"Juillet\",\n  \"Août\",\n  \"Septembre\",\n  \"Octobre\",\n  \"Novembre\",\n  \"Décembre\"\n];\n\nconst MONTH_NAMES_EN = [\n  \"January\",\n  \"February\",\n  \"March\",\n  \"April\",\n  \"May\",\n  \"June\",\n  \"July\",\n  \"August\",\n  \"September\",\n  \"October\",\n  \"November\",\n  \"December\"\n];\n\nlet MONTH_NAMES_BY_QUARTER = {};\n\nconst MONTH_NUMBER_BY_QUARTER = {\n  \"1\": [\"1\", \"2\", \"3\"],\n  \"2\": [\"4\", \"5\", \"6\"],\n  \"3\": [\"7\", \"8\", \"9\"],\n  \"4\": [\"10\", \"11\", \"12\"]\n};\n\nlet eduQuarterNames = {};\n\nconst YEARLY = \"yearly\";\nconst MONTHLY = \"monthly\";\nconst QUARTERLY = \"quarterly\";\nconst SIX_MONTHLY = \"sixMonthly\";\nconst FINANCIAL_JULY = \"financialJuly\";\n\nconst SUPPORTED_PERIOD_TYPES = [\n  YEARLY,\n  MONTHLY,\n  QUARTERLY,\n  SIX_MONTHLY,\n  FINANCIAL_JULY\n];\n\nconst FORMAT_FY_JULY_QUARTER = \"fyJulyQuarter\";\nconst FORMAT_QUARTER = \"quarter\";\nconst FORMAT_MONTH = \"month\";\nconst FORMAT_MONTH_YEAR = \"monthYear\";\nconst FORMAT_SIX_MONTH = \"sixMonth\";\nconst FORMAT_EDU_QUARTER = \"eduQuarter\";\n\nconst SUPPORTED_FORMATS = [\n  FORMAT_FY_JULY_QUARTER,\n  FORMAT_QUARTER,\n  FORMAT_MONTH,\n  FORMAT_MONTH_YEAR,\n  FORMAT_SIX_MONTH,\n  FORMAT_EDU_QUARTER\n];\n\nclass DatePeriods {\n  static setLocale(local) {\n    const translations = local === \"fr\" ? MONTH_NAMES_FR : MONTH_NAMES_EN;\n    this.setMonthTranslations(translations)\n  }\n\n  static setMonthTranslations(translations) {\n    MONTH_NAMES = translations;\n    MONTH_NAMES_BY_QUARTER = {\n      \"1\": [MONTH_NAMES[0], MONTH_NAMES[1], MONTH_NAMES[2]],\n      \"2\": [MONTH_NAMES[3], MONTH_NAMES[4], MONTH_NAMES[5]],\n      \"3\": [MONTH_NAMES[6], MONTH_NAMES[7], MONTH_NAMES[8]],\n      \"4\": [MONTH_NAMES[9], MONTH_NAMES[10], MONTH_NAMES[11]]\n    };\n    eduQuarterNames = {\n      4: \"T1 - \" + MONTH_NAMES[8] + \" - \" + MONTH_NAMES[11],\n      1: \"T2 - \" + MONTH_NAMES[0] + \" - \" + MONTH_NAMES[2],\n      2: \"T3 - \" + MONTH_NAMES[3] + \" - \" + MONTH_NAMES[5],\n      3: \"XX - \" + MONTH_NAMES[6] + \" - \" + MONTH_NAMES[7]\n    };\n  }\n\n  static padMonth(n) {\n    return n < 10 ? \"0\" + n : n;\n  }\n  static month2quarter(month) {\n    return MONTH_TO_QUARTER[month];\n  }\n  static dhis2MonthPeriod(year, month) {\n    return year + \"\" + this.padMonth(month);\n  }\n  static dhis2QuarterPeriod(year, month) {\n    return year + \"Q\" + this.month2quarter(month);\n  }\n\n  static dhis2QuarterPeriodShort(month) {\n    return this.month2quarter(month);\n  }\n\n  static monthsInQuarter(quarterIntOrString) {\n    let quarter = \"\" + quarterIntOrString;\n    let months = MONTH_NUMBER_BY_QUARTER[quarter];\n    if (months === undefined) {\n      throw new Error(\"Doesn't appear to be a quarter\" + quarter);\n    }\n    return months;\n  }\n\n  static monthsNamesInQuarter(quarterIntOrString) {\n    let quarter = \"\" + quarterIntOrString;\n    let months = [];\n\n    months = MONTH_NAMES_BY_QUARTER[quarter];\n    if (months === undefined) {\n      throw new Error(\"Doesn't appear to be a quarter\" + quarter);\n    }\n    return months;\n  }\n\n  static currentQuarter() {\n    let currentDate = new Date();\n    currentDate.setMonth(currentDate.getMonth() - 2);\n    return (\n      currentDate.getFullYear() +\n      \"Q\" +\n      this.quarterByMonth(currentDate.getMonth() + 1)\n    );\n  }\n\n  static monthName(period) {\n    const year_months = this.split(period, MONTHLY);\n    const year_month = year_months[year_months.length - 1];\n    const month = year_month.slice(4);\n    const monthNumber = parseInt(month, 0);\n    return MONTH_NAMES[monthNumber - 1];\n  }\n\n  static monthNameYear(period) {\n    const year_months = this.split(period, MONTHLY);\n    const year_month = year_months[year_months.length - 1];\n    const year = year_month.slice(0, 4);\n    const month = year_month.slice(4);\n    const monthNumber = parseInt(month, 0);\n    return MONTH_NAMES[monthNumber - 1] + \" \" + year;\n  }\n\n  static sixMonthlyName(dhis2period) {\n    const yearPeriod = this.split(dhis2period, \"yearly\")[0];\n    const months = this.split(dhis2period, \"monthly\");\n    return this.monthlyNameFormat(months, yearPeriod);\n  }\n\n  static monthlyNameFormat(months, yearPeriod) {\n    return (\n      [months[0], months[months.length - 1]]\n        .map(monthPeriod => this.monthName(monthPeriod))\n        .join(\" - \") +\n      \" \" +\n      yearPeriod\n    );\n  }\n\n  static displayName(dhis2period, format) {\n    if (format === FORMAT_FY_JULY_QUARTER) {\n      return this.period2FinancialYearJulyQuarterName(dhis2period);\n    } else if (format === FORMAT_QUARTER) {\n      return this.period2QuarterName(dhis2period);\n    } else if (format === FORMAT_MONTH) {\n      return this.monthName(dhis2period);\n    } else if (format === FORMAT_MONTH_YEAR) {\n      return this.monthNameYear(dhis2period);\n    } else if (format === FORMAT_SIX_MONTH) {\n      return this.sixMonthlyName(dhis2period);\n    } else if (format === FORMAT_EDU_QUARTER) {\n      return this.eduQuarterName(dhis2period);\n    }\n\n    throw new Error(\n      \"unsupported format '\" + format + \"' see \" + SUPPORTED_FORMATS.join(\",\")\n    );\n  }\n\n  static eduQuarterName(period) {\n    let year = parseInt(period.slice(0, 4), 0);\n    let quarter = parseInt(period.slice(5, 6), 0);\n    if (quarter >= 1 && quarter < 4) {\n      year = year - 1;\n    }\n    const formatted = year + \"-\" + (year + 1) + \" \" + eduQuarterNames[quarter];\n    return formatted;\n  }\n\n  static period2QuarterName(dhis2period) {\n    const yearPeriod = this.split(dhis2period, YEARLY)[0];\n    const quarterPeriod = this.split(dhis2period, QUARTERLY)[0];\n    const monthsPeriod = this.split(quarterPeriod, MONTHLY);\n    return this.monthlyNameFormat(monthsPeriod, yearPeriod);\n  }\n\n  static period2FinancialYearJulyQuarterName(dhis2period) {\n    return (\n      this.financialJulyQuarterName(dhis2period) +\n      \" (\" +\n      this.period2QuarterName(dhis2period) +\n      \")\"\n    );\n  }\n\n  static financialJulyQuarterName(dhis2period) {\n    const yearPeriod = this.split(dhis2period, YEARLY)[0];\n    const quarterPeriod = this.split(dhis2period, QUARTERLY)[0];\n\n    let year = parseInt(yearPeriod, 0);\n    let quarter = parseInt(quarterPeriod.slice(5), 0);\n\n    if (quarter <= 2) {\n      year = year - 1;\n      quarter = quarter + 2;\n    } else {\n      quarter = quarter - 2;\n    }\n    return \"FY \" + year + \"/\" + (year + 1) + \" Quarter \" + quarter;\n  }\n\n  static formatValues(dhis2period) {\n    const quarterPeriod = this.split(dhis2period, QUARTERLY)[0];\n    const monthDhis2Periods = this.split(quarterPeriod, MONTHLY);\n    const monthPeriod =\n      this.detect(dhis2period) == MONTHLY ? dhis2period : monthDhis2Periods[0];\n    const yearPeriod = this.split(dhis2period, YEARLY)[0];\n\n    let year = parseInt(yearPeriod, 0);\n    let quarterNumber = parseInt(quarterPeriod.slice(5), 0);\n    let monthNumber = parseInt(monthPeriod.slice(4), 0);\n    let financialJulyYear = year;\n    let financialQuarterNumber;\n    if (quarterNumber <= 2) {\n      financialJulyYear = year - 1;\n      financialQuarterNumber = quarterNumber + 2;\n    } else {\n      financialQuarterNumber = quarterNumber - 2;\n    }\n    const financialJulyYearPlus1 = financialJulyYear + 1;\n\n    const subs = {\n      dhis2period: dhis2period,\n      financialJulyYear: financialJulyYear,\n      financialJulyYearPlus1: financialJulyYearPlus1,\n      year: year,\n      quarterNumber: quarterNumber,\n      financialQuarterNumber: financialQuarterNumber,\n      monthNumber: monthNumber,\n      monthName: this.monthName(monthPeriod),\n      monthQuarterStart: monthDhis2Periods[0]\n        ? this.monthName(monthDhis2Periods[0])\n        : \"\",\n      monthQuarterEnd: monthDhis2Periods[2]\n        ? this.monthName(monthDhis2Periods[2])\n        : \"\"\n    };\n\n    return subs;\n  }\n\n  static format(dhis2period, template) {\n    return this.substituteStr(template, this.formatValues(dhis2period));\n  }\n\n  static substituteStr(str, data) {\n    var output = str.replace(/(\\${([^}]+)})/g, function(match) {\n      let key = match.replace(/\\${/, \"\").replace(/}/, \"\");\n      if (data[key] !== undefined) {\n        return data[key];\n      } else {\n        throw new Error(\n          \"unknown placeholder :'\" +\n            key +\n            \"' only knows \" +\n            JSON.stringify(data)\n        );\n      }\n    });\n    return output;\n  }\n\n  static next(period) {\n    if (period.includes(\"Q\")) {\n      return this.nextQuarter(period);\n    }\n    if (period.includes(\"S\")) {\n      return this.nextSixMonth(period);\n    }\n    if (period.length === 6) {\n      return this.nextYearMonth(period);\n    }\n    if (period.length === 4) {\n      return this.nextYear(period);\n    }\n    if (period.includes(\"July\")) {\n      return this.nextFinancialJuly(period);\n    }\n\n    throw new Error(\"unsupported period format\" + period);\n  }\n\n  static previous(period) {\n    if (period.includes(\"Q\")) {\n      return this.previousQuarter(period);\n    }\n    if (period.includes(\"S\")) {\n      return this.previousSixMonth(period);\n    }\n    if (period.length === 6) {\n      return this.previousYearMonth(period);\n    }\n    if (period.length === 4) {\n      return this.previousYear(period);\n    }\n    if (period.includes(\"July\")) {\n      return this.previousFinancialJuly(period);\n    }\n\n    throw new Error(\"unsupported period format\" + period);\n  }\n\n  static detect(dhis2Period) {\n    if (dhis2Period.includes(\"Q\")) {\n      return QUARTERLY;\n    }\n    if (dhis2Period.includes(\"S\")) {\n      return SIX_MONTHLY;\n    }\n    if (dhis2Period.length === 6) {\n      return MONTHLY;\n    }\n    if (dhis2Period.length === 4) {\n      return YEARLY;\n    }\n    if (dhis2Period.includes(\"July\")) {\n      return FINANCIAL_JULY;\n    }\n    throw new Error(\"unsupported period format\" + dhis2Period);\n  }\n\n  static nextYearMonth(period) {\n    let year = parseInt(period.slice(0, 4), 0);\n    let month = parseInt(period.slice(4, 6), 0);\n    if (month === 12) {\n      year += 1;\n      month = 1;\n    } else {\n      month += 1;\n    }\n    return \"\" + year + this.padMonth(month);\n  }\n\n  static previousYearMonth(period) {\n    let year = parseInt(period.slice(0, 4), 0);\n    let month = parseInt(period.slice(4, 6), 0);\n    if (month === 1) {\n      year -= 1;\n      month = 12;\n    } else {\n      month -= 1;\n    }\n    return \"\" + year + this.padMonth(month);\n  }\n\n  static nextYear(period) {\n    let year = parseInt(period.slice(0, 4), 0);\n    return \"\" + (year + 1);\n  }\n\n  static previousYear(period) {\n    let year = parseInt(period.slice(0, 4), 0);\n    return \"\" + (year - 1);\n  }\n\n  static nextFinancialJuly(period) {\n    let year = parseInt(period.slice(0, 4), 0);\n    return \"\" + (year + 1) + \"July\";\n  }\n\n  static previousFinancialJuly(period) {\n    let year = parseInt(period.slice(0, 4), 0);\n    return \"\" + (year - 1) + \"July\";\n  }\n\n  static nextQuarter(period) {\n    let year = parseInt(period.slice(0, 4), 0);\n    let quarter = parseInt(period.slice(5, 6), 0);\n    if (quarter === 4) {\n      year += 1;\n      quarter = 1;\n    } else if (quarter < 4) {\n      quarter += 1;\n    }\n    return year + \"Q\" + quarter;\n  }\n\n  static nextSixMonth(period) {\n    let year = parseInt(period.slice(0, 4), 0);\n    let sixMonth = parseInt(period.slice(5, 6), 0);\n    if (sixMonth === 2) {\n      year += 1;\n      sixMonth = 1;\n    } else if (sixMonth < 2) {\n      sixMonth += 1;\n    }\n    return year + \"S\" + sixMonth;\n  }\n\n  static previousQuarter(period) {\n    let year = parseInt(period.slice(0, 4), 0);\n    let quarter = parseInt(period.slice(5, 6), 0);\n    if (quarter === 1) {\n      year -= 1;\n      quarter = 4;\n    } else if (quarter > 1) {\n      quarter -= 1;\n    }\n    return year + \"Q\" + quarter;\n  }\n\n  static previousSixMonth(period) {\n    let year = parseInt(period.slice(0, 4), 0);\n    let sixMonth = parseInt(period.slice(5, 6), 0);\n    if (sixMonth === 1) {\n      year -= 1;\n      sixMonth = 2;\n    } else if (sixMonth > 1) {\n      sixMonth -= 1;\n    }\n    return year + \"S\" + sixMonth;\n  }\n\n  static quarterByMonth(month) {\n    let quarter = 0;\n    if (month >= 1 && month <= 3) {\n      quarter = 1;\n    }\n    if (month >= 4 && month <= 6) {\n      quarter = 2;\n    }\n    if (month >= 7 && month <= 9) {\n      quarter = 3;\n    }\n    if (month >= 10 && month <= 12) {\n      quarter = 4;\n    }\n    return quarter;\n  }\n\n  static split(period, splitType) {\n    if (period === undefined) {\n      throw new Error(\"Can't split undefined period into \" + splitType);\n    }\n    if (period.includes(\"Q\")) {\n      return this.splitYearQuarter(period, splitType);\n    }\n    if (period.includes(\"S\")) {\n      return this.splitYearSixMonth(period, splitType);\n    }\n    if (period.includes(\"July\")) {\n      return this.splitFinancialJuly(period, splitType);\n    }\n    if (period.length === 6) {\n      return this.splitYearMonth(period, splitType);\n    }\n    if (period.length === 4) {\n      return this.splitYear(period, splitType);\n    }\n    throw new Error(\n      \"don't know how to split \" +\n        period +\n        \" as '\" +\n        splitType +\n        \"' length\" +\n        period.length\n    );\n  }\n\n  static splitFinancialJuly(period, splitType) {\n    let year = parseInt(period.slice(0, 4), 0);\n    if (splitType === MONTHLY) {\n      return [\n        [\"07\", 0],\n        [\"08\", 0],\n        [\"09\", 0],\n        [\"10\", 0],\n        [\"11\", 0],\n        [\"12\", 0],\n        [\"01\", 1],\n        [\"02\", 1],\n        [\"03\", 1],\n        [\"04\", 1],\n        [\"05\", 1],\n        [\"06\", 1]\n      ].map(\n        month_year_offset =>\n          \"\" + (year + month_year_offset[1]) + month_year_offset[0]\n      );\n    }\n\n    if (splitType === QUARTERLY) {\n      return [[\"Q3\", 0], [\"Q4\", 0], [\"Q1\", 1], [\"Q2\", 1]].map(\n        quarter_year_offset =>\n          \"\" + (year + quarter_year_offset[1]) + quarter_year_offset[0]\n      );\n    }\n\n    if (splitType === YEARLY) {\n      return [\"\" + year, \"\" + (year + 1)];\n    }\n\n    if (splitType === SIX_MONTHLY) {\n      return [year + \"S2\", year + 1 + \"S1\"];\n    }\n\n    this.unsupportedSplitType(period, splitType);\n  }\n\n  static splitYear(period, splitType) {\n    let year = parseInt(period.slice(0, 4), 0);\n    if (splitType === MONTHLY) {\n      return [\n        \"01\",\n        \"02\",\n        \"03\",\n        \"04\",\n        \"05\",\n        \"06\",\n        \"07\",\n        \"08\",\n        \"09\",\n        \"10\",\n        \"11\",\n        \"12\"\n      ].map(month => \"\" + year + month);\n    }\n\n    if (splitType === SIX_MONTHLY) {\n      return [year + \"S1\", year + \"S2\"];\n    }\n    if (splitType === QUARTERLY) {\n      return [\"Q1\", \"Q2\", \"Q3\", \"Q4\"].map(quarter => \"\" + year + quarter);\n    }\n    if (splitType === YEARLY) {\n      return [\"\" + year];\n    }\n    if (splitType === FINANCIAL_JULY) {\n      return [\"\" + (year - 1) + \"July\", \"\" + year + \"July\"];\n    }\n    this.unsupportedSplitType(period, splitType);\n  }\n\n  static splitYearQuarter(period, splitType) {\n    let year = parseInt(period.slice(0, 4), 0);\n    let quarter = parseInt(period.slice(5, 6), 0);\n    if (splitType === MONTHLY) {\n      return this.monthsInQuarter(quarter).map(month =>\n        this.dhis2MonthPeriod(year, month)\n      );\n    }\n\n    if (splitType === SIX_MONTHLY) {\n      return [quarter < 3 ? year + \"S1\" : year + \"S2\"];\n    }\n\n    if (splitType === QUARTERLY) {\n      return [period];\n    }\n    if (splitType === YEARLY) {\n      return [\"\" + year];\n    }\n    if (splitType === FINANCIAL_JULY) {\n      return quarter < 3 ? [\"\" + (year - 1) + \"July\"] : [\"\" + year + \"July\"];\n    }\n    this.unsupportedSplitType(period, splitType);\n  }\n\n  static splitYearSixMonth(period, splitType) {\n    let year = parseInt(period.slice(0, 4), 0);\n    let semester = parseInt(period.slice(5, 6), 0);\n    if (splitType === MONTHLY) {\n      return SIX_MONTHLY_TO_MONTHS[semester].map(month =>\n        this.dhis2MonthPeriod(year, month)\n      );\n    }\n    if (splitType === SIX_MONTHLY) {\n      return [period];\n    }\n    if (splitType === QUARTERLY) {\n      if (semester === 1) {\n        return [year + \"Q1\", year + \"Q2\"];\n      } else {\n        return [year + \"Q3\", year + \"Q4\"];\n      }\n    }\n    if (splitType === YEARLY) {\n      return [\"\" + year];\n    }\n    if (splitType === FINANCIAL_JULY) {\n      return semester == 1 ? [\"\" + (year - 1) + \"July\"] : [\"\" + year + \"July\"];\n    }\n    this.unsupportedSplitType(period, splitType);\n  }\n\n  static splitYearMonth(period, splitType) {\n    let year = parseInt(period.slice(0, 4), 0);\n    let month = parseInt(period.slice(4, 6), 0);\n    if (splitType === MONTHLY) {\n      return [period];\n    }\n    if (splitType === QUARTERLY) {\n      const quarter = this.month2quarter(month);\n      return [\"\" + year + \"Q\" + quarter];\n    }\n    if (splitType === SIX_MONTHLY) {\n      if (month < 7) {\n        return [year + \"S1\"];\n      } else {\n        return [year + \"S2\"];\n      }\n    }\n    if (splitType === YEARLY) {\n      return [\"\" + year];\n    }\n    if (splitType === FINANCIAL_JULY) {\n      return month < 7 ? [\"\" + (year - 1) + \"July\"] : [\"\" + year + \"July\"];\n    }\n    this.unsupportedSplitType(period, splitType);\n  }\n\n  static monthlyPeriods(year, quarter) {\n    return this.monthsInQuarter(quarter).map(month =>\n      this.dhis2MonthPeriod(year, month)\n    );\n  }\n\n  static unsupportedSplitType(period, splitType) {\n    throw new Error(\n      \"Don't know how to split : \" +\n        period +\n        \", unknown splitType \" +\n        splitType +\n        \" only knows \" +\n        SUPPORTED_PERIOD_TYPES.join(\", \")\n    );\n  }\n\n  static previousPeriods(period, numberOfPeriods) {\n    var previous = \"\";\n    var previousPeriods = [];\n\n    for (var i = 0; i < numberOfPeriods; i++) {\n      if (i > 0) {\n        period = previousPeriods[i - 1];\n      }\n      previous = this.previous(period);\n      previousPeriods.push(previous);\n    }\n    return previousPeriods.reverse();\n  }\n\n  static nextPeriods(period, numberOfPeriods) {\n    var next = \"\";\n    var nextPeriods = [];\n\n    for (var i = 0; i < numberOfPeriods; i++) {\n      if (i > 0) {\n        period = nextPeriods[i - 1];\n      }\n      next = this.next(period);\n      nextPeriods.push(next);\n    }\n    return nextPeriods;\n  }\n}\n\nexport default DatePeriods;\n","import React, { useState, useEffect } from \"react\";\n\nimport TextField from \"@material-ui/core/TextField\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport XlsxPopulate from \"./support/XlsxPopulateOpenAsBlob\";\nimport PapaParse from \"papaparse\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Typography from \"@material-ui/core/Typography\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport throttle from \"lodash/throttle\";\n\nconst Dhis2Search = props => {\n  const {\n    dhis2,\n    resourceName,\n    style,\n    name,\n    label,\n    onChange,\n    filter,\n    defaultValue\n  } = props;\n  const [inputValue, setInputValue] = React.useState(defaultValue);\n\n  const [options, setOptions] = React.useState([]);\n  const [selectedOption, setSelectedOption] = React.useState([]);\n  const handleChange = event => {\n    setInputValue(event.target.value);\n  };\n\n  const fetchMemo = React.useMemo(\n    () =>\n      throttle((input, callback) => {\n        dhis2\n          .api()\n          .then(api => {\n            const filters = [\"name:ilike:\" + input.input];\n            if (filter) {\n              filters.push(filter);\n            }\n            return api.get(resourceName, {\n              filter: filters,\n              fields: \"id,name\"\n            });\n          })\n          .then(f => {\n            setOptions(f[resourceName]);\n            return f[resourceName];\n          });\n      }, 200),\n    []\n  );\n  React.useEffect(() => {\n    console.log(\"defaultValue\", defaultValue, inputValue);\n    setInputValue(defaultValue);\n  }, [setInputValue]);\n  React.useEffect(() => {\n    let active = true;\n    if (inputValue === \"\") {\n      setOptions([]);\n      return undefined;\n    }\n\n    fetchMemo({ input: inputValue }, results => {\n      if (active) {\n        setOptions(results || []);\n      }\n    });\n\n    return () => {\n      active = false;\n    };\n  }, [inputValue, fetchMemo]);\n\n  const onSearchChange = (evt, value) => {\n    onChange(name, value, resourceName);\n    setSelectedOption(value);\n  };\n\n  return (\n    <Autocomplete\n      style={style}\n      getOptionLabel={option =>\n        typeof option === \"string\" ? option : option.name\n      }\n      filterOptions={x => x}\n      options={options}\n      onChange={onSearchChange}\n      autoComplete\n      includeInputInList\n      freeSolo\n      searchText={defaultValue}\n      defaultValue={defaultValue}\n      renderInput={params => (\n        <TextField\n          {...params}\n          name={name}\n          label={\n            label || (\"Search for \" + resourceName)\n          }\n          fullWidth\n          onChange={handleChange}\n          value={inputValue}\n        />\n      )}\n      renderOption={option => {\n        return <span name={name}>{option.name}</span>;\n      }}\n    />\n  );\n};\n\nconst Params = props => {\n  const defaultValues = {};\n  props.params.forEach(\n    param => (defaultValues[param[\"id\"]] = param[\"default\"])\n  );\n  useEffect(() => {\n    props.onParametersChange(defaultValues);\n  }, []);\n\n  const [parameters, setParameters] = useState(defaultValues);\n  const onChange = e => {\n    const { name, value } = e.target;\n    const newParameters = { ...parameters, [name]: value };\n    setParameters(newParameters);\n    props.onParametersChange(newParameters);\n  };\n\n  function parseExcelFile(inputElement) {\n    const elementName = inputElement.target.name;\n    const files = inputElement.target.files || [];\n    if (!files.length) return;\n    const file = files[0];\n    XlsxPopulate.fromDataAsync(file).then(function(workbook) {\n      const newParameters = {\n        ...parameters,\n        [elementName]: workbook\n      };\n      setParameters(newParameters);\n      props.onParametersChange(newParameters);\n    });\n  }\n\n  function parserJson(inputElement) {\n    const elementName = inputElement.target.name;\n    const files = inputElement.target.files || [];\n    var reader = new FileReader();\n    if (!files.length) return;\n    const file = files[0];\n    reader.onload = function(event) {\n      var jsonObj = JSON.parse(event.target.result);\n\n      const newParameters = {\n        ...parameters,\n        [elementName]: jsonObj\n      };\n      setParameters(newParameters);\n      props.onParametersChange(newParameters);\n    };\n\n    reader.readAsText(file);\n  }\n\n  function parserCsv(evt) {\n    const files = evt.target.files || [];\n    if (!files.length) return;\n    var file = evt.target.files[0];\n    const elementName = evt.target.name;\n    PapaParse.parse(file, {\n      header: true,\n      dynamicTyping: true,\n      complete: function(data) {\n        const newParameters = {\n          ...parameters,\n          [elementName]: data\n        };\n        setParameters(newParameters);\n        props.onParametersChange(newParameters);\n      }\n    });\n  }\n\n  const onSearchChange = (elementName, data) => {\n    const newParameters = {\n      ...parameters,\n      [elementName]: data\n    };\n    setParameters(newParameters);\n    props.onParametersChange(newParameters);\n  };\n\n  const style = { marginBottom: \"10px\", width: 400 };\n  return (\n    <>\n      <h3>Parameters</h3>\n      {props.params.map(param => {\n        const k = param.id;\n        const v = param;\n        const label = param.label || k;\n        return (\n          <div>\n            {v.type == \"select\" && (\n              <FormControl>\n                <InputLabel style={{ marginLeft: \"10px\" }}>{label}</InputLabel>\n                <Select\n                  name={k}\n                  value={parameters[k]}\n                  onChange={onChange}\n                  style={style}\n                  helperText={v.helperText}\n                >\n                  {v.choices.map(([val, label]) => (\n                    <MenuItem key={val} value={val}>\n                      {label}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            )}\n            {v.type == \"text\" && (\n              <TextField\n                width={200}\n                name={k}\n                label={label}\n                value={parameters[k]}\n                onChange={onChange}\n                style={style}\n                helperText={v.helperText}\n              />\n            )}\n            {v.type == \"xlsx\" && (\n              <>\n                <InputLabel style={{ marginLeft: \"10px\" }}>{label}</InputLabel>\n                <input\n                  type=\"file\"\n                  name={k}\n                  onChange={parseExcelFile}\n                  accept=\".xlsx\"\n                  style={style}\n                  helperText={v.helperText}\n                ></input>\n                <p>{v.helperText}</p>\n              </>\n            )}\n            {v.type == \"csv\" && (\n              <>\n                <InputLabel style={{ marginLeft: \"10px\" }}>{label}</InputLabel>\n                <input\n                  type=\"file\"\n                  name={k}\n                  onChange={parserCsv}\n                  accept=\".csv\"\n                  style={style}\n                ></input>\n                <Typography>{v.helperText}</Typography>\n              </>\n            )}\n            {v.type == \"json\" && (\n              <>\n                <InputLabel style={{ marginLeft: \"10px\" }}>{label}</InputLabel>\n                <input\n                  type=\"file\"\n                  name={k}\n                  onChange={parserJson}\n                  accept=\".json\"\n                  style={style}\n                ></input>\n                <Typography>{v.helperText}</Typography>\n              </>\n            )}\n            {v.type == \"dhis2\" && (\n              <Dhis2Search\n                style={style}\n                dhis2={props.dhis2}\n                resourceName={v.resourceName}\n                filter={v.filter}\n                defaultValue={v.default}\n                name={k}\n                label={label}\n                onChange={onSearchChange}\n              />\n            )}\n\n            <br></br>\n          </div>\n        );\n      })}\n    </>\n  );\n};\n\nexport default Params;\n","import React, { useState } from \"react\";\nimport { useMutation, useQuery } from \"react-query\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport _ from \"./support/lodash\";\n\nconst DeleteButton = (props) => {\n  const [confirmOpen, setConfirmOpen] = useState(false);\n  const { dhis2, recipe } = props;\n\n  const deleteButtonStyle = {\n    marginRight: \"10rem\",\n    float: \"right\",\n  };\n\n  const verifyRecipeQuery = useQuery(\n    \"verifyRecipe\",\n    async () => {\n      const api = await dhis2.api();\n      await api.get(\"/dataStore/taskr/\" + recipe.id);\n    },\n    {\n      retry: false,\n    }\n  );\n\n  const recipeExists = verifyRecipeQuery?.isSuccess;\n\n  const handleDeleteMutation = useMutation(\n    async () => {\n      _.downloadFile({\n        data: JSON.stringify(recipe),\n        fileName: `recipe-${recipe.id}.json`,\n        fileType: \"text/json\",\n      });\n      const api = await dhis2.api();\n      await api.delete(\"/dataStore/taskr/\" + recipe.id, recipe);\n    },\n    {\n      onSuccess: (apiResponse) => {\n        window.location.replace(\"/#/recipes\");\n        window.location.reload();\n      },\n      onError: (error) => {\n        alert(\"There was a problem\");\n      },\n    }\n  );\n  return (\n    <span style={deleteButtonStyle}>\n      <Button\n        onClick={() => setConfirmOpen(true)}\n        variant=\"contained\"\n        color=\"secondary\"\n        disabled={!recipeExists || recipe.local}\n      >\n        Delete\n      </Button>\n      <Dialog\n        open={confirmOpen}\n        onClose={() => setConfirmOpen(false)}\n        aria-labelledby=\"confirm-dialog\"\n      >\n        <DialogContent>\n          \"Are you sure that you want to delete this recipe? A JSON file will be\n          automatically downloaded as a back-up.\"\n        </DialogContent>\n        <DialogActions>\n          <Button\n            variant=\"contained\"\n            onClick={() => setConfirmOpen(false)}\n            color=\"primary\"\n          >\n            Cancel\n          </Button>\n          <Button\n            variant=\"contained\"\n            onClick={() => {\n              setConfirmOpen(false);\n              handleDeleteMutation.mutate();\n            }}\n            color=\"primary\"\n          >\n            Continue\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </span>\n  );\n};\nexport default DeleteButton;\n","import { Results } from \"./Results\";\nimport React, { useState, useEffect, Suspense } from \"react\";\nimport \"./App.css\";\nimport JSONApi from \"./support/JSONApi\";\nimport _ from \"lodash\";\n\nimport XlsxPopulate from \"./support/XlsxPopulateOpenAsBlob\";\n\nimport FetchInterceptor from \"./support/FetchInterceptor\";\n\nimport { asyncForEach } from \"./support/asyncForEach\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport AceEditor from \"react-ace\";\n\nimport \"ace-builds/src-noconflict/ext-searchbox\";\nimport \"ace-builds/src-noconflict/ext-language_tools\";\nimport \"ace-builds/src-noconflict/mode-javascript\";\nimport \"ace-builds/src-noconflict/theme-monokai\";\nimport \"ace-builds/src-noconflict/snippets/javascript\";\nimport { Ace } from \"ace-builds\";\n\nimport Help from \"./Help\";\nimport DatePeriods from \"./support/DatePeriods\";\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport prettier from \"prettier/standalone\";\nimport parser from \"prettier/parser-babylon\";\n\nimport Params from \"./Params\";\n\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\n\nimport DeleteButton from \"./DeleteButton\";\n\nconst IdyllReport = React.lazy(() => import(\"./IdyllReport\"));\n\nconst position = [-12.9487, 9.0131];\nconst AsyncFunction = Object.getPrototypeOf(async function() {}).constructor;\n\nlet setOutRequest = undefined;\nconst interceptor = FetchInterceptor.register({\n  onBeforeRequest(request, controller) {\n    if (setOutRequest) {\n      setOutRequest([request.url, request.method, \"running\"]);\n    }\n  },\n  onRequestSuccess(response, request, controller) {\n    if (setOutRequest) {\n      setOutRequest([request.url, request.method, \"success\", response.status]);\n    }\n  },\n  onRequestFailure(response, request, controller) {\n    if (setOutRequest) {\n      setOutRequest([request.url, request.method, \"failed\", response.status]);\n    }\n  },\n});\n\nconst markup = ``;\n\nclass DataSets {\n  constructor() {\n    this.registeredCount = 0;\n    this.datasets = {};\n  }\n  register(datasetName, data) {\n    this.datasets[datasetName] = data;\n    this.registeredCount += 1;\n    return this;\n  }\n  reset(mode) {\n    for (var member in this.datasets) {\n      delete this.datasets[member];\n    }\n    this.registeredCount = 0;\n    if (mode == \"run\" && this.reRun) {\n      this.reRun();\n    }\n    if (mode == \"clear\" && this.clearResults) {\n      this.clearResults();\n    }\n  }\n\n  asVars() {\n    return this.datasets;\n  }\n}\n\nfunction Editor({ recipe, dhis2, onSave, editable, autorun }) {\n  const [showEditor, setShowEditor] = useState(recipe.editable);\n  const [dataSets, setDataSets] = useState(new DataSets());\n  if (showEditor && editable == false) {\n    setShowEditor(false);\n  }\n  const [height, setHeight] = useState(400);\n  const [width, setWidth] = useState(\"80%\");\n  const [autorunStarted, setAutorunStarted] = useState(false);\n  const [propertyEdited, setPropertyEdited] = useState(\"code\");\n  const [name, setName] = useState(recipe.name);\n  const [code, setCode] = useState(recipe.code);\n  const [report, setReport] = useState(recipe.report || markup);\n  const [results, setResults] = useState(undefined);\n  const [requests, setRequests] = useState([]);\n  const [parameters, setParameters] = useState({});\n  const [parameterDefinitionsJson, setParameterDefinitionsJson] = useState(\n    recipe.params ? JSON.stringify(recipe.params, null, 4) : \"[]\"\n  );\n  const [parameterDefinitions, setParameterDefinitions] = useState(\n    recipe.params\n  );\n\n  setOutRequest = setRequests;\n  const [error, setError] = useState(\"\");\n  const parametersDefinitionsChange = (value) => {\n    setParameterDefinitionsJson(value);\n    try {\n      setParameterDefinitions(JSON.parse(value));\n    } catch (error) {\n      setError(error.message + \" \" + value);\n    }\n  };\n  async function onRun(code) {\n    setError(undefined);\n    setResults(undefined);\n    try {\n      const prettyCode = prettier.format(code, {\n        parser: \"babel\",\n        plugins: [parser],\n      });\n      setCode(prettyCode);\n      const body = prettyCode.includes(\"return \")\n        ? prettyCode\n        : \"return \" + prettyCode;\n      const libs = [\n        { identifier: \"dhis2\", entryPoint: async () => dhis2 },\n        { identifier: \"asyncForEach\", entryPoint: async () => asyncForEach },\n        {\n          identifier: \"_\",\n          entryPoint: async () => {\n            const lodash = await import(\"./support/lodash\");\n            return lodash.default;\n          },\n        },\n        {\n          identifier: \"turf\",\n          entryPoint: async () => {\n            const turf = await import(\"./support/turf\");\n            return turf.default;\n          },\n        },\n        {\n          identifier: \"Fuse\",\n          entryPoint: async () => {\n            const Fuse = await import(\"fuse.js\");\n            return Fuse.default;\n          },\n        },\n        {\n          identifier: \"PapaParse\",\n          entryPoint: async () => import(\"papaparse\"),\n        },\n        { identifier: \"XlsxPopulate\", entryPoint: async () => XlsxPopulate },\n        { identifier: \"DatePeriods\", entryPoint: async () => DatePeriods },\n        { identifier: \"parameters\", entryPoint: async () => parameters },\n        { identifier: \"report\", entryPoint: async () => dataSets },\n        { identifier: \"JSONApi\", entryPoint: async () => JSONApi },\n      ];\n      const entryPoints = [];\n      for (let entryPoint of libs.map((l) => l.entryPoint)) {\n        entryPoints.push(await entryPoint());\n      }\n\n      const results = await new AsyncFunction(\n        ...libs.map((l) => l.identifier),\n        body\n      )(...entryPoints);\n\n      setResults(results);\n    } catch (e) {\n      setResults(undefined);\n      setError(\n        e.message +\n          \": line\" +\n          (e.lineNumber - 3) +\n          (e.columnNumber ? \":\" + e.columnNumber : \"\")\n      );\n    }\n  }\n\n  const reRun = () => {\n    onRun(code);\n  };\n  const clear = () => {\n    setResults(\"\");\n    setDataSets(new DataSets());\n  };\n\n  useEffect(() => {\n    dataSets.reRun = reRun;\n    dataSets.clearResults = clear;\n    if (autorun && autorunStarted === false) {\n      onRun(code);\n      setAutorunStarted(true);\n    }\n  }, [autorun, code, onRun, autorunStarted, setAutorunStarted, reRun]);\n\n  async function save() {\n    const modifiedRecipe = {\n      id: recipe.id,\n      name: name,\n      code: code,\n      editable: true,\n      params: parameterDefinitions,\n      report: report,\n    };\n    onSave.mutate({ modifiedRecipe });\n  }\n  const dirty = recipe.code !== code || name !== recipe.name || recipe.report !== report || !(_.isEqual(recipe.params, parameterDefinitions));\n\n  const style = {\n    marginLeft: \"20px\",\n  };\n  let editableContent = code;\n  if (propertyEdited == \"code\") {\n    editableContent = code;\n  } else if (propertyEdited == \"parameters\") {\n    editableContent = parameterDefinitionsJson || \"\";\n  } else if (propertyEdited == \"report\") {\n    editableContent = report;\n  }\n  const editablePropertySelected = (event, val) => {\n    setPropertyEdited(val.props.value);\n  };\n\n  return (\n    <div>\n      <div className=\"no-print\">\n        {editable && <Help></Help>}\n        {editable && (\n          <TextField\n            id=\"standard-name\"\n            label=\"Name\"\n            value={name}\n            style={{ width: \"400px\" }}\n            onChange={(event) => {\n              setName(event.target.value);\n            }}\n            margin=\"normal\"\n          />\n        )}\n        {editable == false && <h2>{recipe.name}</h2>}\n        <div style={{ color: \"red\" }}>{error}</div>\n        <br />\n\n        {editable && recipe && showEditor && (\n          <>\n            <FormControl>\n              <InputLabel>Edit</InputLabel>\n              <Select\n                onChange={editablePropertySelected}\n                value={propertyEdited}\n              >\n                {[\"code\", \"parameters\", \"report\"].map((m) => (\n                  <MenuItem value={m}>{m}</MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n            <AceEditor\n              readOnly={recipe && recipe.editable === false}\n              name=\"script\"\n              fontSize={18}\n              width={width}\n              height={height}\n              mode=\"javascript\"\n              theme=\"monokai\"\n              value={editableContent}\n              debounceChangePeriod={3}\n              enableBasicAutocompletion={true}\n              enableSnippets={true}\n              onChange={(val) => {\n                if (propertyEdited == \"code\") {\n                  setCode(val);\n                } else if (propertyEdited == \"parameters\") {\n                  parametersDefinitionsChange(val);\n                } else if (propertyEdited == \"report\") {\n                  setReport(val);\n                }\n              }}\n              commands={[\n                {\n                  name: \"Run\",\n                  bindKey: { win: \"Ctrl-r\", mac: \"Command-r\" },\n                  exec: (editor) => {\n                    onRun(editor.getValue());\n                  },\n                },\n                {\n                  name: \"Toggle Fullscreen\",\n                  bindKey: \"F11\",\n                  exec: (editor) => {\n                    const fullScreen = document.body.classList.contains(\n                      \"fullScreen\"\n                    );\n                    document.body.classList.toggle(\"fullScreen\");\n                    editor.container.classList.toggle(\"fullScreen\");\n                    editor.setAutoScrollEditorIntoView(!fullScreen);\n                    if (!fullScreen) {\n                      setHeight(\"100vh\");\n                      setWidth(\"100%\");\n                    } else {\n                      setHeight(400);\n                      setWidth(\"80%\");\n                    }\n                    editor.resize();\n                  },\n                },\n              ]}\n            />\n          </>\n        )}\n\n        {parameterDefinitions !== undefined &&\n          parameterDefinitions !== [] &&\n          parameterDefinitions !== {} && (\n            <>\n              <Params\n                params={parameterDefinitions}\n                onParametersChange={setParameters}\n                dhis2={dhis2}\n              ></Params>\n              <br></br>\n            </>\n          )}\n        <Button\n          onClick={(click) => {\n            onRun(code);\n          }}\n          title=\"ctrl-r to run from the editor\"\n          style={style}\n        >\n          <PlayArrowIcon />\n          Run\n        </Button>\n\n        <Button onClick={() => window.print()}>Print</Button>\n\n        {editable && (\n          <>\n            <Button\n              style={style}\n              onClick={(click) => {\n                clear();\n              }}\n            >\n              Clear\n            </Button>\n            <Button\n              style={style}\n              variant=\"contained\"\n              onClick={save}\n              disabled={!dirty}\n            >\n              Save\n            </Button>{\" \"}\n            <FormControlLabel\n              control={<Switch value={showEditor} />}\n              label=\"Hide editor\"\n              onChange={() => setShowEditor(!showEditor)}\n            />\n          </>\n        )}\n\n        <span>\n          {requests && requests.length > 1 && (\n            <>\n              <a href={requests[0]} target=\"_blank\" rel=\"noopener noreferrer\">\n                {decodeURIComponent(requests[0])}\n              </a>\n              {\"     \"}\n              {requests.slice(1).join(\" | \")}\n            </>\n          )}\n        </span>\n\n        {editable && (\n          <DeleteButton\n            dhis2={dhis2}\n            recipe={recipe}\n          /> \n        )}\n\n      </div>\n      <br />\n      <br />\n      <Results\n        key={name || \"\"}\n        results={results}\n        label={name || \"\"}\n        position={position}\n      />\n\n      {report != undefined && report.trim() !== \"\" && (\n        <Suspense fallback={<div>Loading...</div>}>\n          <IdyllReport\n            key={dataSets.registeredCount}\n            markup={report}\n            dataSets={dataSets}\n          ></IdyllReport>\n        </Suspense>\n      )}\n    </div>\n  );\n}\nexport default Editor;\n","import React, { useState, useEffect } from \"react\";\nimport { Collapse, IconButton } from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Alert from '@material-ui/lab/Alert';\n\nconst RecipeAlert = (props) => {\n  const { message, isError } = props;\n  const [open, setOpen] = useState(false);\n  const alertSeverity = (isError ? \"error\" : \"success\");\n\n  useEffect(() => {\n    setOpen(message !== undefined)\n  }, [message]);\n\n  return (\n    <>\n      <Collapse in={open}>\n        <Alert\n          severity={alertSeverity}\n          action={\n            <IconButton\n              aria-label=\"close\"\n              color=\"inherit\"\n              size=\"small\"\n              onClick={() => {\n                setOpen(false);\n              }}\n            >\n              <CloseIcon fontSize=\"inherit\" />\n            </IconButton>\n          }\n          sx={{ mb: 2 }}\n        >\n          {message}\n        </Alert>\n      </Collapse>\n    </>\n  )\n}\n\nexport default RecipeAlert;","const accents = {\n  à: \"00E0\",\n  À: \"00C0\",\n  ç: \"00E7\",\n  é: \"00E9\",\n  É: \"00C9\",\n  è: \"00E8\",\n  È: \"00C8\",\n  ê: \"00EA\",\n  Ê: \"00CA\",\n  ë: \"00EB\",\n  Ë: \"00CB\",\n  ô: \"00F4\",\n  œ: \"009C\",\n  ù: \"00F9\",\n  ú: \"00FA\",\n};\n\nexport const fixChars = (string) => {\n\n    for( let accent of Object.keys(accents)) {\n        string = string.split(accent).join(\"\\\\u\"+accents[accent])\n    }\n\n    return string\n};\n","import React, { useState } from \"react\";\nimport Editor from \"./Editor\";\nimport { useLocation } from \"react-router-dom\";\nimport { useQueryClient, useQuery } from \"react-query\";\nimport builtInRecipes from \"./recipes\";\nimport { useMutation } from \"react-query\";\nimport RecipeAlert from \"./RecipeAlert\";\nimport { fixChars } from \"./support/fixChars\";\n\nfunction useDefaultQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n\nconst RecipePage = (props) => {\n  const { match, editable, dhis2, freshRecipe } = props;\n  const query = useDefaultQuery();\n  const autorun = query.get(\"autorun\") === \"true\";\n  const recipeId = match.params.recipeId;\n  const queryClient = useQueryClient();\n  const [alertMessage, setAlertMessage] = useState(undefined);\n  const onSaveMutation = useMutation(\n    async ({ modifiedRecipe }) => {\n      const api = await dhis2.api();\n      const versionInfo = await api.get(\"system/info\");\n      if (\n        versionInfo.version === \"2.30\" ||\n        versionInfo.version === \"2.29\" ||\n        versionInfo.version === \"2.28\"\n      ) {\n        modifiedRecipe.code = fixChars(modifiedRecipe.code);\n      }\n      try {\n        const createResp = await api.post(\n          \"/dataStore/taskr/\" + modifiedRecipe.id,\n          modifiedRecipe\n        );\n        delete modifiedRecipe.fresh;\n      } catch (error) {}\n\n      const updateResp = await api.update(\n        \"/dataStore/taskr/\" + modifiedRecipe.id,\n        modifiedRecipe\n      );\n    },\n    {\n      onSuccess: () => {\n        queryClient.invalidateQueries(\"loadRecipes\");\n        queryClient.invalidateQueries(\"fetchRecipe\");\n        setAlertMessage(undefined);\n      },\n      onError: (error) => {\n        // not always an error, sometime just a string (ex page not found)\n        console.log(error);\n        setAlertMessage(\"The recipe couldn't be saved : \" + error.message);\n      },\n    }\n  );\n\n  const isError = onSaveMutation?.isError;\n\n  const fetchRecipeQuery = useQuery([\"fetchRecipe\", recipeId], async () => {\n    const api = await dhis2.api();\n\n    try {\n      const response = await api.get(\"/dataStore/taskr/\" + recipeId);\n      return response;\n    } catch (ignored) {\n      const defaultRecipe = builtInRecipes.find(\n        (recipe) => recipe.id === recipeId\n      );\n      return defaultRecipe || freshRecipe(recipeId);\n    }\n  });\n\n  return (\n    <div>\n      <br />\n      <RecipeAlert message={alertMessage} isError={isError} />\n\n      {fetchRecipeQuery.data && (\n        <Editor\n          key={fetchRecipeQuery.data.id}\n          recipe={fetchRecipeQuery.data}\n          dhis2={dhis2}\n          onSave={onSaveMutation}\n          editable={editable}\n          autorun={autorun}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default RecipePage;\n","import React, { useState } from \"react\";\nimport Editor from \"./Editor\";\nimport { useLocation } from \"react-router-dom\";\nimport { useQueryClient, useQuery } from \"react-query\";\nimport builtInRecipes from \"./recipes\";\nimport { useMutation } from \"react-query\";\nimport RecipeAlert from \"./RecipeAlert\";\nimport { fixChars } from \"./support/fixChars\";\n\nfunction useDefaultQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n\nconst RecipeGistPage = (props) => {\n  const { match, editable, dhis2, freshRecipe } = props;\n  const query = useDefaultQuery();\n  const autorun = query.get(\"autorun\") === \"true\";\n  const recipeId = match.params.recipeId;\n  const queryClient = useQueryClient();\n  const [alertMessage, setAlertMessage] = useState(undefined);\n  const onSaveMutation = useMutation(async ({ modifiedRecipe }) => {}, {\n    onSuccess: () => {\n      queryClient.invalidateQueries(\"loadRecipes\");\n      queryClient.invalidateQueries(\"fetchRecipe\");\n      setAlertMessage(undefined);\n    },\n    onError: (error) => {\n      // not always an error, sometime just a string (ex page not found)\n      console.log(error);\n      setAlertMessage(\"The recipe couldn't be saved : \" + error.message);\n    },\n  });\n\n  const isError = onSaveMutation?.isError;\n\n  const fetchRecipeQuery = useQuery([\"fetchRecipe\", recipeId], async () => {\n    const gistId = match.params.gistId;\n    const gist = await fetch(\n      `https://api.github.com/gists/${gistId}`\n    ).then((response) => response.json());\n\n    return {\n      id: gistId,\n      name: gist.description,\n      editable: editable,\n      code: gist.files[\"recipe.js\"].content,\n      params: gist.files[\"params.json\"]\n        ? JSON.parse(gist.files[\"params.json\"].content)\n        : [],\n      report: gist.files[\"report.md\"] ? gist.files[\"report.md\"].content : \"\",\n      gist,\n    };\n  });\n\n  return (\n    <div>\n      <RecipeAlert message={alertMessage} isError={isError} />\n\n      {fetchRecipeQuery.data && (\n        <>\n          <a href={fetchRecipeQuery.data.gist.html_url}>\n            {fetchRecipeQuery.data.name}\n          </a>\n          <Editor\n            key={fetchRecipeQuery.data.id}\n            recipe={fetchRecipeQuery.data}\n            dhis2={{}}\n            onSave={onSaveMutation}\n            editable={editable}\n            autorun={autorun}\n          />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default RecipeGistPage;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport { IconButton, List, ListItem, ListItemIcon, ListItemText, Drawer, Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport BorderAllIcon from \"@material-ui/icons/BorderAll\"\nimport ExitIcon from \"@material-ui/icons/ExitToApp\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  drawerHeader: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: \"8px 8px\",\n  },\n}));\n\nconst AppDrawer = () => {\n  const classes = useStyles();\n\n  const [drawerOpen, setDrawerOpen] = useState(false);\n\n  const toggleDrawer = (open, path) => (event) => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    if (path) {\n      window.location = path;\n    }\n\n    setDrawerOpen(open);\n  };\n\n  return (\n    <>\n      <IconButton\n        edge=\"start\"\n        color=\"inherit\"\n        aria-label=\"menu\"\n        onClick={toggleDrawer(true)}\n      >\n        <MenuIcon />\n      </IconButton>\n      <Drawer\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={drawerOpen}\n        onClose={toggleDrawer(false)}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={toggleDrawer(false)}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <List>\n          <ListItem \n            key={\"allRecipes\"} \n            onClick={toggleDrawer(false, \"#/recipes/\")} \n            disablePadding\n          >\n            <IconButton>\n              <ListItemIcon>\n                <BorderAllIcon />\n              </ListItemIcon>\n              <ListItemText primary={\"Recipes\"} />\n            </IconButton>\n          </ListItem>\n          <ListItem \n            key={\"dhis2\"} \n            onClick={toggleDrawer(false, \"/\")}\n            disablePadding\n          >\n            <IconButton>\n              <ListItemIcon>\n                <ExitIcon />\n              </ListItemIcon>\n              <ListItemText primary={\"Return to DHIS2\"} />\n            </IconButton>\n          </ListItem>\n        </List>\n      </Drawer>\n    </>\n  )\n}\n\nexport default AppDrawer;","import React, { Suspense } from \"react\";\nimport \"./App.css\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Typography,\n  AppBar,\n  Button,\n  Paper,\n  Toolbar,\n  Grid,\n} from \"@material-ui/core\";\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport { generateUid } from \"d2/lib/uid\";\nimport RecipesPage from \"./RecipesPage\";\nimport Dhis2 from \"./support/Dhis2\";\nimport RecipePage from \"./RecipePage\";\nimport RecipeGistPage from \"./RecipeGistPage\";\nimport AppDrawer from \"./AppDrawer\";\n\nconst DocPage = React.lazy(() => import(\"./DocPage\"));\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    margin: \"auto\",\n    backgroundColor: \"#eeeeee\",\n  },\n  paper: {\n    paddingBottom: \"100%\",\n    paddingLeft: \"20px\",\n    backgroundColor: \"#eeeeee\",\n  },\n  drawerHeader: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: \"8px 8px\",\n  },\n}));\n\nfunction freshRecipe(recipeId) {\n  return {\n    id: recipeId || generateUid(),\n    name: \"New - \",\n    code: `\n    // press crtl-r to run\n    const api = await dhis2.api();\n    const ou = await api.get(\"organisationUnits\", {\n    fields: \"id,name\",\n    paging: false\n    });\n    return ou.organisationUnits\n    `,\n    editable: true,\n    fresh: true,\n  };\n}\n\nconst dhis2 = new Dhis2();\n\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      retry: false,\n      refetchOnWindowFocus: false,\n    },\n  },\n});\n\nfunction App() {\n  const classes = useStyles();\n\n  function onNewRecipe(history) {\n    const newR = freshRecipe();\n    history.push(`/recipes/` + newR.id);\n  }\n\n  return (\n    <Router>\n      <QueryClientProvider client={queryClient}>\n        <div className={classes.root + \" reportPage\"}>\n          <AppBar position=\"static\" color=\"primary\" className=\"no-print\">\n            <Toolbar>\n              <Grid\n                container\n                justify=\"space-between\"\n                alignItems=\"center\"\n                alignContent=\"center\"\n              >\n                <Grid item>\n                  <AppDrawer classes={classes} />\n                </Grid>\n                <Grid item>\n                  <Typography variant=\"h6\" color=\"inherit\">\n                    Taskr : your task runner.\n                  </Typography>\n                </Grid>\n                <Grid item>\n                  <Button href={\"#/doc/\"} color=\"inherit\">\n                    Documentation\n                  </Button>\n                </Grid>\n              </Grid>\n            </Toolbar>\n          </AppBar>\n          <Paper className={classes.paper}>\n            <Switch>\n              <Route\n                path={`/doc`}\n                exact={true}\n                render={(props) => (\n                  <Suspense fallback={<div>Loading...</div>}>\n                    <DocPage match={props.match} />\n                  </Suspense>\n                )}\n              />\n              <Route\n                path={`/doc/:section`}\n                render={(props) => (\n                  <Suspense fallback={<div>Loading...</div>}>\n                    <DocPage match={props.match} />\n                  </Suspense>\n                )}\n              />\n              <Route\n                path={`/recipes`}\n                exact={true}\n                render={(props) => (\n                  <RecipesPage\n                    dhis2={dhis2}\n                    freshRecipe={freshRecipe}\n                    classes={classes}\n                    history={props.history}\n                    onNewRecipe={onNewRecipe}\n                    match={props.match}\n                  />\n                )}\n              />\n              <Route\n                path={`/recipes/:recipeId`}\n                exact={true}\n                render={(props) => {\n                  return (\n                    <RecipePage\n                      dhis2={dhis2}\n                      classes={classes}\n                      freshRecipe={freshRecipe}\n                      match={props.match}\n                      history={props.history}\n                      editable={true}\n                    />\n                  );\n                }}\n              />\n              <Route\n                path={`/recipes/:recipeId/run`}\n                render={(props) => (\n                  <RecipePage\n                    dhis2={dhis2}\n                    classes={classes}\n                    freshRecipe={freshRecipe}\n                    match={props.match}\n                    history={props.history}\n                    editable={false}\n                  />\n                )}\n              />\n\n              <Route\n                path={`/gh/g/:repo/:gistId`}\n                exact={true}\n                render={(props) => (\n                  <RecipeGistPage\n                    dhis2={dhis2}\n                    classes={classes}\n                    freshRecipe={freshRecipe}\n                    match={props.match}\n                    history={props.history}\n                    editable={true}\n                  />\n                )}\n              />\n              <Route\n                path={`/gh/g/:repo/:gistId/run`}\n                exact={true}\n                render={(props) => (\n                  <RecipeGistPage\n                    dhis2={dhis2}\n                    classes={classes}\n                    freshRecipe={freshRecipe}\n                    match={props.match}\n                    history={props.history}\n                    editable={false}\n                  />\n                )}\n              />\n\n              <Redirect to={\"/recipes\"} />\n            </Switch>\n          </Paper>\n        </div>\n      </QueryClientProvider>\n    </Router>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n              window.location.reload()\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}