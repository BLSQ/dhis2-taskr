{"version":3,"sources":["support/turf.js"],"names":["turf","line","geometry","latlong","coordinate","latitude","longitude","coordinates","JSON","parse","ignored","properties"],"mappings":"0HAAA,qBAEAA,aAAmBC,IACjB,IAAIC,EAAWD,EAAKC,SACpB,IACE,MAAMC,EACJF,EAAKG,YAAcH,EAAKG,WAAWC,UAAYJ,EAAKG,WAAWE,UAC3D,CAACL,EAAKG,WAAWC,SAAUJ,EAAKG,WAAWE,WAC3CL,EAAKM,YACLC,KAAKC,MAAMR,EAAKM,aAChBN,EAAKC,UAAYD,EAAKC,SAASK,YACrCL,EAAWF,QAAWG,GACtB,MAAOO,GACP,IACER,EAAWF,UAAaQ,KAAKC,MAAMR,EAAKM,cACxC,MAAOG,GACP,IACER,EAAWF,eAAkBQ,KAAKC,MAAMR,EAAKM,cAC7C,MAAOG,MASb,OANIR,GACEA,EAASS,aACXT,EAASS,WAAWV,KAAOA,GAG/BA,EAAKC,SAAWA,EACTA,GAGMF","file":"static/js/10.b941a7af.chunk.js","sourcesContent":["import * as turf from \"@turf/turf\";\n\nturf.geometrify = (line) => {\n  let geometry = line.geometry;\n  try {\n    const latlong =\n      line.coordinate && line.coordinate.latitude && line.coordinate.longitude\n        ? [line.coordinate.latitude, line.coordinate.longitude]\n        : line.coordinates\n        ? JSON.parse(line.coordinates)\n        : line.geometry && line.geometry.coordinates;\n    geometry = turf.point(latlong);\n  } catch (ignored) {\n    try {\n      geometry = turf.polygon(JSON.parse(line.coordinates));\n    } catch (ignored) {\n      try {\n        geometry = turf.multiPolygon(JSON.parse(line.coordinates));\n      } catch (ignored) {}\n    }\n  }\n  if (geometry) {\n    if (geometry.properties) {\n      geometry.properties.line = line;\n    }\n  }\n  line.geometry = geometry;\n  return geometry;\n};\n\nexport default turf;\n"],"sourceRoot":""}